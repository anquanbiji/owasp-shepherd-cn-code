title.question.sql_injection = SQL Injection Lesson

paragraph.info.1 = Injection flaws, such as <a>SQL injection</a>, occur when hostile data is sent to an interpreter as part of a command or query. The hostile data can trick the interpreter into executing unintended commands or accessing unauthorized data. Injections attacks are of a high severity. Injection flaws can be exploited to remove a system's confidentiality by accessing any information held on the system. These security risks can then be extended to execute updates to existing data affecting the systems integrity and availability. These attacks are easily exploitable as they can be initiated by anyone who can interact with the system through any data they pass to the application.
paragraph.info.2 = The following form's parameters are concatenated to a string that will be passed to a SQL server. This means that the data can be interpreted as part of the code. 
paragraph.info.3 = The objective here is to modify the result of the query with <a>SQL Injection</a> so that all of the table's rows are returned. This means you want to change the <a>boolean</a> result of the query's <a>WHERE</a> clause to return true for every row in the table. The easiest way to ensure the <a>boolean</a> result is always true is to inject a <a>boolean 'OR'</a> operator followed by a true statement like <a>1 = 1</a>.
paragraph.info.4 = If the parameter is been interpreted as a string, you can escape the string with an apostrophe. That means that everything after the apostrophe will be interpreted as SQL code.

button.hideIntro = Hide Lesson Introduction
button.showIntro = Show Lesson Introduction

challenge.description = Exploit the <a>SQL Injection</a> flaw in the following example to retrieve all of the rows in the table. The lesson's solution key will be found in one of these rows! The results will be posted beneath the search form.

hint.title = Lesson Hint
lesson.hint.1 = This is the query that you are adding data to. See if you can input something that will cause the <a>WHERE</a> clause to return <a>true</a> for every row in the table. Remember, you can escape a string using an apostrophe.
enter.user.name = Please enter the <a>user name</a> of the user that you want to look up
get.user.button = Get this user


word.info.loading = Loading...
sign.hint = Would you link a hint?
generic.error = An Error Occurred: 